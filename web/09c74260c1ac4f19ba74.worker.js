(function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s="61d4")})({0:function(e,t){},"011b":function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n("76c2"),a=n("a3f7"),o=n("c77c"),s=n("b9b9"),i=n("54ef"),u=n("6791"),c=n("a09b");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function l(e,t){let n=Object(a["a"])(e,"a","div"),i=Object(a["a"])(t,"b","div");[n,i]=Object(r["makeTypesMatch"])(n,i);const l=Object(o["a"])(n,i),d=Object(c["a"])(l),p=Object(s["a"])(i,d);return Object(u["a"])(p,d,l)}const d=Object(i["b"])({divNoNan_:l})},"015f":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("6ad5"),a=n("5959");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(e,t){if((Object(r["A"])(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Object(r["A"])(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");const n=[],o=[];return Object(a["a"])(e,n,o,t)}},"0280":function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n("043e");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t){const n=[];for(let r=0;r<t.length;r++)t[r]&&n.push(r);const a=Object(r["a"])(e,"int32"),o=Object(r["a"])([n.length,e.length],"int32");for(let r=0;r<n.length;r++){const t=a.indexToLoc(n[r]),s=r*e.length;o.values.set(t,s)}return o.toTensor()}},"043e":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("34d7"),a=n("6ad5");
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(e,t="float32",n){return t=t||"float32",a["c"](e),new r["b"](e,t,n)}},"04b8":function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}]},"04c4":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("6ad5"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t,n){const i=Object(o["a"])(e,"x","bincount"),u=Object(o["a"])(t,"weights","bincount");s["b"]("int32"===i.dtype,()=>"Error in bincount: input dtype must be int32, but got "+i.dtype),s["b"](n>=0,()=>`size must be non-negative, but got ${n}.`),s["b"](u.size===i.size||0===u.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${i.shape}, weights shape: `+u.shape+".");const c={x:i,weights:u},l={size:n};return r["a"].runKernel(a["u"],c,l)}const c=Object(i["b"])({bincount_:u})},"05bb":function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n("a3f7"),a=n("6ad5"),o=n("5959");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(e,t,n){if(Object(a["d"])(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const s=Object(r["c"])(e,n);if(3!==s.length&&1!==s.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Object(o["a"])(e,t,s,n)}},"0777":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("6ad5"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t){const n=Object(o["a"])(e,"real","complex"),i=Object(o["a"])(t,"imag","complex");s["e"](n.shape,i.shape,`real and imag shapes, ${n.shape} and ${i.shape}, must match in call to tf.complex().`);const u={real:n,imag:i};return r["a"].runKernel(a["z"],u)}const c=Object(i["b"])({complex_:u})},"07d6":function(e,t){e.exports=function(){throw new Error("define cannot be used indirect")}},"08a9":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(o["a"])(e,"x","round"),n={x:t};return r["a"].runKernel(a["wc"],n)}const u=Object(s["b"])({round_:i})},"09f4":function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n("6ae2"),a=n("c05b"),o=n("76c2"),s=n("a3f7"),i=n("526f"),u=n("deb3"),c=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function l(e,t){let n=Object(s["a"])(e,"a","maximum"),c=Object(s["a"])(t,"b","maximum");[n,c]=Object(o["makeTypesMatch"])(n,c),"bool"===n.dtype&&(n=Object(u["a"])(n,"int32"),c=Object(u["a"])(c,"int32")),Object(i["a"])(n.shape,c.shape);const l={a:n,b:c};return r["a"].runKernel(a["Ob"],l)}const d=Object(c["b"])({maximum_:l})},"0db5":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(o["a"])(e,"x","onesLike"),n={x:t};return r["a"].runKernel(a["cc"],n)}const u=Object(s["b"])({onesLike_:i})},"0eb5":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t,n=0){const s=Object(o["a"])(e,"x","pad");if(0===s.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const i={paddings:t,constantValue:n},u={x:s};return r["a"].runKernel(a["ec"],u,i)}const u=Object(s["b"])({pad_:i})},1:function(e,t){},"113e":function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}]},1212:function(e,t,n){(function(e){var r;(function(e,a,o){function s(e){var t=this,n=c();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new s(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}function c(){var e=4022871197,t=function(t){t=t.toString();for(var n=0;n<t.length;n++){e+=t.charCodeAt(n);var r=.02519603282416938*e;e=r>>>0,r-=e,r*=e,e=r>>>0,r-=e,e+=4294967296*r}return 2.3283064365386963e-10*(e>>>0)};return t}a&&a.exports?a.exports=u:n("07d6")&&n("3c35")?(r=function(){return u}.call(t,n,t,a),void 0===r||(a.exports=r)):this.alea=u})(0,e,n("07d6"))}).call(this,n("62e4")(e))},"122e":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t=null,n=!1){const s=Object(o["a"])(e,"x","mean"),i={x:s},u={axis:t,keepDims:n};return r["a"].runKernel(a["Pb"],i,u)}const u=Object(s["b"])({mean_:i})},"132b":function(e,t,n){"use strict";n.d(t,"b",(function(){return a["a"]})),n.d(t,"c",(function(){return o["a"]})),n.d(t,"d",(function(){return s["a"]})),n.d(t,"e",(function(){return i["a"]})),n.d(t,"f",(function(){return u["a"]})),n.d(t,"g",(function(){return c["a"]})),n.d(t,"h",(function(){return l["a"]})),n.d(t,"i",(function(){return d["a"]})),n.d(t,"j",(function(){return p["a"]})),n.d(t,"k",(function(){return h["a"]})),n.d(t,"l",(function(){return f["a"]})),n.d(t,"m",(function(){return m["a"]})),n.d(t,"n",(function(){return b["a"]})),n.d(t,"o",(function(){return g["a"]})),n.d(t,"p",(function(){return y["a"]})),n.d(t,"q",(function(){return x["a"]})),n.d(t,"r",(function(){return C})),n.d(t,"w",(function(){return $["a"]})),n.d(t,"s",(function(){return E["a"]})),n.d(t,"t",(function(){return _})),n.d(t,"u",(function(){return D})),n.d(t,"v",(function(){return P})),n.d(t,"x",(function(){return L["a"]})),n.d(t,"z",(function(){return B["a"]})),n.d(t,"A",(function(){return V["a"]})),n.d(t,"B",(function(){return z["a"]})),n.d(t,"C",(function(){return W["a"]})),n.d(t,"D",(function(){return U["a"]})),n.d(t,"E",(function(){return G["a"]})),n.d(t,"F",(function(){return H["a"]})),n.d(t,"G",(function(){return O["a"]})),n.d(t,"H",(function(){return K})),n.d(t,"I",(function(){return Y})),n.d(t,"J",(function(){return Z})),n.d(t,"K",(function(){return ee})),n.d(t,"L",(function(){return te["a"]})),n.d(t,"M",(function(){return ne["a"]})),n.d(t,"N",(function(){return re["a"]})),n.d(t,"O",(function(){return ae["a"]})),n.d(t,"P",(function(){return de})),n.d(t,"Q",(function(){return pe["a"]})),n.d(t,"R",(function(){return he["a"]})),n.d(t,"T",(function(){return fe["a"]})),n.d(t,"U",(function(){return me["a"]})),n.d(t,"V",(function(){return be["a"]})),n.d(t,"W",(function(){return ge["a"]})),n.d(t,"X",(function(){return xe})),n.d(t,"Y",(function(){return ve["a"]})),n.d(t,"Z",(function(){return Oe["a"]})),n.d(t,"ab",(function(){return we["a"]})),n.d(t,"bb",(function(){return je})),n.d(t,"db",(function(){return Se["a"]})),n.d(t,"eb",(function(){return Te["a"]})),n.d(t,"gb",(function(){return Ie["a"]})),n.d(t,"hb",(function(){return Ne["a"]})),n.d(t,"ib",(function(){return Ce["a"]})),n.d(t,"jb",(function(){return $e["a"]})),n.d(t,"kb",(function(){return Ee["a"]})),n.d(t,"lb",(function(){return _e})),n.d(t,"nb",(function(){return Fe["a"]})),n.d(t,"ob",(function(){return De["a"]})),n.d(t,"pb",(function(){return Me["a"]})),n.d(t,"rb",(function(){return Pe["a"]})),n.d(t,"tb",(function(){return Le["a"]})),n.d(t,"ub",(function(){return Be["a"]})),n.d(t,"wb",(function(){return Ve["a"]})),n.d(t,"Ab",(function(){return We})),n.d(t,"Bb",(function(){return Ge})),n.d(t,"Cb",(function(){return He["a"]})),n.d(t,"Db",(function(){return qe["a"]})),n.d(t,"Eb",(function(){return Ke["a"]})),n.d(t,"Fb",(function(){return Xe["a"]})),n.d(t,"Hb",(function(){return Ye["a"]})),n.d(t,"Ib",(function(){return Qe["a"]})),n.d(t,"Jb",(function(){return Ze["a"]})),n.d(t,"Kb",(function(){return Je["a"]})),n.d(t,"Lb",(function(){return at})),n.d(t,"Mb",(function(){return ot["a"]})),n.d(t,"Nb",(function(){return dt})),n.d(t,"Ob",(function(){return pt["a"]})),n.d(t,"Pb",(function(){return ht["a"]})),n.d(t,"Qb",(function(){return ft["a"]})),n.d(t,"Rb",(function(){return gt})),n.d(t,"Tb",(function(){return w["a"]})),n.d(t,"Ub",(function(){return it["a"]})),n.d(t,"Vb",(function(){return yt["a"]})),n.d(t,"Wb",(function(){return xt["a"]})),n.d(t,"Xb",(function(){return vt["a"]})),n.d(t,"Yb",(function(){return Ot["a"]})),n.d(t,"Zb",(function(){return wt["a"]})),n.d(t,"ac",(function(){return St})),n.d(t,"bc",(function(){return Tt["a"]})),n.d(t,"cc",(function(){return It["a"]})),n.d(t,"dc",(function(){return Nt["a"]})),n.d(t,"ec",(function(){return Ct["a"]})),n.d(t,"fc",(function(){return At})),n.d(t,"hc",(function(){return k["a"]})),n.d(t,"ic",(function(){return _t})),n.d(t,"jc",(function(){return Ft["a"]})),n.d(t,"kc",(function(){return tt["a"]})),n.d(t,"mc",(function(){return Dt["a"]})),n.d(t,"nc",(function(){return Mt["a"]})),n.d(t,"oc",(function(){return kt["a"]})),n.d(t,"pc",(function(){return Pt["a"]})),n.d(t,"rc",(function(){return Bt})),n.d(t,"sc",(function(){return Vt["a"]})),n.d(t,"tc",(function(){return Wt})),n.d(t,"uc",(function(){return Gt})),n.d(t,"vc",(function(){return qt})),n.d(t,"wc",(function(){return Xt})),n.d(t,"xc",(function(){return tn})),n.d(t,"yc",(function(){return nn["a"]})),n.d(t,"zc",(function(){return rn["a"]})),n.d(t,"Ac",(function(){return an["a"]})),n.d(t,"Bc",(function(){return on["a"]})),n.d(t,"Cc",(function(){return un})),n.d(t,"Dc",(function(){return dn})),n.d(t,"Ec",(function(){return hn})),n.d(t,"Fc",(function(){return fn["a"]})),n.d(t,"Gc",(function(){return mn["a"]})),n.d(t,"Hc",(function(){return bn["a"]})),n.d(t,"Ic",(function(){return gn["a"]})),n.d(t,"Jc",(function(){return yn["a"]})),n.d(t,"Kc",(function(){return xn["a"]})),n.d(t,"Lc",(function(){return ie["a"]})),n.d(t,"Mc",(function(){return vn["a"]})),n.d(t,"Nc",(function(){return wn})),n.d(t,"Oc",(function(){return jn})),n.d(t,"Pc",(function(){return Tn})),n.d(t,"Qc",(function(){return Nn})),n.d(t,"Sc",(function(){return Cn["a"]})),n.d(t,"Tc",(function(){return $n["a"]})),n.d(t,"Uc",(function(){return En["a"]})),n.d(t,"Wc",(function(){return An["a"]})),n.d(t,"Xc",(function(){return _n})),n.d(t,"Yc",(function(){return Fn["a"]})),n.d(t,"Zc",(function(){return S["a"]})),n.d(t,"ad",(function(){return Dn["a"]})),n.d(t,"cd",(function(){return Mn["a"]})),n.d(t,"dd",(function(){return Pn["a"]})),n.d(t,"ed",(function(){return T["a"]})),n.d(t,"fd",(function(){return Bn})),n.d(t,"gd",(function(){return zn})),n.d(t,"hd",(function(){return Un})),n.d(t,"id",(function(){return Hn})),n.d(t,"jd",(function(){return qn["a"]})),n.d(t,"kd",(function(){return nt["a"]})),n.d(t,"ld",(function(){return Qt["a"]})),n.d(t,"mb",(function(){return Kn["a"]})),n.d(t,"vb",(function(){return Xn["a"]})),n.d(t,"zb",(function(){return Yn["a"]})),n.d(t,"Rc",(function(){return Qn["a"]})),n.d(t,"pd",(function(){return Zn["a"]})),n.d(t,"qd",(function(){return Jn["a"]})),n.d(t,"rd",(function(){return $t["a"]})),n.d(t,"sd",(function(){return er["a"]})),n.d(t,"td",(function(){return tr["a"]})),n.d(t,"ud",(function(){return nr["a"]})),n.d(t,"vd",(function(){return rr["a"]})),n.d(t,"wd",(function(){return ar["a"]})),n.d(t,"yd",(function(){return ut["a"]})),n.d(t,"zd",(function(){return ct["a"]})),n.d(t,"Ad",(function(){return or["a"]})),n.d(t,"Bd",(function(){return I["a"]})),n.d(t,"Cd",(function(){return sr["a"]})),n.d(t,"Dd",(function(){return ir["a"]})),n.d(t,"Ed",(function(){return cr})),n.d(t,"Fd",(function(){return lr["a"]})),n.d(t,"Gd",(function(){return dr})),n.d(t,"Hd",(function(){return pr})),n.d(t,"Id",(function(){return hr})),n.d(t,"Jd",(function(){return Ae["a"]})),n.d(t,"Kd",(function(){return fr["a"]})),n.d(t,"Md",(function(){return mr["a"]})),n.d(t,"Nd",(function(){return br["a"]})),n.d(t,"Od",(function(){return yr})),n.d(t,"Pd",(function(){return xr["a"]})),n.d(t,"Qd",(function(){return vr})),n.d(t,"Rd",(function(){return Or["a"]})),n.d(t,"Sd",(function(){return wr["a"]})),n.d(t,"Td",(function(){return kr["a"]})),n.d(t,"Ud",(function(){return jr["a"]})),n.d(t,"y",(function(){return Tr})),n.d(t,"Ld",(function(){return Ir["a"]})),n.d(t,"lc",(function(){return $r})),n.d(t,"gc",(function(){return Rr})),n.d(t,"Vc",(function(){return _r["a"]})),n.d(t,"nd",(function(){return Fr["a"]})),n.d(t,"sb",(function(){return Dr["a"]})),n.d(t,"cb",(function(){return Lr})),n.d(t,"fb",(function(){return Br})),n.d(t,"S",(function(){return Vr})),n.d(t,"yb",(function(){return Wr})),n.d(t,"qc",(function(){return j["b"]})),n.d(t,"a",(function(){return j["a"]})),n.d(t,"xb",(function(){return Ro})),n.d(t,"Gb",(function(){return _o})),n.d(t,"Sb",(function(){return Fo})),n.d(t,"od",(function(){return Eo})),n.d(t,"qb",(function(){return r})),n.d(t,"bd",(function(){return Ao})),n.d(t,"md",(function(){return Do})),n.d(t,"xd",(function(){return Mo}));var r={};n.r(r),n.d(r,"conv2d",(function(){return Xr})),n.d(r,"depthwiseConv2d",(function(){return ta})),n.d(r,"matMul",(function(){return ra}));var a=n("8ae0"),o=n("a374"),s=n("4615"),i=n("9117"),u=n("4850"),c=n("df81"),l=n("4516"),d=n("e89f"),p=n("db49"),h=n("220f"),f=n("dc59"),m=n("7e36"),b=n("6002"),g=n("d1a8"),y=n("9748"),x=n("ba53"),v=n("a3f7"),O=n("649e"),w=n("487b"),k=n("a5aa"),j=n("54ef"),S=n("ffb3"),T=n("6d3c"),I=n("8888");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function N(e,t,n,r,a,o){const s=Object(v["a"])(e,"forgetBias","basicLSTMCell"),u=Object(v["a"])(t,"lstmKernel","basicLSTMCell"),c=Object(v["a"])(n,"lstmBias","basicLSTMCell"),l=Object(v["a"])(r,"data","basicLSTMCell"),d=Object(v["a"])(a,"c","basicLSTMCell"),p=Object(v["a"])(o,"h","basicLSTMCell"),h=Object(O["a"])([l,p],1),f=Object(w["a"])(h,u),m=Object(i["a"])(f,c),b=m.shape[0],g=m.shape[1]/4,y=[b,g],x=Object(T["a"])(m,[0,0],y),j=Object(T["a"])(m,[0,g],y),N=Object(T["a"])(m,[0,2*g],y),C=Object(T["a"])(m,[0,3*g],y),$=Object(i["a"])(Object(k["a"])(Object(S["a"])(x),Object(I["a"])(j)),Object(k["a"])(d,Object(S["a"])(Object(i["a"])(s,N)))),E=Object(k["a"])(Object(I["a"])($),Object(S["a"])(C));return[$,E]}const C=Object(j["b"])({basicLSTMCell_:N});var $=n("3b28"),E=n("71db"),A=n("6ad5");function R(e,t,n,r,a,o){const s=Object(v["a"])(e,"x","batchNorm"),i=Object(v["a"])(t,"mean","batchNorm"),u=Object(v["a"])(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(v["a"])(a,"scale","batchNorm")),null!=r&&(l=Object(v["a"])(r,"offset","batchNorm")),A["b"](2===s.rank,()=>"Error in batchNorm2D: x must be rank 2 but got rank "+s.rank+"."),A["b"](2===i.rank||1===i.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),A["b"](2===u.rank||1===u.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=c&&A["b"](2===c.rank||1===c.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),null!=l&&A["b"](2===l.rank||1===l.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`),Object(E["a"])(s,i,u,l,c,o)}const _=Object(j["b"])({batchNorm2d_:R});function F(e,t,n,r,a,o){const s=Object(v["a"])(e,"x","batchNorm"),i=Object(v["a"])(t,"mean","batchNorm"),u=Object(v["a"])(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(v["a"])(a,"scale","batchNorm")),null!=r&&(l=Object(v["a"])(r,"offset","batchNorm")),A["b"](3===s.rank,()=>"Error in batchNorm3D: x must be rank 3 but got rank "+s.rank+"."),A["b"](3===i.rank||1===i.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),A["b"](3===u.rank||1===u.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=c&&A["b"](3===c.rank||1===c.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),null!=l&&A["b"](3===l.rank||1===l.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`),Object(E["a"])(s,i,u,l,c,o)}const D=Object(j["b"])({batchNorm3d_:F});function M(e,t,n,r,a,o){const s=Object(v["a"])(e,"x","batchNorm"),i=Object(v["a"])(t,"mean","batchNorm"),u=Object(v["a"])(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(v["a"])(a,"scale","batchNorm")),null!=r&&(l=Object(v["a"])(r,"offset","batchNorm")),A["b"](4===s.rank,()=>"Error in batchNorm4D: x must be rank 4 but got rank "+s.rank+"."),A["b"](4===i.rank||1===i.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),A["b"](4===u.rank||1===u.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=c&&A["b"](4===c.rank||1===c.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),null!=l&&A["b"](4===l.rank||1===l.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`),Object(E["a"])(s,i,u,l,c,o)}const P=Object(j["b"])({batchNorm4d_:M});var L=n("04c4"),B=n("48db"),V=n("043e"),z=n("deb3"),W=n("5960"),U=n("c08f"),G=n("f0a9"),H=n("0777");function q(e){return Object(O["a"])(e,0)}const K=Object(j["b"])({concat1d_:q});function X(e,t){return Object(O["a"])(e,t)}const Y=Object(j["b"])({concat2d_:X});function Q(e,t){return Object(O["a"])(e,t)}const Z=Object(j["b"])({concat3d_:Q});function J(e,t){return Object(O["a"])(e,t)}const ee=Object(j["b"])({concat4d_:J});var te=n("7675"),ne=n("dd7e"),re=n("cd1f"),ae=n("1590"),oe=n("6ae2"),se=n("c05b"),ie=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ue(e,t,n,r,a){A["b"](e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,s=t,i=!1;4===t.rank&&(i=!0,s=Object(ie["a"])(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),o=[1,e[0],e[1],e[2],e[3]]);const u=o[4],c=s.shape[4];A["b"](5===o.length,()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+o.length+"."),A["b"](5===s.rank,()=>"Error in conv3dDerInput: dy must be rank 5, but got rank "+s.rank),A["b"](5===n.rank,()=>"Error in conv3dDerInput: filter must be rank 5, but got rank "+n.rank),A["b"](u===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`),A["b"](c===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${n.shape[4]}.`);const l={dy:s,filter:n},d={pad:a,strides:r,inputShape:o},p=oe["a"].runKernel(se["H"],l,d);return i?Object(ie["a"])(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const ce=Object(j["b"])({conv3DBackpropInput_:ue});function le(e,t,n,r,a){const o=Object(v["a"])(e,"x","conv3dTranspose"),s=Object(v["a"])(t,"filter","conv3dTranspose");return ce(n,o,s,r,a)}const de=Object(j["b"])({conv3dTranspose_:le});var pe=n("eff7"),he=n("c1a2"),fe=n("1e68"),me=n("2f2c"),be=n("364e"),ge=n("838f");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ye(e){const t=Object(v["a"])(e,"x","diag"),n={x:t};return oe["a"].runKernel(se["R"],n)}const xe=Object(j["b"])({diag_:ye});var ve=n("c170"),Oe=n("c77c"),we=n("011b");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ke(e,t){const n=Object(v["a"])(e,"t1","dot"),r=Object(v["a"])(t,"t2","dot");A["b"]((1===n.rank||2===n.rank)&&(1===r.rank||2===r.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);const a=1===n.rank?n.size:n.shape[1],o=1===r.rank?r.size:r.shape[0];if(A["b"](a===o,()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${o}.`),1===n.rank&&1===r.rank){const e=Object(ie["a"])(n,[1,-1]),t=Object(ie["a"])(r,[-1,1]),a=Object(w["a"])(e,t);return Object(ie["a"])(a,[])}if(1===n.rank&&2===r.rank){const e=Object(ie["a"])(n,[1,-1]),t=Object(ie["a"])(r,[r.shape[0],r.shape[1]]),a=Object(w["a"])(e,t);return Object(ie["a"])(a,[a.size])}if(2===n.rank&&1===r.rank){const e=Object(ie["a"])(r,[-1,1]),t=Object(w["a"])(n,e);return Object(ie["a"])(t,[t.size])}{const e=Object(ie["a"])(r,[r.shape[0],r.shape[1]]),t=Object(w["a"])(n,e);return t}}const je=Object(j["b"])({dot_:ke});var Se=n("75ab"),Te=n("9e38"),Ie=n("b9b9"),Ne=n("8e05"),Ce=n("4f20"),$e=n("dae8"),Ee=n("1ba2"),Ae=n("8d71");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Re(e,t,n,r="float32"){null==t&&(t=e);const a=Object(V["a"])([e,t],r),o=e<=t?e:t;for(let i=0;i<o;++i)a.set(1,i,i);const s=Object(ie["a"])(a.toTensor(),[e,t]);if(null==n)return s;if(1===n.length)return Object(Ae["a"])(Object($e["a"])(s,0),[n[0],1,1]);if(2===n.length)return Object(Ae["a"])(Object($e["a"])(Object($e["a"])(s,0),0),[n[0],n[1],1,1]);if(3===n.length)return Object(Ae["a"])(Object($e["a"])(Object($e["a"])(Object($e["a"])(s,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}const _e=Object(j["b"])({eye_:Re});var Fe=n("46b8"),De=n("d369"),Me=n("508f"),Pe=n("91a3"),Le=n("cef0"),Be=n("bb2d"),Ve=n("24b0");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ze(e){const t=Object(v["a"])(e,"x","isFinite"),n={x:t};return oe["a"].runKernel(se["tb"],n)}const We=Object(j["b"])({isFinite_:ze});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ue(e){const t=Object(v["a"])(e,"x","isInf"),n={x:t};return oe["a"].runKernel(se["ub"],n)}const Ge=Object(j["b"])({isInf_:Ue});var He=n("6fef"),qe=n("6f37"),Ke=n("e1fd"),Xe=n("b21c"),Ye=n("5894"),Qe=n("e101"),Ze=n("1359"),Je=n("46b1"),et=n("538e"),tt=n("3bb7"),nt=n("9ffd");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function rt(e){const t=Object(v["a"])(e,"x","logSigmoid"),n=Object(et["a"])(e=>{const t=Object(tt["a"])(Object(nt["a"])(Object(tt["a"])(e))),n=t=>{const n=Object(k["a"])(t,Object(S["a"])(Object(tt["a"])(e)));return n};return{value:t,gradFunc:n}});return n(t)}const at=Object(j["b"])({logSigmoid_:rt});var ot=n("804a"),st=n("36e5"),it=n("c021"),ut=n("a009"),ct=n("e053");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lt(e,t=null,n=!1){const r=Object(v["a"])(e,"x","logSumExp"),a=Object(A["I"])(t,r.shape),o=Object(it["a"])(r,a,!0),s=Object(ut["a"])(r,o),u=Object(Ce["a"])(s),c=Object(ct["a"])(u,a),l=Object(Ze["a"])(c),d=Object(i["a"])(Object(ie["a"])(o,l.shape),l);if(n){const e=Object(st["e"])(d.shape,a);return Object(ie["a"])(d,e)}return d}const dt=Object(j["b"])({logSumExp_:lt});var pt=n("e333"),ht=n("ef00"),ft=n("f183"),mt=n("526f");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function bt(e,t){const n=Object(v["a"])(e,"a","logicalXor","bool"),r=Object(v["a"])(t,"b","logicalXor","bool");return Object(mt["a"])(n.shape,r.shape),Object(pt["a"])(Object(ft["a"])(e,t),Object(ht["a"])(Object(pt["a"])(e,t)))}const gt=Object(j["b"])({logicalXor_:bt});var yt=n("9fe6"),xt=n("53fd"),vt=n("8bc9"),Ot=n("09f4"),wt=n("122e"),kt=n("c22a"),jt=n("34d7");
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function St(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(n+" is not a valid third argument to meshgrid");if(void 0===e)return[];let r=Object(v["a"])(e,"x","meshgrid",e instanceof jt["a"]?e.dtype:"float32");if(void 0===t)return[r];let a=Object(v["a"])(t,"y","meshgrid",t instanceof jt["a"]?t.dtype:"float32");const o=Object(A["O"])(r.shape),s=Object(A["O"])(a.shape);return"xy"===n?(r=Object(ie["a"])(r,[1,-1]),a=Object(ie["a"])(a,[-1,1]),[Object(w["a"])(Object(kt["a"])([s,1],r.dtype),r),Object(w["a"])(a,Object(kt["a"])([1,o],a.dtype))]):(r=Object(ie["a"])(r,[-1,1]),a=Object(ie["a"])(a,[1,-1]),[Object(w["a"])(r,Object(kt["a"])([1,s],r.dtype)),Object(w["a"])(Object(kt["a"])([o,1],a.dtype),a)])}var Tt=n("ae6d"),It=n("f0e5"),Nt=n("93db"),Ct=n("4611"),$t=n("93b2");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Et(e,t=null,n=!1){e=Object(v["a"])(e,"x","moments");const r=Object(A["I"])(t,e.shape),a=Object(wt["a"])(e,r,n);let o=a.shape;n||(o=Object(st["e"])(a.shape,r));const s=Object($t["a"])(Object(ut["a"])(Object(z["a"])(e,"float32"),Object(ie["a"])(a,o))),i=Object(wt["a"])(s,r,n);return{mean:a,variance:i}}const At=Object(j["b"])({moments_:Et});function Rt(e,t,n,r){const a=Object(v["a"])(t,"data","multiRNNCell"),o=Object(v["b"])(n,"c","multiRNNCell"),s=Object(v["b"])(r,"h","multiRNNCell");let i=a;const u=[];for(let d=0;d<e.length;d++){const t=e[d](i,o[d],s[d]);u.push(t[0]),u.push(t[1]),i=t[1]}const c=[],l=[];for(let d=0;d<u.length;d+=2)c.push(u[d]),l.push(u[d+1]);return[c,l]}const _t=Object(j["b"])({multiRNNCell_:Rt});var Ft=n("3efc"),Dt=n("d4de"),Mt=n("e22c"),Pt=n("0db5");function Lt(e,t){const n=Object(v["a"])(e,"v1","outerProduct"),r=Object(v["a"])(t,"v2","outerProduct");A["b"](1===n.rank&&1===r.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);const a=Object(ie["a"])(n,[-1,1]),o=Object(ie["a"])(r,[1,-1]);return Object(w["a"])(a,o)}const Bt=Object(j["b"])({outerProduct_:Lt});var Vt=n("0eb5");function zt(e,t,n=0){return Object(A["b"])(2===t.length,()=>"Invalid number of paddings. Must be length of 2."),Object(Vt["a"])(e,[t],n)}const Wt=Object(j["b"])({pad1d_:zt});function Ut(e,t,n=0){return Object(A["b"])(2===t.length&&2===t[0].length&&2===t[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),Object(Vt["a"])(e,t,n)}const Gt=Object(j["b"])({pad2d_:Ut});function Ht(e,t,n=0){return Object(A["b"])(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),Object(Vt["a"])(e,t,n)}const qt=Object(j["b"])({pad3d_:Ht});function Kt(e,t,n=0){return Object(A["b"])(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),Object(Vt["a"])(e,t,n)}const Xt=Object(j["b"])({pad4d_:Kt});var Yt=n("b818"),Qt=n("7580");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Zt(e,t,n,r,a,o){null==a&&(a=[1,1]),null==o&&(o=1),0===r&&(r="valid");const s=Object(v["a"])(e,"x","maxPool");let i=s,u=!1;3===s.rank&&(u=!0,i=Object(ie["a"])(s,[1,s.shape[0],s.shape[1],s.shape[2]])),A["b"](Yt["h"](o,a),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${o} and dilations '${a}'`);const c=Yt["e"](i.shape,t,o,a,r),l=[c.dilationHeight,c.dilationWidth];let d;d="same"===r?en([c.filterHeight,c.filterWidth],l):[[0,0],[0,0]];const p=1===l[0]&&1===l[1],[h,f]=Jt([c.inHeight,c.inWidth],l,d),m=p?r:"valid",b=p?i:Object(Qt["a"])(i,l,h),g="avg"===n?()=>Object(y["a"])(b,t,o,m):()=>Object(yt["a"])(b,t,o,m),x=g(),O=p?x:Object($["a"])(x,l,f);return u?Object(ie["a"])(O,[O.shape[1],O.shape[2],O.shape[3]]):O}function Jt(e,t,n){const r=n.map(e=>e[0]),a=n.map(e=>e[1]),o=e.concat(r,a),s=t.map((e,t)=>(e-o[t]%e)%e),i=a.map((e,t)=>e+s[t]),u=t.map((e,t)=>[r[t],i[t]]),c=t.map((e,t)=>[0,s[t]]);return[u,c]}function en(e,t){const n=e.map((e,n)=>e+(e-1)*(t[n]-1)),r=n.map(e=>e-1),a=r.map(e=>Math.floor(e/2)),o=r.map((e,t)=>e-a[t]);return r.map((e,t)=>[a[t],o[t]])}const tn=Object(j["b"])({pool_:Zt});var nn=n("c9f1"),rn=n("520f"),an=n("7568"),on=n("f3ae");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sn(e,t,n){const r=Object(A["O"])(e);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error("Unknown data type "+n);a=new Uint8Array(r)}for(let o=0;o<r;o++)a[o]=t();return oe["a"].makeTensor(a,e,n)}const un=Object(j["b"])({rand_:sn});var cn=n("d4e4");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ln(e,t,n=1,r="float32",a){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error("Unsupported data type "+r);const o=new cn["b"](t,n,r,a),s=Object(V["a"])(e,r);for(let i=0;i<s.values.length;i++)s.values[i]=o.nextValue();return s.toTensor()}const dn=Object(j["b"])({randomGamma_:ln});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pn(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type "+r);const o=new cn["a"](t,n,r,!1,a),s=Object(V["a"])(e,r);for(let i=0;i<s.values.length;i++)s.values[i]=o.nextValue();return s.toTensor()}const hn=Object(j["b"])({randomNormal_:pn});var fn=n("8629"),mn=n("84d6"),bn=n("d7b0"),gn=n("b500"),yn=n("917a"),xn=n("46a8"),vn=n("d08e");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function On(e){const t=Object(v["a"])(e,"x","reverse");return A["b"](1===t.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Object(vn["a"])(t,0)}const wn=Object(j["b"])({reverse1d_:On});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kn(e,t){const n=Object(v["a"])(e,"x","reverse");return A["b"](2===n.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),Object(vn["a"])(n,t)}const jn=Object(j["b"])({reverse2d_:kn});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sn(e,t){const n=Object(v["a"])(e,"x","reverse");return A["b"](3===n.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),Object(vn["a"])(n,t)}const Tn=Object(j["b"])({reverse3d_:Sn});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function In(e,t){const n=Object(v["a"])(e,"x","reverse");return A["b"](4===n.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),Object(vn["a"])(n,t)}const Nn=Object(j["b"])({reverse4d_:In});var Cn=n("08a9"),$n=n("5f2a"),En=n("015f"),An=n("b39e");function Rn(e,t,n,r,a,o=[1,1],s="NHWC"){const i=Object(v["a"])(e,"x","separableConv2d"),u=Object(v["a"])(t,"depthwiseFilter","separableConv2d"),c=Object(v["a"])(n,"pointwiseFilter","separableConv2d");let l=i,d=!1;if(3===i.rank&&(d=!0,l=Object(ie["a"])(i,[1,i.shape[0],i.shape[1],i.shape[2]])),"NCHW"===s)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");A["b"](4===l.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${l.rank}.`),A["b"](4===u.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),A["b"](4===c.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),A["b"](1===c.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),A["b"](1===c.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);const p=u.shape[2],h=u.shape[3];A["b"](c.shape[2]===p*h,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*h}, but got ${c.shape[2]}.`);const f=Object(ge["a"])(l,u,r,a,s,o),m=1,b=Object(ne["a"])(f,c,m,"valid",s);return d?Object(ie["a"])(b,[b.shape[1],b.shape[2],b.shape[3]]):b}const _n=Object(j["b"])({separableConv2d_:Rn});var Fn=n("f74c"),Dn=n("1df6"),Mn=n("6932"),Pn=n("5dc4");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ln(e,t,n){const r=Object(v["a"])(e,"x","slice1d");return A["b"](1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),Object(T["a"])(r,[t],[n])}const Bn=Object(j["b"])({slice1d_:Ln});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vn(e,t,n){const r=Object(v["a"])(e,"x","slice2d");return A["b"](2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),Object(T["a"])(r,t,n)}const zn=Object(j["b"])({slice2d_:Vn});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wn(e,t,n){const r=Object(v["a"])(e,"x","slice3d");return A["b"](3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),Object(T["a"])(r,t,n)}const Un=Object(j["b"])({slice3d_:Wn});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gn(e,t,n){const r=Object(v["a"])(e,"x","slice4d");return A["b"](4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),Object(T["a"])(r,t,n)}const Hn=Object(j["b"])({slice4d_:Gn});var qn=n("5f87"),Kn=n("1ab7"),Xn=n("4c7a"),Yn=n("69dc"),Qn=n("b61d"),Zn=n("45bb"),Jn=n("163a"),er=n("4184"),tr=n("d1f4"),nr=n("d54d"),rr=n("2fb1"),ar=n("de1a"),or=n("d30a"),sr=n("357d"),ir=n("960f"),ur=n("5959");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cr(e,t,n){if(Object(A["d"])(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Object(v["c"])(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Object(ur["a"])(e,t,r,n)}var lr=n("05bb");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dr(e,t,n){if(Object(A["d"])(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Object(v["c"])(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Object(ur["a"])(e,t,r,n)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pr(e,t,n){if(Object(A["d"])(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=Object(v["c"])(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Object(ur["a"])(e,t,r,n)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hr(e,t,n){if(Object(A["d"])(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=Object(v["c"])(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,Object(ur["a"])(e,t,r,n)}var fr=n("5616"),mr=n("7e6a"),br=n("853e");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gr(e,t,n){const r=Object(v["a"])(e,"x","unsortedSegmentSum"),a=Object(v["a"])(t,"segmentIds","unsortedSegmentSum","int32");Object(A["b"])(Object(A["v"])(n),()=>"numSegments must be of dtype int");const o={x:r,segmentIds:a},s={numSegments:n};return oe["a"].runKernel(se["hd"],o,s)}const yr=Object(j["b"])({unsortedSegmentSum_:gr});var xr=n("3a44");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vr(e,t=!0,n,r){return oe["a"].makeVariable(e,t,n,r)}var Or=n("6791"),wr=n("a780"),kr=n("5a2c"),jr=n("a09b");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
async function Sr(e,t,n){const r=Object(v["a"])(e,"tensor","boolMask"),a=Object(v["a"])(t,"mask","boolMask","bool"),o=null==n?0:n,s=a.rank,i=r.shape;A["b"](s>0,()=>"mask cannot be scalar"),A["e"](i.slice(o,o+s),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let m=o;m<o+s;m++)u*=i[m];const c=i.slice(0,o).concat([u],i.slice(o+s)),l=Object(ie["a"])(r,c),d=Object(ie["a"])(a,[-1]),p=await Object(wr["a"])(d),h=Object(tr["a"])(p,[1]),f=Object(Pe["a"])(l,h,o);return e!==r&&r.dispose(),t!==a&&a.dispose(),h.dispose(),l.dispose(),d.dispose(),p.dispose(),f}const Tr=Sr;var Ir=n("c912");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nr(e,t="euclidean",n=null,r=!1){e=Object(v["a"])(e,"x","norm");const a=Cr(e,t,n);let o=a.shape;if(r){const t=Object(A["I"])(n,e.shape);o=st["e"](a.shape,t)}return Object(ie["a"])(a,o)}function Cr(e,t,n=null){if(0===e.rank)return Object(a["a"])(e);if(1!==e.rank&&null===n)return Cr(Object(ie["a"])(e,[-1]),t,n);if(1===e.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Object(ct["a"])(Object(a["a"])(e),n);if(t===1/0)return Object(it["a"])(Object(a["a"])(e),n);if(t===-1/0)return Object(Tt["a"])(Object(a["a"])(e),n);if("euclidean"===t||2===t)return Object(Jn["a"])(Object(ct["a"])(Object(nn["a"])(Object(a["a"])(e),Object(En["a"])(2,"int32")),n));throw new Error("Error in norm: invalid ord value: "+t)}if(Array.isArray(n)&&2===n.length){if(1===t)return Object(it["a"])(Object(ct["a"])(Object(a["a"])(e),n[0]),n[1]-1);if(t===1/0)return Object(it["a"])(Object(ct["a"])(Object(a["a"])(e),n[1]),n[0]);if(t===-1/0)return Object(Tt["a"])(Object(ct["a"])(Object(a["a"])(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Object(Jn["a"])(Object(ct["a"])(Object($t["a"])(e),n));throw new Error("Error in norm: invalid ord value: "+t)}throw new Error("Error in norm: invalid axis: "+n)}const $r=Object(j["b"])({norm_:Nr});var Er=n("76c2");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ar(e,t,n,r,a=!0){const o=Object(v["a"])(e,"v","movingAverage"),s=Object(v["a"])(t,"x","movingAverage"),u=Object(v["a"])(n,"decay","movingAverage");Object(Er["assertTypesMatch"])(o,s),A["b"](A["a"](o.shape,s.shape),()=>"Shape mismatch in v and x");const c=Object(En["a"])(1),l=Object(ut["a"])(c,u);let d=Object(k["a"])(Object(ut["a"])(s,o),l);if(a){A["b"](null!=r,()=>"When using zeroDebias: true, step is required.");const e=Object(v["a"])(r,"step","movingAverage");d=Object(Oe["a"])(d,Object(ut["a"])(c,Object(nn["a"])(u,e)))}return Object(i["a"])(o,d)}const Rr=Object(j["b"])({movingAverage_:Ar});var _r=n("8bfa"),Fr=n("bc62"),Dr=n("ba40");
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Mr(e,t){if(null==t)return e.shape.slice();if(A["a"](e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pr(e,t,n,r){const a=Object(v["a"])(e,"x","dropout");if(A["b"]("float32"===a.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`),A["b"](t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return e instanceof jt["a"]?a.clone():a;const o=Mr(a,n),s=1-t,u=Object(Oe["a"])(Object(De["a"])(Object(i["a"])(Object(fn["a"])(o,0,1,"float32",r),s)),s);return Object(k["a"])(a,u)}const Lr=Object(j["b"])({dropout_:Pr});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Br(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Vr(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let o=0;o<e;++o){const s=2*Math.PI*o/(e+r-1);a[o]=t-n*Math.cos(s)}return Object(ir["a"])(a,"float32")}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function zr(e,t,n=1){const r=Object(v["a"])(e,"predictions","inTopK"),a=Object(v["a"])(t,"targets","inTopK");Object(A["b"])(r.rank>1,()=>"inTopK() expects the predictions to be of rank 2 or higher, but got "+r.rank),Object(A["b"])(r.rank-1===a.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`),Object(A["e"])(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const o=r.shape[r.shape.length-1];Object(A["b"])(n>0&&n<=o,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${o}), but got ${n}`);const s=await r.data(),i=await a.data(),[u,c]=[s.length/o,o],l=Object(A["o"])("bool",u);for(let d=0;d<u;d++){const e=d*c,t=s.subarray(e,e+c),r=[];for(let n=0;n<t.length;n++)r.push({value:t[n],index:n});r.sort((e,t)=>t.value-e.value),l[d]=0;for(let a=0;a<n;a++)if(r[a].index===i[d]){l[d]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),Object(sr["a"])(l,a.shape,"bool")}const Wr=zr;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ur(e,t,n,r,a,o="NHWC",s){let i=e;3===e.rank&&(i=Object(ie["a"])(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=Object(ie["a"])(t,[1,t.shape[0],t.shape[1],t.shape[2]])),A["b"](4===i.rank,()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+i.shape+"."),A["b"](4===u.rank,()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+u.shape+"."),A["b"](4===n.length,()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+n+".");const c="NHWC"===o?i.shape[3]:i.shape[1],l="NHWC"===o?u.shape[3]:u.shape[1];A["b"](c===n[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${n[2]}.`),A["b"](l===n[3],()=>`Error in conv2dDerFilter: depth of dy (${l}) must match output depth for filter (${n[3]}).`),null!=s&&A["b"](A["v"](a),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${s} but got pad ${a}.`);const d={x:i,dy:u},p={strides:r,pad:a,dataFormat:o,dimRoundingMode:s,filterShape:n};return oe["a"].runKernel(se["D"],d,p)}const Gr=Object(j["b"])({conv2DBackpropFilter_:Ur});var Hr=n("73d3"),qr=n("4749");
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Kr({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:o=[1,1],dimRoundingMode:s,bias:u,activation:c="linear",preluActivationWeights:l,leakyreluAlpha:d}){if(c=c||"linear",!1===Object(qr["d"])(oe["a"].state.gradientDepth,c)){let p=Object(ne["a"])(e,t,n,r,a,o,s);return null!=u&&(p=Object(i["a"])(p,u)),Object(qr["a"])(p,c,l,d)}const p=Object(v["a"])(e,"x","conv2d"),h=Object(v["a"])(t,"filter","conv2d");let f=p,m=!1;3===p.rank&&(m=!0,f=Object(ie["a"])(p,[1,p.shape[0],p.shape[1],p.shape[2]])),A["b"](4===f.rank,()=>"Error in fused conv2d: input must be rank 4, but got rank "+f.rank+"."),A["b"](4===h.rank,()=>"Error in fused conv2d: filter must be rank 4, but got rank "+h.rank+"."),null!=s&&A["b"](A["v"](r),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`),A["b"](f.shape[3]===h.shape[2],()=>`Error in conv2d: depth of input (${f.shape[3]}) must match input depth for filter ${h.shape[2]}.`),A["b"](Yt["h"](n,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),A["b"]("NHWC"===a,()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`);const b=Yt["a"](f.shape,h.shape,n,o,r,s);let g,y;null!=u&&(g=Object(v["a"])(u,"bias","fused conv2d"),[g]=Object(Er["makeTypesMatch"])(g,p),mt["a"](b.outShape,g.shape)),null!=l&&(y=Object(v["a"])(l,"prelu weights","fused conv2d"));const x=(e,t)=>{const[a,s,i,u]=t,l=Object(qr["c"])(e,i,c);A["b"](Yt["i"](o),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);const d=Object(Hr["a"])(s.shape,l,a,n,r),p=Gr(s,l,a.shape,n,r),h=[d,p];if(null!=u){const e=Object(qr["b"])(u,l);h.push(e)}return h},O={x:f,filter:h,bias:g,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:a,dilations:o,dimRoundingMode:s,activation:c,leakyreluAlpha:d};if(null==u){const e=Object(et["a"])((e,t,n)=>{let r=oe["a"].runKernel(se["kb"],O,w);return n([t,e,r]),m&&(r=Object(ie["a"])(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}});return e(f,h)}{const e=Object(et["a"])((e,t,n,r)=>{let a=oe["a"].runKernel(se["kb"],O,w);return r([t,e,a,n]),m&&(a=Object(ie["a"])(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}});return e(f,h,g)}}const Xr=Object(j["b"])({fusedConv2d_:Kr});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yr(e,t,n,r,a,o=[1,1],s){let i=e;3===e.rank&&(i=Object(ie["a"])(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=Object(ie["a"])(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={x:i,dy:u},l={strides:r,pad:a,dimRoundingMode:s,dilations:o,filterShape:n};return oe["a"].runKernel(se["P"],c,l)}const Qr=Object(j["b"])({depthwiseConv2dNativeBackpropFilter_:Yr});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zr(e,t,n,r,a,o=[1,1],s){let i=t,u=!1;3===t.rank&&(u=!0,i=Object(ie["a"])(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={dy:i,filter:n},l={strides:r,pad:a,dimRoundingMode:s,dilations:o,inputShape:e},d=oe["a"].runKernel(se["Q"],c,l);return u?Object(ie["a"])(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const Jr=Object(j["b"])({depthwiseConv2dNativeBackpropInput_:Zr});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ea({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:o=[1,1],dimRoundingMode:s,bias:u,activation:c="linear",preluActivationWeights:l,leakyreluAlpha:d}){if(!1===Object(qr["d"])(oe["a"].state.gradientDepth,c)){let p=Object(ge["a"])(e,t,n,r,a,o,s);return null!=u&&(p=Object(i["a"])(p,u)),Object(qr["a"])(p,c,l,d)}const p=Object(v["a"])(e,"x","depthwiseConv2d"),h=Object(v["a"])(t,"filter","depthwiseConv2d");let f=p,m=!1;3===p.rank&&(m=!0,f=Object(ie["a"])(p,[1,p.shape[0],p.shape[1],p.shape[2]])),A["b"](4===f.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`),A["b"](4===h.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`),A["b"](f.shape[3]===h.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`),null==o&&(o=[1,1]),A["b"](Yt["h"](n,o),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),null!=s&&A["b"](A["v"](r),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${s} but got pad ${r}.`);const b=Yt["a"](f.shape,h.shape,n,o,r,s,!0);let g,y;null!=u&&(g=Object(v["a"])(u,"bias","fused conv2d"),[g]=Object(Er["makeTypesMatch"])(g,p),mt["a"](b.outShape,g.shape)),null!=l&&(y=Object(v["a"])(l,"prelu weights","fused depthwiseConv2d"));const x=(e,t)=>{A["b"](Yt["i"](o),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[a,i,u,l]=t,d=Object(qr["c"])(e,u,c),p=Jr(i.shape,d,a,n,r,o,s),h=Qr(i,d,a.shape,n,r,o,s);if(null!=l){const e=Object(qr["b"])(g,d);return[p,h,e]}return[p,h]},O={x:f,filter:h,bias:g,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:a,dilations:o,dimRoundingMode:s,activation:c,leakyreluAlpha:d};if(null==u){const e=Object(et["a"])((e,t,n)=>{let r=oe["a"].runKernel(se["lb"],O,w);return n([t,e,r]),m&&(r=Object(ie["a"])(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}});return e(f,h)}{const e=Object(et["a"])((e,t,n,r)=>{let a=oe["a"].runKernel(se["lb"],O,w);return r([t,e,a,n]),m&&(a=Object(ie["a"])(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}});return e(f,h,g)}}const ta=Object(j["b"])({fusedDepthwiseConv2d_:ea});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function na({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:o="linear",preluActivationWeights:s,leakyreluAlpha:u}){if(!1===Object(qr["d"])(oe["a"].state.gradientDepth,o)){let c=Object(w["a"])(e,t,n,r);return null!=a&&(c=Object(i["a"])(c,a)),Object(qr["a"])(c,o,s,u)}let c=Object(v["a"])(e,"a","fused matMul"),l=Object(v["a"])(t,"b","fused matMul");[c,l]=Object(Er["makeTypesMatch"])(c,l);const d=n?c.shape[c.rank-2]:c.shape[c.rank-1],p=r?l.shape[l.rank-1]:l.shape[l.rank-2],h=n?c.shape[c.rank-1]:c.shape[c.rank-2],f=r?l.shape[l.rank-2]:l.shape[l.rank-1],m=c.shape.slice(0,-2),b=l.shape.slice(0,-2),g=A["O"](m),y=A["O"](b);A["b"](c.rank>=2&&l.rank>=2&&c.rank===l.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${c.rank} and ${l.rank}.`),A["b"](A["a"](m,b),()=>`Error in fused matMul: outer dimensions (${m}) and (${b}) of Tensors with shapes ${c.shape} and `+l.shape+" must match."),A["b"](d===p,()=>`Error in fused matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${c.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`);const x=c.shape.slice(0,-2).concat([h,f]),O=n?Object(ie["a"])(c,[g,d,h]):Object(ie["a"])(c,[g,h,d]),k=r?Object(ie["a"])(l,[y,f,p]):Object(ie["a"])(l,[y,p,f]);let j,S;null!=a&&(j=Object(v["a"])(a,"bias","fused matMul"),[j]=Object(Er["makeTypesMatch"])(j,c),mt["a"](x,j.shape)),null!=s&&(S=Object(v["a"])(s,"prelu weights","fused matMul"));const T=(e,t)=>{const[s,i,u,c]=t,l=Object(qr["c"])(Object(ie["a"])(e,u.shape),u,o);let d,p;if(n||r?!n&&r?(d=Object(w["a"])(l,i,!1,!1),p=Object(w["a"])(l,s,!0,!1)):n&&!r?(d=Object(w["a"])(i,l,!1,!0),p=Object(w["a"])(s,l,!1,!1)):(d=Object(w["a"])(i,l,!0,!0),p=Object(w["a"])(l,s,!0,!0)):(d=Object(w["a"])(l,i,!1,!0),p=Object(w["a"])(s,l,!0,!1)),null!=a){const e=Object(qr["b"])(c,l);return[d,p,e]}return[d,p]},I={a:O,b:k,bias:j,preluActivationWeights:S},N={transposeA:n,transposeB:r,activation:o,leakyreluAlpha:u};if(null==a){const e=Object(et["a"])((e,t,n)=>{const r=oe["a"].runKernel(se["jd"],I,N);return n([e,t,r]),{value:Object(ie["a"])(r,x),gradFunc:T}});return e(O,k)}{const e=Object(et["a"])((e,t,n,r)=>{const a=oe["a"].runKernel(se["jd"],I,N);return r([e,t,a,n]),{value:Object(ie["a"])(a,x),gradFunc:T}});return e(O,k,j)}}const ra=Object(j["b"])({fusedMatMul_:na});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aa(e){return Vr(e,.54,.46)}const oa=Object(j["b"])({hammingWindow_:aa});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sa(e){return Vr(e,.5,.5)}const ia=Object(j["b"])({hannWindow_:sa});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ua(e,t,n,r=!1,a=0){let o=0;const s=[];while(o+t<=e.size)s.push(Object(T["a"])(e,o,t)),o+=n;if(r)while(o<e.size){const r=o+t-e.size,i=Object(O["a"])([Object(T["a"])(e,o,t-r),Object(Fe["a"])([r],a)]);s.push(i),o+=n}return 0===s.length?cr([],[0,t]):Object(ie["a"])(Object(O["a"])(s),[s.length,t])}const ca=Object(j["b"])({frame_:ua});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function la(e,t,n,r,a=ia){null==r&&(r=Br(t));const o=ca(e,t,n),s=Object(k["a"])(o,a(t));return Object(Qn["a"])(s,r)}const da=Object(j["b"])({stft_:la});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pa(e,t,n,r,a="bilinear",o=0){const s=Object(v["a"])(e,"image","cropAndResize"),i=Object(v["a"])(t,"boxes","cropAndResize","float32"),u=Object(v["a"])(n,"boxInd","cropAndResize","int32"),c=i.shape[0];A["b"](4===s.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${s.rank}.`),A["b"](2===i.rank&&4===i.shape[1],()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${i.shape}.`),A["b"](1===u.rank&&u.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${i.shape}.`),A["b"](2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),A["b"](r[0]>=1&&r[1]>=1,()=>"cropSize must be atleast [1,1], but was "+r),A["b"]("bilinear"===a||"nearest"===a,()=>"method must be bilinear or nearest, but was "+a);const l={image:s,boxes:i,boxInd:u},d={method:a,extrapolationValue:o,cropSize:r},p=oe["a"].runKernel(se["K"],l,d);return p}const ha=Object(j["b"])({cropAndResize_:pa});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fa(e){const t=Object(v["a"])(e,"image","flipLeftRight","float32");A["b"](4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);const n={image:t},r=oe["a"].runKernel(se["fb"],n,{});return r}const ma=Object(j["b"])({flipLeftRight_:fa});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ba(e,t,n=0,r=.5){const a=Object(v["a"])(e,"image","rotateWithOffset","float32");A["b"](4===a.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`);const o={image:a},s={radians:t,fillValue:n,center:r},i=oe["a"].runKernel(se["vc"],o,s);return i}const ga=Object(j["b"])({rotateWithOffset_:ba});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ya(e,t,n,r,a,o){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==o&&(o=0);const s=e.shape[0];return n=Math.min(n,s),A["b"](0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),A["b"](2===e.rank,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),A["b"](4===e.shape[1],()=>"boxes must have 4 columns, but 2nd dimension was "+e.shape[1]),A["b"](1===t.rank,()=>"scores must be a 1D tensor"),A["b"](t.shape[0]===s,()=>`scores has incompatible shape with boxes. Expected ${s}, but was `+t.shape[0]),A["b"](0<=o&&o<=1,()=>`softNmsSigma must be in [0, 1], but was '${o}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:o}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xa(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const o=Object(v["a"])(e,"boxes","nonMaxSuppression"),s=Object(v["a"])(t,"scores","nonMaxSuppression"),i=ya(o,s,n,r,a);n=i.maxOutputSize,r=i.iouThreshold,a=i.scoreThreshold;const u={maxOutputSize:n,iouThreshold:r,scoreThreshold:a};return oe["a"].runKernel(se["Xb"],{boxes:o,scores:s},u)}const va=Object(j["b"])({nonMaxSuppression_:xa});var Oa=n("8389");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function wa(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const o=Object(v["a"])(e,"boxes","nonMaxSuppressionAsync"),s=Object(v["a"])(t,"scores","nonMaxSuppressionAsync"),i=ya(o,s,n,r,a);n=i.maxOutputSize,r=i.iouThreshold,a=i.scoreThreshold;const u=await Promise.all([o.data(),s.data()]),c=u[0],l=u[1],{selectedIndices:d}=Object(Oa["a"])(c,l,n,r,a);return o!==e&&o.dispose(),s!==t&&s.dispose(),Object(ir["a"])(d,"int32")}const ka=wa;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ja(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,o=0){const s=Object(v["a"])(e,"boxes","nonMaxSuppression"),i=Object(v["a"])(t,"scores","nonMaxSuppression"),u=ya(s,i,n,r,a,o);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,o=u.softNmsSigma;const c={boxes:s,scores:i},l={maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:o},d=oe["a"].runKernel(se["Zb"],c,l);return{selectedIndices:d[0],selectedScores:d[1]}}const Sa=Object(j["b"])({nonMaxSuppressionWithScore_:ja});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function Ta(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,o=0){const s=Object(v["a"])(e,"boxes","nonMaxSuppressionAsync"),i=Object(v["a"])(t,"scores","nonMaxSuppressionAsync"),u=ya(s,i,n,r,a,o);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,o=u.softNmsSigma;const c=await Promise.all([s.data(),i.data()]),l=c[0],d=c[1],{selectedIndices:p,selectedScores:h}=Object(Oa["c"])(l,d,n,r,a,o);return s!==e&&s.dispose(),i!==t&&i.dispose(),{selectedIndices:Object(ir["a"])(p,"int32"),selectedScores:Object(ir["a"])(h)}}const Ia=Ta;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Na(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,o=!1){const s=Object(v["a"])(e,"boxes","nonMaxSuppression"),i=Object(v["a"])(t,"scores","nonMaxSuppression"),u=ya(s,i,n,r,a,null),c=u.maxOutputSize,l=u.iouThreshold,d=u.scoreThreshold,p={boxes:s,scores:i},h={maxOutputSize:c,iouThreshold:l,scoreThreshold:d,padToMaxOutputSize:o},f=oe["a"].runKernel(se["Yb"],p,h);return{selectedIndices:f[0],validOutputs:f[1]}}const Ca=Object(j["b"])({nonMaxSuppressionPadded_:Na});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function $a(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,o=!1){const s=Object(v["a"])(e,"boxes","nonMaxSuppressionAsync"),i=Object(v["a"])(t,"scores","nonMaxSuppressionAsync"),u=ya(s,i,n,r,a,null),c=u.maxOutputSize,l=u.iouThreshold,d=u.scoreThreshold,[p,h]=await Promise.all([s.data(),i.data()]),{selectedIndices:f,validOutputs:m}=Object(Oa["b"])(p,h,c,l,d,o);return s!==e&&s.dispose(),i!==t&&i.dispose(),{selectedIndices:Object(ir["a"])(f,"int32"),validOutputs:Object(En["a"])(m,"int32")}}const Ea=$a;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aa(e,t,n=!1,r=!1){const a=Object(v["a"])(e,"images","resizeBilinear");A["b"](3===a.rank||4===a.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`),A["b"](2===t.length,()=>"Error in resizeBilinear: new shape must 2D, but got shape "+t+"."),A["b"](!1===r||!1===n,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let o=a,s=!1;3===a.rank&&(s=!0,o=Object(ie["a"])(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,i={images:o},u={alignCorners:n,halfPixelCenters:r,size:t},c=oe["a"].runKernel(se["qc"],i,u);return s?Object(ie["a"])(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const Ra=Object(j["b"])({resizeBilinear_:Aa});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _a(e,t,n=!1,r=!1){const a=Object(v["a"])(e,"images","resizeNearestNeighbor");A["b"](3===a.rank||4===a.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`),A["b"](2===t.length,()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+t+"."),A["b"]("float32"===a.dtype||"int32"===a.dtype,()=>"`images` must have `int32` or `float32` as dtype"),A["b"](!1===r||!1===n,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let o=a,s=!1;3===a.rank&&(s=!0,o=Object(ie["a"])(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,i={images:o},u={alignCorners:n,halfPixelCenters:r,size:t},c=oe["a"].runKernel(se["sc"],i,u);return s?Object(ie["a"])(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const Fa=Object(j["b"])({resizeNearestNeighbor_:_a});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Da(e,t="binary",n=!1,r=.5){const a=Object(v["a"])(e,"image","threshold"),o=.2989,s=.587,u=.114,c=a.shape[0]*a.shape[1];let l,d,p,h,f=Object(k["a"])(Object(ir["a"])([r]),255);if(A["b"](3===a.rank,()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`),A["b"](3===a.shape[2]||1===a.shape[2],()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`),A["b"]("int32"===a.dtype||"float32"===a.dtype,()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`),A["b"]("otsu"===t||"binary"===t,()=>"Method must be binary or otsu, but was "+t),3===a.shape[2]){[l,d,p]=Object(Zn["a"])(a,[1,1,1],-1);const e=Object(k["a"])(l,o),t=Object(k["a"])(d,s),n=Object(k["a"])(p,u);h=Object(i["a"])(Object(i["a"])(e,t),n)}else h=e;if("otsu"===t){const e=Object(L["a"])(Object(z["a"])(Object(Cn["a"])(h),"int32"),Object(sr["a"])([]),256);f=Ma(e,c)}const m=n?Object(Xe["a"])(h,f):Object(Le["a"])(h,f),b=Object(z["a"])(Object(k["a"])(m,255),"int32");return b}function Ma(e,t){let n,r,a,o,s,u,c=Object(ir["a"])([-1]),l=Object(ir["a"])([0]),d=Object(ir["a"])([0]);for(let p=0;p<e.size-1;p++){n=Object(T["a"])(e,0,p+1),r=Object(T["a"])(e,p+1),s=Object(Oe["a"])(Object(ct["a"])(n),t),u=Object(Oe["a"])(Object(ct["a"])(r),t);const h=Object(ct["a"])(Object(k["a"])(n,Object(mn["a"])(0,n.size)));a=Object(Oe["a"])(h,Object(ct["a"])(n));const f=Object(Fe["a"])(r.shape,n.size),m=Object(i["a"])(Object(mn["a"])(0,r.size),f),b=Object(k["a"])(r,m);o=Object(Oe["a"])(Object(ct["a"])(b),Object(ct["a"])(r));const g=Object(ut["a"])(a,o),y=Object(ut["a"])(a,o),x=Object(k["a"])(s,u);d=Object(k["a"])(Object(k["a"])(x,g),y);const v=Object(Le["a"])(d,l);l=Object(Or["a"])(v,d,l),c=Object(Or["a"])(v,Object(ir["a"])([p]),c)}return c}const Pa=Object(j["b"])({threshold_:Da});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function La(e,t,n="nearest",r="constant",a=0,o){const s=Object(v["a"])(e,"image","transform","float32"),i=Object(v["a"])(t,"transforms","transform","float32");A["b"](4===s.rank,()=>`Error in transform: image must be rank 4,but got rank ${s.rank}.`),A["b"](2===i.rank&&(i.shape[0]===s.shape[0]||1===i.shape[0])&&8===i.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),A["b"](null==o||2===o.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${o}.`);const u={image:s,transforms:i},c={interpolation:n,fillMode:r,fillValue:a,outputShape:o};return oe["a"].runKernel(se["dd"],u,c)}const Ba=Object(j["b"])({transform_:La});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Va(e,t,n){Object(A["b"])(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),Object(A["b"])(n%1===0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);const r=Object(v["a"])(e,"a","bandPart");Object(A["b"])(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const a=r.shape,[o,s]=r.shape.slice(-2);if(!(t<=o))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${o}).`);if(!(n<=s))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${s}).`);t<0&&(t=o),n<0&&(n=s);const i=Object(ie["a"])(Object(mn["a"])(0,o,1,"int32"),[-1,1]),u=Object(mn["a"])(0,s,1,"int32"),c=Object(ut["a"])(i,u),l=Object(pt["a"])(Object(Xe["a"])(c,Object(En["a"])(+t,"int32")),Object(Be["a"])(c,Object(En["a"])(-n,"int32"))),d=Object(kr["a"])([o,s],r.dtype);return Object(ie["a"])(Object(nr["a"])(Object(xr["a"])(Object(ie["a"])(r,[-1,o,s])).map(e=>Object(Or["a"])(l,e,d))),a)}const za=Object(j["b"])({bandPart_:Va});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wa(e){let t;if(Array.isArray(e)){t=!1,Object(A["b"])(null!=e&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=e[0].shape[0];for(let t=1;t<e.length;++t)Object(A["b"])(e[t].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`)}else t=!0,e=Object(Zn["a"])(e,e.shape[0],0).map(e=>Object(tr["a"])(e,[0]));Object(A["b"])(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);const n=[],r=e;for(let a=0;a<e.length;++a)n.push(oe["a"].tidy(()=>{let e=r[a];if(a>0)for(let t=0;t<a;++t){const r=Object(k["a"])(Object(ct["a"])(Object(k["a"])(n[t],e)),n[t]);e=Object(ut["a"])(e,r)}return Object(Oe["a"])(e,$r(e,"euclidean"))}));return t?Object(nr["a"])(n,0):n}const Ua=Object(j["b"])({gramSchmidt_:Wa});var Ga=n("c04e");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ha(e,t=!1){if(Object(A["b"])(e.rank>=2,()=>"qr() requires input tensor to have a rank >= 2, but got rank "+e.rank),2===e.rank)return qa(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce((e,t)=>e*t),r=Object(xr["a"])(Object(ie["a"])(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],o=[];r.forEach(e=>{const[n,r]=qa(e,t);a.push(n),o.push(r)});const s=Object(ie["a"])(Object(nr["a"])(a,0),e.shape),i=Object(ie["a"])(Object(nr["a"])(o,0),e.shape);return[s,i]}}function qa(e,t=!1){return oe["a"].tidy(()=>{Object(A["b"])(2===e.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);const n=e.shape[0],r=e.shape[1];let a=_e(n),o=Object(G["a"])(e);const s=cr([[1]],[1,1]);let i=Object(G["a"])(s);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=o,u=i,c=a;[i,o,a]=oe["a"].tidy(()=>{const t=Object(T["a"])(o,[e,e],[n-e,1]),u=$r(t),c=Object(T["a"])(o,[e,e],[1,1]),l=Object(Or["a"])(Object(Le["a"])(c,0),cr([[-1]]),cr([[1]])),d=Object(ut["a"])(c,Object(k["a"])(l,u)),p=Object(Oe["a"])(t,d);i=1===p.shape[0]?Object(G["a"])(s):Object(O["a"])([s,Object(T["a"])(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const h=Object(tt["a"])(Object(Oe["a"])(Object(w["a"])(l,d),u)),f=Object(T["a"])(o,[e,0],[n-e,r]),m=Object(k["a"])(h,i),b=Object(Ir["a"])(i);if(0===e)o=Object(ut["a"])(f,Object(w["a"])(m,Object(w["a"])(b,f)));else{const t=Object(ut["a"])(f,Object(w["a"])(m,Object(w["a"])(b,f)));o=Object(O["a"])([Object(T["a"])(o,[0,0],[e,r]),t],0)}const g=Object(Ir["a"])(m),y=Object(T["a"])(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=Object(ut["a"])(y,Object(w["a"])(Object(w["a"])(y,i),g));else{const t=Object(ut["a"])(y,Object(w["a"])(Object(w["a"])(y,i),g));a=Object(O["a"])([Object(T["a"])(a,[0,0],[n,e]),t],1)}return[i,o,a]}),Object(Ga["d"])([t,u,c])}return!t&&n>r&&(a=Object(T["a"])(a,[0,0],[n,r]),o=Object(T["a"])(o,[0,0],[r,r])),[a,o]})}const Ka=Object(j["b"])({qr_:Ha});var Xa=n("57e0");function Ya(e,t,n=Xa["a"].SUM_BY_NONZERO_WEIGHTS){const r=Object(v["a"])(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=Object(v["a"])(t,"weights","computeWeightedLoss"));const o=null==a?r:Object(k["a"])(r,a);if(n===Xa["a"].NONE)return o;if(n===Xa["a"].SUM)return Object(ct["a"])(o);if(n===Xa["a"].MEAN){if(null==a)return Object(wt["a"])(o);{const e=r.size/a.size,t=Object(Oe["a"])(Object(ct["a"])(o),Object(ct["a"])(a));return e>1?Object(Oe["a"])(t,Object(En["a"])(e)):t}}if(n===Xa["a"].SUM_BY_NONZERO_WEIGHTS){if(null==a)return Object(Oe["a"])(Object(ct["a"])(o),Object(En["a"])(r.size));{const e=Object(k["a"])(a,Object(kt["a"])(r.shape)),t=Object(z["a"])(Object(ct["a"])(Object(Dt["a"])(e,Object(En["a"])(0))),"float32");return Object(Oe["a"])(Object(ct["a"])(o),t)}}throw Error("Unknown reduction: "+n)}const Qa=Object(j["b"])({computeWeightedLoss_:Ya});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Za(e,t,n,r=Xa["a"].SUM_BY_NONZERO_WEIGHTS){const o=Object(v["a"])(e,"labels","absoluteDifference"),s=Object(v["a"])(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=Object(v["a"])(n,"weights","absoluteDifference")),Object(A["e"])(o.shape,s.shape,"Error in absoluteDifference: ");const u=Object(a["a"])(Object(ut["a"])(o,s));return Qa(u,i,r)}const Ja=Object(j["b"])({absoluteDifference_:Za});function eo(e,t,n,r,a=Xa["a"].SUM_BY_NONZERO_WEIGHTS){const o=Object(v["a"])(e,"labels","cosineDistance"),s=Object(v["a"])(t,"predictions","cosineDistance");let i=null;null!=r&&(i=Object(v["a"])(r,"weights","cosineDistance")),Object(A["e"])(o.shape,s.shape,"Error in cosineDistance: ");const u=Object(En["a"])(1),c=Object(ut["a"])(u,Object(ct["a"])(Object(k["a"])(o,s),n,!0));return Qa(c,i,a)}const to=Object(j["b"])({cosineDistance_:eo});function no(e,t,n,r=Xa["a"].SUM_BY_NONZERO_WEIGHTS){let a=Object(v["a"])(e,"labels","hingeLoss");const o=Object(v["a"])(t,"predictions","hingeLoss");let s=null;null!=n&&(s=Object(v["a"])(n,"weights","hingeLoss")),Object(A["e"])(a.shape,o.shape,"Error in hingeLoss: ");const i=Object(En["a"])(1);a=Object(ut["a"])(Object(k["a"])(Object(En["a"])(2),a),i);const u=Object(yn["a"])(Object(ut["a"])(i,Object(k["a"])(a,o)));return Qa(u,s,r)}const ro=Object(j["b"])({hingeLoss_:no});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ao(e,t,n,r=1,o=Xa["a"].SUM_BY_NONZERO_WEIGHTS){const s=Object(v["a"])(e,"labels","huberLoss"),u=Object(v["a"])(t,"predictions","huberLoss");let c=null;null!=n&&(c=Object(v["a"])(n,"weights","huberLoss")),Object(A["e"])(s.shape,u.shape,"Error in huberLoss: ");const l=Object(En["a"])(r),d=Object(a["a"])(Object(ut["a"])(u,s)),p=Object(It["a"])(d,l),h=Object(ut["a"])(d,p),f=Object(i["a"])(Object(k["a"])(Object(En["a"])(.5),Object($t["a"])(p)),Object(k["a"])(l,h));return Qa(f,c,o)}const oo=Object(j["b"])({huberLoss_:ao});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function so(e,t,n,r=1e-7,a=Xa["a"].SUM_BY_NONZERO_WEIGHTS){const o=Object(v["a"])(e,"labels","logLoss"),s=Object(v["a"])(t,"predictions","logLoss");let u=null;null!=n&&(u=Object(v["a"])(n,"weights","logLoss")),Object(A["e"])(o.shape,s.shape,"Error in logLoss: ");const c=Object(En["a"])(1),l=Object(En["a"])(r),d=Object(tt["a"])(Object(k["a"])(o,Object(Ze["a"])(Object(i["a"])(s,l)))),p=Object(k["a"])(Object(ut["a"])(c,o),Object(Ze["a"])(Object(i["a"])(Object(ut["a"])(c,s),l))),h=Object(ut["a"])(d,p);return Qa(h,u,a)}const io=Object(j["b"])({logLoss_:so});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uo(e,t,n,r=Xa["a"].SUM_BY_NONZERO_WEIGHTS){const a=Object(v["a"])(e,"labels","meanSquaredError"),o=Object(v["a"])(t,"predictions","meanSquaredError");let s=null;null!=n&&(s=Object(v["a"])(n,"weights","meanSquaredError")),Object(A["e"])(a.shape,o.shape,"Error in meanSquaredError: ");const i=Object(er["a"])(a,o);return Qa(i,s,r)}const co=Object(j["b"])({meanSquaredError_:uo});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lo(e,t){const n=Object(v["a"])(e,"labels","sigmoidCrossEntropyWithLogits"),r=Object(v["a"])(t,"logits","sigmoidCrossEntropyWithLogits");Object(A["e"])(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const o=Object(yn["a"])(r),s=Object(k["a"])(r,n),u=Object(Je["a"])(Object(Ce["a"])(Object(tt["a"])(Object(a["a"])(r))));return Object(i["a"])(Object(ut["a"])(o,s),u)}function po(e,t,n,r=0,a=Xa["a"].SUM_BY_NONZERO_WEIGHTS){let o=Object(v["a"])(e,"multiClassLabels","sigmoidCrossEntropy");const s=Object(v["a"])(t,"logits","sigmoidCrossEntropy");let u=null;if(null!=n&&(u=Object(v["a"])(n,"weights","sigmoidCrossEntropy")),Object(A["e"])(o.shape,s.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=Object(En["a"])(r),t=Object(En["a"])(1),n=Object(En["a"])(.5);o=Object(i["a"])(Object(k["a"])(o,Object(ut["a"])(t,e)),Object(k["a"])(n,e))}const c=lo(o,s);return Qa(c,u,a)}const ho=Object(j["b"])({sigmoidCrossEntropy_:po});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fo(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was `+n);const r=Object(et["a"])((e,t,r)=>{const a=!0,o=dt(t,[n],a),s=Object(ut["a"])(Object(z["a"])(t,"float32"),o);r([e,s]);const i=Object(tt["a"])(Object(k["a"])(s,e)),u=Object(ct["a"])(i,[n]),c=(e,t)=>{const[r,a]=t,o=Object(st["e"])(e.shape,[n]);return[Object(k["a"])(Object(ie["a"])(e,o),Object(ut["a"])(Object(z["a"])(r,"float32"),Object(Ce["a"])(a))),Object(k["a"])(Object(ie["a"])(e,o),Object(ut["a"])(Object(Ce["a"])(a),Object(z["a"])(r,"float32")))]};return{value:u,gradFunc:c}});return r(e,t)}function mo(e,t,n,r=0,a=Xa["a"].SUM_BY_NONZERO_WEIGHTS){let o=Object(v["a"])(e,"onehotLabels","softmaxCrossEntropy");const s=Object(v["a"])(t,"logits","softmaxCrossEntropy");let u=null;if(null!=n&&(u=Object(v["a"])(n,"weights","softmaxCrossEntropy")),Object(A["e"])(o.shape,s.shape,"Error in softmaxCrossEntropy: "),r>0){const e=Object(En["a"])(r),t=Object(En["a"])(1),n=Object(En["a"])(o.shape[1]);o=Object(i["a"])(Object(k["a"])(o,Object(ut["a"])(t,e)),Object(Oe["a"])(e,n))}const c=fo(o,s);return Qa(c,u,a)}const bo=Object(j["b"])({softmaxCrossEntropy_:mo});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function go(e,t,n,r){const a=Object(v["a"])(e,"indices","sparseFillEmptyRows"),o=Object(v["a"])(t,"values","sparseFillEmptyRows"),s=Object(v["a"])(n,"denseShape","sparseFillEmptyRows"),i=Object(v["a"])(r,"defaultValue","sparseFillEmptyRows",o.dtype);if(2!==a.rank)throw new Error("Indices should be Tensor2D but received shape\n        "+a.shape);if(1!==o.rank)throw new Error("Values should be Tensor1D but received shape "+o.shape);if(1!==s.rank)throw new Error("Dense shape should be Tensor1D but received shape "+s.shape);if(0!==i.rank)throw new Error("Default value should be a scalar but received shape "+i.shape);const u={indices:a,values:o,denseShape:s,defaultValue:i},c=oe["a"].runKernel(se["Jc"],u);return{outputIndices:c[0],outputValues:c[1],emptyRowIndicator:c[2],reverseIndexMap:c[3]}}const yo=Object(j["b"])({sparseFillEmptyRows_:go});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xo(e,t,n){const r=Object(v["a"])(e,"inputIndices","sparseReshape"),a=Object(v["a"])(t,"inputShape","sparseReshape"),o=Object(v["a"])(n,"newShape","sparseReshape");if(2!==r.rank)throw new Error("Input indices should be Tensor2D but received shape\n        "+r.shape);if(1!==a.rank)throw new Error("Input shape should be Tensor1D but received shape "+a.shape);if(1!==o.rank)throw new Error("New shape should be Tensor1D but received shape "+o.shape);const s={inputIndices:r,inputShape:a,newShape:o},i=oe["a"].runKernel(se["Kc"],s);return{outputIndices:i[0],outputShape:i[1]}}const vo=Object(j["b"])({sparseReshape_:xo});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oo(e,t,n){const r=Object(v["a"])(e,"data","sparseSegmentMean"),a=Object(v["a"])(t,"indices","sparseSegmentMean"),o=Object(v["a"])(n,"segmentIds","sparseSegmentMean");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error("Indices should be Tensor1D but received shape\n          "+a.shape);if(1!==o.rank)throw new Error("Segment ids should be Tensor1D but received shape\n          "+o.shape);const s={data:r,indices:a,segmentIds:o};return oe["a"].runKernel(se["Lc"],s)}const wo=Object(j["b"])({sparseSegmentMean_:Oo});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ko(e,t,n){const r=Object(v["a"])(e,"data","sparseSegmentSum"),a=Object(v["a"])(t,"indices","sparseSegmentSum"),o=Object(v["a"])(n,"segmentIds","sparseSegmentSum");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error("Indices should be Tensor1D but received shape\n         "+a.shape);if(1!==o.rank)throw new Error("Segment ids should be Tensor1D but received shape\n         "+o.shape);const s={data:r,indices:a,segmentIds:o};return oe["a"].runKernel(se["Mc"],s)}const jo=Object(j["b"])({sparseSegmentSum_:ko});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function So(e,t,n,r,a,o,s,i){const u=Object(v["a"])(e,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error("Data must be a vector, saw: "+u.shape);const c=Object(v["a"])(t,"dataSplits","stringNGrams");if("int32"!==c.dtype)throw new Error("Data splits must be of datatype int32");const l={separator:n,nGramWidths:r,leftPad:a,rightPad:o,padWidth:s,preserveShortSequences:i},d={data:u,dataSplits:c},p=oe["a"].runKernel(se["Uc"],d,l);return{nGrams:p[0],nGramsSplits:p[1]}}const To=Object(j["b"])({stringNGrams_:So});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Io(e,t,n=!0){const r=Object(v["a"])(e,"input","stringSplit","string"),a=Object(v["a"])(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error("Input should be Tensor1D but received shape "+r.shape);if(0!==a.rank)throw new Error("Delimiter should be a scalar but received shape "+a.shape);const o={skipEmpty:n},s={input:r,delimiter:a},i=oe["a"].runKernel(se["Vc"],s,o);return{indices:i[0],values:i[1],shape:i[2]}}const No=Object(j["b"])({stringSplit_:Io});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Co(e,t){const n=Object(v["a"])(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const a={input:n};return oe["a"].runKernel(se["Wc"],a,r)}const $o=Object(j["b"])({stringToHashBucketFast_:Co}),Eo={fft:Kn["a"],ifft:Xn["a"],rfft:Qn["a"],irfft:Yn["a"]},Ao={hammingWindow:oa,hannWindow:ia,frame:ca,stft:da},Ro={flipLeftRight:ma,resizeNearestNeighbor:Fa,resizeBilinear:Ra,rotateWithOffset:ga,cropAndResize:ha,nonMaxSuppression:va,nonMaxSuppressionAsync:ka,nonMaxSuppressionWithScore:Sa,nonMaxSuppressionWithScoreAsync:Ia,nonMaxSuppressionPadded:Ca,nonMaxSuppressionPaddedAsync:Ea,threshold:Pa,transform:Ba},_o={bandPart:za,gramSchmidt:Ua,qr:Ka},Fo={absoluteDifference:Ja,computeWeightedLoss:Qa,cosineDistance:to,hingeLoss:ro,huberLoss:oo,logLoss:io,meanSquaredError:co,sigmoidCrossEntropy:ho,softmaxCrossEntropy:bo},Do={sparseFillEmptyRows:yo,sparseReshape:vo,sparseSegmentMean:wo,sparseSegmentSum:jo},Mo={stringNGrams:To,stringSplit:No,stringToHashBucketFast:$o};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */},1359:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(o["a"])(e,"x","log"),n={x:t};return r["a"].runKernel(a["Cb"],n)}const u=Object(s["b"])({log_:i})},1590:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("6ad5"),i=n("b818"),u=n("54ef"),c=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function l(e,t,n,u,l="NDHWC",d=[1,1,1]){const p=Object(o["a"])(e,"x","conv3d"),h=Object(o["a"])(t,"filter","conv3d");let f=p,m=!1;4===p.rank&&(m=!0,f=Object(c["a"])(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]])),s["b"](5===f.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${f.rank}.`),s["b"](5===h.rank,()=>"Error in conv3d: filter must be rank 5, but got rank "+h.rank+"."),s["b"](f.shape[4]===h.shape[3],()=>`Error in conv3d: depth of input (${f.shape[4]}) must match input depth for filter ${h.shape[3]}.`),s["b"](Object(i["h"])(n,d),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`),s["b"]("NDHWC"===l,()=>`Error in conv3d: got dataFormat of ${l} but only NDHWC is currently supported.`);const b={x:f,filter:h},g={strides:n,pad:u,dataFormat:l,dilations:d},y=r["a"].runKernel(a["F"],b,g);return m?Object(c["a"])(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}const d=Object(u["b"])({conv3d_:l})},"163a":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(o["a"])(e,"x","sqrt"),n={x:t};return r["a"].runKernel(a["Pc"],n)}const u=Object(s["b"])({sqrt_:i})},1906:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}]},"1ab7":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("6ad5"),s=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){Object(o["b"])("complex64"===e.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);const t={input:e};return r["a"].runKernel(a["db"],t)}const u=Object(s["b"])({fft_:i})},"1ba2":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(o["a"])(e,"x","expm1"),n={x:t};return r["a"].runKernel(a["cb"],n)}const u=Object(s["b"])({expm1_:i})},"1df6":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(o["a"])(e,"x","sign"),n={x:t};return r["a"].runKernel(a["Cc"],n)}const u=Object(s["b"])({sign_:i})},"1e68":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t=0,n=!1,s=!1){const i=Object(o["a"])(e,"x","cumsum"),u={x:i},c={axis:t,exclusive:n,reverse:s};return r["a"].runKernel(a["L"],u,c)}const u=Object(s["b"])({cumsum_:i})},"1fb5":function(e,t,n){"use strict";t.byteLength=l,t.toByteArray=p,t.fromByteArray=m;for(var r=[],a=[],o="undefined"!==typeof Uint8Array?Uint8Array:Array,s="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",i=0,u=s.length;i<u;++i)r[i]=s[i],a[s.charCodeAt(i)]=i;function c(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=e.indexOf("=");-1===n&&(n=t);var r=n===t?0:4-n%4;return[n,r]}function l(e){var t=c(e),n=t[0],r=t[1];return 3*(n+r)/4-r}function d(e,t,n){return 3*(t+n)/4-n}function p(e){var t,n,r=c(e),s=r[0],i=r[1],u=new o(d(e,s,i)),l=0,p=i>0?s-4:s;for(n=0;n<p;n+=4)t=a[e.charCodeAt(n)]<<18|a[e.charCodeAt(n+1)]<<12|a[e.charCodeAt(n+2)]<<6|a[e.charCodeAt(n+3)],u[l++]=t>>16&255,u[l++]=t>>8&255,u[l++]=255&t;return 2===i&&(t=a[e.charCodeAt(n)]<<2|a[e.charCodeAt(n+1)]>>4,u[l++]=255&t),1===i&&(t=a[e.charCodeAt(n)]<<10|a[e.charCodeAt(n+1)]<<4|a[e.charCodeAt(n+2)]>>2,u[l++]=t>>8&255,u[l++]=255&t),u}function h(e){return r[e>>18&63]+r[e>>12&63]+r[e>>6&63]+r[63&e]}function f(e,t,n){for(var r,a=[],o=t;o<n;o+=3)r=(e[o]<<16&16711680)+(e[o+1]<<8&65280)+(255&e[o+2]),a.push(h(r));return a.join("")}function m(e){for(var t,n=e.length,a=n%3,o=[],s=16383,i=0,u=n-a;i<u;i+=s)o.push(f(e,i,i+s>u?u:i+s));return 1===a?(t=e[n-1],o.push(r[t>>2]+r[t<<4&63]+"==")):2===a&&(t=(e[n-2]<<8)+e[n-1],o.push(r[t>>10]+r[t>>4&63]+r[t<<2&63]+"=")),o.join("")}a["-".charCodeAt(0)]=62,a["_".charCodeAt(0)]=63},2:function(e,t){},"220f":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(o["a"])(e,"x","asin"),n={x:t};return r["a"].runKernel(a["j"],n)}const u=Object(s["b"])({asin_:i})},"23bf":function(e,t,n){"use strict";
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var r,a,o,s,i;n.d(t,"a",(function(){return r})),n.d(t,"c",(function(){return c})),n.d(t,"b",(function(){return l})),function(e){e["R0"]="R0",e["R1"]="R1",e["R2"]="R2",e["R3"]="R3",e["R4"]="R4",e["R5"]="R5",e["R6"]="R6"}(r||(r={})),function(e){e["float32"]="float32",e["int32"]="int32",e["bool"]="int32",e["complex64"]="complex64"}(a||(a={})),function(e){e["float32"]="float32",e["int32"]="int32",e["bool"]="bool",e["complex64"]="complex64"}(o||(o={})),function(e){e["float32"]="float32",e["int32"]="float32",e["bool"]="float32",e["complex64"]="complex64"}(s||(s={})),function(e){e["float32"]="complex64",e["int32"]="complex64",e["bool"]="complex64",e["complex64"]="complex64"}(i||(i={}));const u={float32:s,int32:a,bool:o,complex64:i};function c(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return u[e][t]}function l(e){return c(e,"int32")}},"24b0":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(o["a"])(e,"input","imag"),n={input:t};return r["a"].runKernel(a["sb"],n)}const u=Object(s["b"])({imag_:i})},"29a8":function(e,t,n){"use strict";(function(e){n("6ae2");var t=n("7ed6"),r=n("b333");
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const a=Object(r["c"])();a.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),a.registerFlag("IS_BROWSER",()=>t["isBrowser"]()),a.registerFlag("IS_NODE",()=>"undefined"!==typeof e&&"undefined"!==typeof e.versions&&"undefined"!==typeof e.versions.node),a.registerFlag("IS_CHROME",()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),a.registerFlag("PROD",()=>!1),a.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>a.getBool("DEBUG")),a.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),a.registerFlag("IS_TEST",()=>!1),a.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0),a.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1)}).call(this,n("4362"))},"29d8":function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}]},"2f2c":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("6ad5"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t,n,i=!1){const u=Object(o["a"])(e,"x","denseBincount"),c=Object(o["a"])(t,"weights","denseBincount");s["b"]("int32"===u.dtype,()=>"Error in denseBincount: input dtype must be int32, but got "+u.dtype),s["b"](u.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${u.rank}.`),s["b"](n>=0,()=>`size must be non-negative, but got ${n}.`),s["b"](c.size===u.size||0===c.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${u.shape}, weights shape: `+c.shape+".");const l={x:u,weights:c},d={size:n,binaryOutput:i};return r["a"].runKernel(a["M"],l,d)}const c=Object(i["b"])({denseBincount_:u})},"2fb1":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t=0){const n=Object(o["a"])(e,"x","step"),s={x:n},i={alpha:t};return r["a"].runKernel(a["Sc"],s,i)}const u=Object(s["b"])({step_:i})},"31bb":function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}]},"34d7":function(e,t,n){"use strict";n.d(t,"b",(function(){return m})),n.d(t,"f",(function(){return x})),n.d(t,"e",(function(){return v})),n.d(t,"d",(function(){return O})),n.d(t,"a",(function(){return w})),n.d(t,"c",(function(){return j}));var r=n("f490"),a=n("6ad5");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=20,s=3,i=7;function u(e,t,n,r){const o=Object(a["j"])(t),s=c(e,t,n,o),i=t.length,u=p(e,t,n,o,s),l=["Tensor"];return r&&(l.push("  dtype: "+n),l.push("  rank: "+i),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(u.map(e=>"    "+e).join("\n")),l.join("\n")}function c(e,t,n,r){const o=Object(a["O"])(t),s=r[r.length-1],i=new Array(s).fill(0),u=t.length,c="complex64"===n?h(e):e;if(u>1)for(let a=0;a<o/s;a++){const e=a*s;for(let t=0;t<s;t++)i[t]=Math.max(i[t],l(c[e+t],0,n).length)}return i}function l(e,t,n){let r;return r=Array.isArray(e)?parseFloat(e[0].toFixed(i))+" + "+parseFloat(e[1].toFixed(i))+"j":Object(a["z"])(e)?`'${e}'`:"bool"===n?d(e):parseFloat(e.toFixed(i)).toString(),Object(a["L"])(r,t)}function d(e){return 0===e?"false":"true"}function p(e,t,n,r,a,i=!0){const u="complex64"===n?2:1,c=t[0],f=t.length;if(0===f){if("complex64"===n){const t=h(e);return[l(t[0],0,n)]}return"bool"===n?[d(e[0])]:[e[0].toString()]}if(1===f){if(c>o){const t=s*u;let r=Array.from(e.slice(0,t)),o=Array.from(e.slice((c-s)*u,c*u));return"complex64"===n&&(r=h(r),o=h(o)),["["+r.map((e,t)=>l(e,a[t],n)).join(", ")+", ..., "+o.map((e,t)=>l(e,a[c-s+t],n)).join(", ")+"]"]}const t="complex64"===n?h(e):Array.from(e);return["["+t.map((e,t)=>l(e,a[t],n)).join(", ")+"]"]}const m=t.slice(1),b=r.slice(1),g=r[0]*u,y=[];if(c>o){for(let t=0;t<s;t++){const r=t*g,o=r+g;y.push(...p(e.slice(r,o),m,n,b,a,!1))}y.push("...");for(let t=c-s;t<c;t++){const r=t*g,o=r+g;y.push(...p(e.slice(r,o),m,n,b,a,t===c-1))}}else for(let o=0;o<c;o++){const t=o*g,r=t+g;y.push(...p(e.slice(t,r),m,n,b,a,o===c-1))}const x=2===f?",":"";y[0]="["+y[0]+x;for(let o=1;o<y.length-1;o++)y[o]=" "+y[o]+x;let v=",\n";for(let o=2;o<f;o++)v+="\n";return y[y.length-1]=" "+y[y.length-1]+"]"+(i?"":v),y}function h(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var f=n("eb7e");
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class m{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=a["O"](e),null!=n){const e=n.length;a["b"](e===this.size,()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||a["n"](t,this.size),this.strides=Object(a["j"])(e)}set(e,...t){0===t.length&&(t=[0]),a["b"](t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const r of e){if(r<0||r>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=`+this.shape;throw new Error(t)}t++}let n=e[e.length-1];for(let r=0;r<e.length-1;++r)n+=this.strides[r]*e[r];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return b().makeTensor(this.values,this.shape,this.dtype)}}let b=null,g=null,y=null;function x(e){b=e}function v(e){g=e}function O(e){y=e}class w{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=a["O"](e),this.strides=Object(a["j"])(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return g.buffer(this.shape,this.dtype,e)}bufferSync(){return g.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Object(a["U"])(this.shape,e,"complex64"===this.dtype)}arraySync(){return Object(a["U"])(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=b().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map(e=>f["decodeString"](e))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=b().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>f["decodeString"](e))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await b().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(b().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return g.print(this,e)}clone(){return this.throwIfDisposed(),g.clone(this)}toString(e=!1){const t=this.dataSync();return u(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),g.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),b().makeVariable(this,e,t,n)}}function k(){return Object(r["a"])("Tensor",()=>w)}Object.defineProperty(w,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),k();class j extends w{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!a["a"](e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);b().disposeTensor(this),this.dataId=e.dataId,b().incRef(this,null)}dispose(){b().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(j,Symbol.hasInstance,{value:e=>e instanceof w&&null!=e.assign&&e.assign instanceof Function})},"350f":function(e,t,n){"use strict";(function(e){n.d(t,"f",(function(){return u})),n.d(t,"e",(function(){return c})),n.d(t,"a",(function(){return h})),n.d(t,"b",(function(){return f})),n.d(t,"d",(function(){return m})),n.d(t,"c",(function(){return b})),n.d(t,"i",(function(){return g})),n.d(t,"g",(function(){return y})),n.d(t,"h",(function(){return x}));var r=n("0777"),a=n("357d"),o=n("6ad5"),s=n("9847");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const i=4;async function u(e,t){const n=[],r=[],a=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);for(let s=0;s<a.length;++s){const o=a[s],u=Array.isArray(e)?e[s].tensor:e[o];if("float32"!==u.dtype&&"int32"!==u.dtype&&"bool"!==u.dtype&&"string"!==u.dtype&&"complex64"!==u.dtype)throw new Error(`Unsupported dtype in weight '${o}': ${u.dtype}`);const c={name:o,shape:u.shape,dtype:u.dtype};if("string"===u.dtype){const e=new Promise(async e=>{const t=await u.bytes(),n=t.reduce((e,t)=>e+t.length,0)+i*t.length,r=new Uint8Array(n);let a=0;for(let o=0;o<t.length;o++){const e=t[o],n=new Uint8Array(new Uint32Array([e.length]).buffer);r.set(n,a),a+=i,r.set(e,a),a+=e.length}e(r)});r.push(e)}else r.push(u.data());null!=t&&(c.group=t),n.push(c)}const o=await Promise.all(r);return{data:l(o),specs:n}}function c(e,t){const n={};let u,c=0;for(const l of t){const t=l.name,d=l.dtype,p=l.shape,h=Object(o["O"])(p);let f;if("quantization"in l){const n=l.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${l.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${l.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==d)throw new Error(`Weight ${l.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${d}.`)}const r=s["a"][n.dtype],a=e.slice(c,c+h*r),o="uint8"===n.dtype?new Uint8Array(a):new Uint16Array(a);if("float32"===d)if("uint8"===n.dtype||"uint16"===n.dtype){f=new Float32Array(o.length);for(let e=0;e<o.length;e++){const t=o[e];f[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===u&&(u=k()),f=u(o)}else{if("int32"!==d)throw new Error(`Unsupported dtype in weight '${t}': ${d}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);f=new Int32Array(o.length);for(let e=0;e<o.length;e++){const t=o[e];f[e]=Math.round(t*n.scale+n.min)}}c+=h*r}else if("string"===d){const t=Object(o["O"])(l.shape);f=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(c,c+i))[0];c+=i;const n=new Uint8Array(e.slice(c,c+t));f.push(n),c+=t}}else{const o=s["a"][d],i=e.slice(c,c+h*o);if("float32"===d)f=new Float32Array(i);else if("int32"===d)f=new Int32Array(i);else if("bool"===d)f=new Uint8Array(i);else{if("complex64"!==d)throw new Error(`Unsupported dtype in weight '${t}': ${d}`);{f=new Float32Array(i);const e=new Float32Array(f.length/2),o=new Float32Array(f.length/2);for(let t=0;t<e.length;t++)e[t]=f[2*t],o[t]=f[2*t+1];const s=Object(a["a"])(e,p,"float32"),u=Object(a["a"])(o,p,"float32");n[t]=Object(r["a"])(s,u),s.dispose(),u.dispose()}}c+=h*o}"complex64"!==d&&(n[t]=Object(a["a"])(f,p,d))}return n}function l(e){if(null===e)throw new Error("Invalid input value: "+JSON.stringify(e));let t=0;const n=[];e.forEach(e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+e.constructor.name)});const r=new Uint8Array(t);let a=0;return n.forEach(e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength}),r.buffer}const d="undefined"!==typeof e&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function p(t){return d?e.byteLength(t):new Blob([t]).size}function h(t){if(d)return e.from(t).toString("base64");const n=new Uint8Array(t);let r="";for(let e=0,a=n.length;e<a;e++)r+=String.fromCharCode(n[e]);return btoa(r)}function f(t){if(d){const n=e.from(t,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}const n=atob(t),r=new Uint8Array(n.length);for(let e=0;e<n.length;++e)r.set([n.charCodeAt(e)],e);return r.buffer}function m(e){if(1===e.length)return e[0];let t=0;e.forEach(e=>{t+=e.byteLength});const n=new Uint8Array(t);let r=0;return e.forEach(e=>{n.set(new Uint8Array(e),r),r+=e.byteLength}),n.buffer}function b(e){const t="/";e=e.trim();while(e.endsWith(t))e=e.slice(0,e.length-1);const n=e.split(t);return n[n.length-1]}function g(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function y(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[r,a]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=a}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function x(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:p(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:p(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function v(){const e=e=>{let t=e<<13,n=0;while(0===(8388608&t))n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}function O(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function w(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function k(){const e=v(),t=O(),n=w();return r=>{const a=new ArrayBuffer(4*r.length),o=new Uint32Array(a);for(let s=0;s<r.length;s++){const a=r[s],i=e[n[a>>10]+(1023&a)]+t[a>>10];o[s]=i}return new Float32Array(a)}}}).call(this,n("b639").Buffer)},"357d":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("a3f7"),a=n("5959");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(e,t,n){const o=Object(r["c"])(e,n);return Object(a["a"])(e,t,o,n)}},"35c9":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t){const n=Object(o["a"])(e,"x","reshape","string_or_numeric"),s={x:n},i={shape:t};return r["a"].runKernel(a["pc"],s,i)}const u=Object(s["b"])({reshape_:i})},"364e":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("6ad5"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t,n="NHWC"){const i=Object(o["a"])(e,"x","depthToSpace"),u="NHWC"===n?i.shape[1]:i.shape[2],c="NHWC"===n?i.shape[2]:i.shape[3],l="NHWC"===n?i.shape[3]:i.shape[1];s["b"](u*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${u} and ${t}  for depthToSpace with input shape\n    ${i.shape}`),s["b"](c*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${c} and ${t} for depthToSpace with input shape\n        ${i.shape}`),s["b"](l%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${l} for depthToSpace with input shape ${i.shape}`);const d={x:i},p={blockSize:t,dataFormat:n};return r["a"].runKernel(a["N"],d,p)}const c=Object(i["b"])({depthToSpace_:u})},"36e5":function(e,t,n){"use strict";n.d(t,"b",(function(){return a})),n.d(t,"c",(function(){return o})),n.d(t,"d",(function(){return s})),n.d(t,"e",(function(){return i})),n.d(t,"a",(function(){return u})),n.d(t,"f",(function(){return c})),n.d(t,"h",(function(){return l})),n.d(t,"g",(function(){return d}));var r=n("6ad5");
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function o(e,t,n){const r=e.length+t.length,a=[];let o=0,s=0;for(let i=0;i<r;i++)-1===n.indexOf(i)?a.push(e[o++]):a.push(t[s++]);return a}function s(e,t){const n=[],r=e.length;for(let o=0;o<r;o++)-1===t.indexOf(o)&&n.push(e[o]);const a=t.map(t=>e[t]);return[n,a]}function i(e,t){const n=t.map(e=>1);return o(e,n,t)}function u(e,t,n){r["b"](a(t,n),()=>e+" supports only inner-most axes for now. "+`Got axes ${t} and rank-${n} input.`)}function c(e,t){if(a(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach(e=>n.push(e)),n}function l(e){return e.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function d(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}},"3a44":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("6ad5"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t=0){const n=Object(o["a"])(e,"x","unstack","string_or_numeric");s["b"](t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);const i={value:n},u={axis:t};return r["a"].runKernel(a["gd"],i,u)}const c=Object(i["b"])({unstack_:u})},"3b28":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("6ad5"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t,n){const i=Object(o["a"])(e,"x","batchToSpaceND"),u=t.reduce((e,t)=>e*t);s["b"](i.rank>=1+t.length,()=>`input rank is ${i.rank} but should be > than blockShape.length ${t.length}`),s["b"](n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),s["b"](i.shape[0]%u===0,()=>`input tensor batch is ${i.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${u}`);const c={x:i},l={blockShape:t,crops:n};return r["a"].runKernel(a["t"],c,l)}const c=Object(i["b"])({batchToSpaceND_:u})},"3bb7":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(o["a"])(e,"x","neg"),n={x:t};return r["a"].runKernel(a["Wb"],n)}const u=Object(s["b"])({neg_:i})},"3bfc":function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}]},"3c35":function(e,t){(function(t){e.exports=t}).call(this,{})},"3d50":function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}]},"3efc":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef"),i=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t,n,s=!1){const u=Object(o["a"])(e,"logits","multinomial"),c=u.size,l=u.rank;if(c<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+c+".");if(l>2)throw new Error("Rank of probabilities must be 1 or 2, but is "+l);n=n||Math.random();const d=1===l?Object(i["a"])(u,[1,-1]):u,p={logits:d},h={numSamples:t,seed:n,normalized:s},f=r["a"].runKernel(a["Ub"],p,h);return 1===l?Object(i["a"])(f,[f.size]):f}const c=Object(s["b"])({multinomial_:u})},4184:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),o=n("76c2"),s=n("a3f7"),i=n("526f"),u=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t){let n=Object(s["a"])(e,"a","squaredDifference"),u=Object(s["a"])(t,"b","squaredDifference");[n,u]=Object(o["makeTypesMatch"])(n,u),Object(i["a"])(n.shape,u.shape);const c={a:n,b:u},l={};return r["a"].runKernel(a["Rc"],c,l)}const l=Object(u["b"])({squaredDifference_:c})},4362:function(e,t,n){t.nextTick=function(e){var t=Array.prototype.slice.call(arguments);t.shift(),setTimeout((function(){e.apply(null,t)}),0)},t.platform=t.arch=t.execPath=t.title="browser",t.pid=1,t.browser=!0,t.env={},t.argv=[],t.binding=function(e){throw new Error("No such module. (Possibly not yet loaded)")},function(){var e,r="/";t.cwd=function(){return r},t.chdir=function(t){e||(e=n("df7c")),r=e.resolve(t,r)}}(),t.exit=t.kill=t.umask=t.dlopen=t.uptime=t.memoryUsage=t.uvCounters=function(){},t.features={}},4516:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t=null,n=!1){const s=Object(o["a"])(e,"x","any","bool"),i={x:s},u={axis:t,keepDims:n};return r["a"].runKernel(a["g"],i,u)}const u=Object(s["b"])({any_:i})},"45bb":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t,n=0){const s=Object(o["a"])(e,"x","split"),i={x:s},u={numOrSizeSplits:t,axis:n};return r["a"].runKernel(a["Oc"],i,u)}const u=Object(s["b"])({split_:i})},4611:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),o=n("76c2"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t){let n=Object(s["a"])(e,"a","mod"),i=Object(s["a"])(t,"b","mod");[n,i]=Object(o["makeTypesMatch"])(n,i);const u={a:n,b:i};return r["a"].runKernel(a["Tb"],u)}const c=Object(i["b"])({mod_:u})},4615:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(o["a"])(e,"x","acosh"),n={x:t};return r["a"].runKernel(a["c"],n)}const u=Object(s["b"])({acosh_:i})},"46a8":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(o["a"])(e,"x","relu6"),n={x:t};return r["a"].runKernel(a["oc"],n)}const u=Object(s["b"])({relu6_:i})},"46b1":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(o["a"])(e,"x","log1p"),n={x:t};return r["a"].runKernel(a["Db"],n)}const u=Object(s["b"])({log1p_:i})},"46b8":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("6ae2"),a=n("c05b");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(e,t,n){const o={shape:e,value:t,dtype:n};return r["a"].runKernel(a["eb"],{},o)}},"46cc":function(e,t,n){"use strict";
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
var r,a;n.d(t,"a",(function(){return r})),function(e){e[e["DT_INVALID"]=0]="DT_INVALID",e[e["DT_FLOAT"]=1]="DT_FLOAT",e[e["DT_DOUBLE"]=2]="DT_DOUBLE",e[e["DT_INT32"]=3]="DT_INT32",e[e["DT_UINT8"]=4]="DT_UINT8",e[e["DT_INT16"]=5]="DT_INT16",e[e["DT_INT8"]=6]="DT_INT8",e[e["DT_STRING"]=7]="DT_STRING",e[e["DT_COMPLEX64"]=8]="DT_COMPLEX64",e[e["DT_INT64"]=9]="DT_INT64",e[e["DT_BOOL"]=10]="DT_BOOL",e[e["DT_QINT8"]=11]="DT_QINT8",e[e["DT_QUINT8"]=12]="DT_QUINT8",e[e["DT_QINT32"]=13]="DT_QINT32",e[e["DT_BFLOAT16"]=14]="DT_BFLOAT16",e[e["DT_FLOAT_REF"]=101]="DT_FLOAT_REF",e[e["DT_DOUBLE_REF"]=102]="DT_DOUBLE_REF",e[e["DT_INT32_REF"]=103]="DT_INT32_REF",e[e["DT_UINT8_REF"]=104]="DT_UINT8_REF",e[e["DT_INT16_REF"]=105]="DT_INT16_REF",e[e["DT_INT8_REF"]=106]="DT_INT8_REF",e[e["DT_STRING_REF"]=107]="DT_STRING_REF",e[e["DT_COMPLEX64_REF"]=108]="DT_COMPLEX64_REF",e[e["DT_INT64_REF"]=109]="DT_INT64_REF",e[e["DT_BOOL_REF"]=110]="DT_BOOL_REF",e[e["DT_QINT8_REF"]=111]="DT_QINT8_REF",e[e["DT_QUINT8_REF"]=112]="DT_QUINT8_REF",e[e["DT_QINT32_REF"]=113]="DT_QINT32_REF",e[e["DT_BFLOAT16_REF"]=114]="DT_BFLOAT16_REF"}(r||(r={})),function(e){let t;(function(e){e[e["LEGACY"]=0]="LEGACY",e[e["V1"]=1]="V1",e[e["V2"]=2]="V2"})(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(a||(a={}))},4749:function(e,t,n){"use strict";n.d(t,"c",(function(){return f})),n.d(t,"b",(function(){return m})),n.d(t,"a",(function(){return b})),n.d(t,"d",(function(){return g}));var r=n("526f"),a=n("9e38"),o=n("6f37"),s=n("a5aa"),i=n("520f"),u=n("917a"),c=n("46a8"),l=n("35c9"),d=n("ffb3"),p=n("2fb1"),h=n("e053");
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function f(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Object(s["a"])(e,Object(p["a"])(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function m(e,t){let n=t;const a=r["c"](e.shape,t.shape);return a.length>0&&(n=Object(h["a"])(n,a)),Object(l["a"])(n,e.shape)}function b(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Object(u["a"])(e);if("elu"===t)return Object(a["a"])(e);if("relu6"===t)return Object(c["a"])(e);if("prelu"===t)return Object(i["a"])(e,n);if("leakyrelu"===t)return Object(o["a"])(e,r);if("sigmoid"===t)return Object(d["a"])(e);throw new Error(`Unknown fused activation ${t}.`)}const g=(e,t)=>{const n=e>0;return!n||"linear"===t}},4850:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("6ad5"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e){s["b"](Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),s["b"](e.length>=1,()=>"Must pass at least one tensor to tf.addN(), but got "+e.length);const t=e.map((e,t)=>Object(o["a"])(e,"tensors"+t,"addN")),n=t[0];t.forEach(e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(e=>{if(!s["a"](e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const i=t;return r["a"].runKernel(a["e"],i)}const c=Object(i["b"])({addN_:u})},"487b":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),o=n("76c2"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t,n=!1,i=!1){let u=Object(s["a"])(e,"a","matMul"),c=Object(s["a"])(t,"b","matMul");[u,c]=Object(o["makeTypesMatch"])(u,c);const l={a:u,b:c},d={transposeA:n,transposeB:i};return r["a"].runKernel(a["s"],l,d)}const c=Object(i["b"])({matMul_:u})},"48db":function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("f0a9"),i=n("54ef"),u=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t){let n=Object(o["a"])(e,"broadcastTo","x");const i=n.shape;if(t.some(e=>!(e>0)||e%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();while(e.length<t.length)e.unshift(1);n=Object(u["a"])(n,e)}const c=n.shape,l=Array.from(t);for(let r=t.length-1;r>=0;r--)if(c[r]===t[r])l[r]=1;else if(1!==n.shape[r])throw new Error(`broadcastTo(): [${i}] cannot be broadcast to [${t}].`);const d=l.map((e,t)=>e>1?t:-1).filter(e=>e>=0);if(0===d.length)return Object(s["a"])(n);const p={x:n},h={reps:l};return r["a"].runKernel(a["bd"],p,h)}const l=Object(i["b"])({broadcastTo_:c})},"4b05":function(e,t,n){"use strict";(function(e){var t=n("b333");
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r={importFetch:()=>n(0)};let a;class o{constructor(){this.util=n(1),this.textEncoder=new this.util.TextEncoder}fetch(e,n){return null!=Object(t["c"])().global.fetch?Object(t["c"])().global.fetch(e,n):(null==a&&(a=r.importFetch()),a(e,n))}now(){const t=e.hrtime();return 1e3*t[0]+t[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got "+t);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}}Object(t["c"])().get("IS_NODE")&&Object(t["c"])().setPlatform("node",new o)}).call(this,n("4362"))},"4c7a":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("6ad5"),s=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){Object(o["b"])("complex64"===e.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);const t={input:e};return r["a"].runKernel(a["qb"],t)}const u=Object(s["b"])({ifft_:i})},"4f20":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(o["a"])(e,"x","exp"),n={x:t};return r["a"].runKernel(a["ab"],n)}const u=Object(s["b"])({exp_:i})},"508f":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),o=n("76c2"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t){let n=Object(s["a"])(e,"a","floorDiv"),i=Object(s["a"])(t,"b","floorDiv");[n,i]=Object(o["makeTypesMatch"])(n,i);const u={a:n,b:i};return r["a"].runKernel(a["hb"],u)}const c=Object(i["b"])({floorDiv_:u})},"520f":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t){const n=Object(o["a"])(e,"x","prelu"),s=Object(o["a"])(t,"alpha","prelu"),i={x:n,alpha:s};return r["a"].runKernel(a["hc"],i)}const u=Object(s["b"])({prelu_:i})},"526c":function(e,t,n){"use strict";n.d(t,"d",(function(){return a})),n.d(t,"e",(function(){return o})),n.d(t,"f",(function(){return s})),n.d(t,"b",(function(){return i})),n.d(t,"g",(function(){return c})),n.d(t,"c",(function(){return l})),n.d(t,"a",(function(){return d}));var r=n("fa11");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a,s){const i=t.inputParams[e];if(i&&void 0!==i.inputIndexStart){const e=i.inputIndexStart,u=0===i.inputIndexEnd?void 0:void 0===i.inputIndexEnd?e+1:i.inputIndexEnd;if("tensor"===i.type)return o(t.inputNames[i.inputIndexStart],n,a,s);if("tensors"===i.type){const r=t.inputNames.slice(e,u);return r.map(e=>o(e,n,a,s))}const c=o(t.inputNames.slice(e)[0],n,a,s),l=c.dataSync();return"number"===i.type?l[0]:r["util"].toNestedArray(c.shape,l)}const u=t.attrParams[e];return u&&u.value}function o(e,t,n,r){const[a,o]=c(e);if(null!=r){const e=r.getHashTableHandleByName(a);if(null!=e)return e}const s=n.currentContextIds.find(e=>!!t[u(a,e)]);return void 0!==s?t[u(a,s)][o]:void 0}function s(e,t,n){return t[u(e,n.currentContextId)]}function i(e,t){const[n,r,a]=c(e);return[u(n,t&&t.currentContextId),r,a]}function u(e,t){return t?`${e}-${t}`:e}function c(e){const t=e.split(":");if(1===t.length)return[e,0,void 0];const n=t[0],r=3===t.length?t[1]:void 0,a=Number(t[t.length-1]);return[n,a,r]}function l(e,t,n){let r=a("pad",e,t,n);if("explicit"===r){r=a("explicitPaddings",e,t,n);const o=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)o[e][0]=r[2*e],o[e][1]=r[2*e+1];return o}return r}function d(e){return e.kept?e:Object(r["clone"])(e)}},"526f":function(e,t,n){"use strict";
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function r(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const o=n-1-a,s=e[o]||1,i=t[t.length-1-a]||1;i>1&&1===s&&r.unshift(o)}return r}function a(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],o=t.length-r-1,s=t[o];(null==a||1===a&&s>1)&&n.unshift(o)}return n}function o(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let o=t[t.length-a-1];if(null==o&&(o=1),1===r)n.unshift(o);else if(1===o)n.unshift(r);else{if(r!==o){const n=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(n)}n.unshift(r)}}return n}n.d(t,"b",(function(){return r})),n.d(t,"c",(function(){return a})),n.d(t,"a",(function(){return o}))},"538e":function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"f",(function(){return d})),n.d(t,"d",(function(){return c})),n.d(t,"e",(function(){return l})),n.d(t,"b",(function(){return i})),n.d(t,"c",(function(){return u}));var r=n("6ae2"),a=n("34d7"),o=n("a3f7"),s=n("6ad5");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){return s["b"](s["u"](e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{const a=Object(o["a"])(t,"x","tf.grad","string_or_numeric"),i=null!=n?Object(o["a"])(n,"dy","tf.grad"):null;return r["a"].tidy(()=>{const{value:t,grads:n}=r["a"].gradients(()=>e(a),[a],i);return null!=i&&s["e"](t.shape,i.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),h(n),n[0]})}}function u(e){return s["b"](s["u"](e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{s["b"](Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const a=Object(o["b"])(t,"args","tf.grads","string_or_numeric"),i=null!=n?Object(o["a"])(n,"dy","tf.grads"):null;return r["a"].tidy(()=>{const{value:t,grads:n}=r["a"].gradients(()=>e(...a),a,i);return null!=i&&s["e"](t.shape,i.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),h(n),n})}}function c(e){return s["b"](s["u"](e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{s["b"](t instanceof a["a"],()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),s["b"](null==n||n instanceof a["a"],()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:o,value:i}=r["a"].gradients(()=>e(t),[t],n);return h(o),{grad:o[0],value:i}}}function l(e){return s["b"](s["u"](e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{s["b"](Array.isArray(t)&&t.every(e=>e instanceof a["a"]),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),s["b"](null==n||n instanceof a["a"],()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const o=r["a"].gradients(()=>e(...t),t,n);return null!=n&&s["e"](o.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),h(o.grads),o}}function d(e,t){s["b"](s["u"](e),()=>"The f passed in variableGrads(f) must be a function"),s["b"](null==t||Array.isArray(t)&&t.every(e=>e instanceof a["c"]),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=t;if(!n){t=[];for(const e in r["a"].registeredVariables)t.push(r["a"].registeredVariables[e])}const o=n?t.filter(e=>!e.trainable):null,i=t.length;t=t.filter(e=>e.trainable),s["b"](t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${i} variables is trainable.`);const u=!0,{value:c,grads:l}=r["a"].gradients(e,t,null,u);s["b"](l.some(e=>null!=e),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),s["b"](0===c.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${c.rank} tensor`);const d={};return t.forEach((e,t)=>{null!=l[t]&&(d[e.name]=l[t])}),null!=o&&o.forEach(e=>d[e.name]=null),{value:c,grads:d}}function p(e){return r["a"].customGrad(e)}function h(e){const t=e.filter(e=>null==e).length;if(t>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}},"53fd":function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("6ad5"),i=n("54ef"),u=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t=[1,1,1],n,i,c,l="NDHWC"){const d=Object(o["a"])(e,"x","maxPool3d");let p=d,h=!1;4===d.rank&&(h=!0,p=Object(u["a"])(d,[1,d.shape[0],d.shape[1],d.shape[2],d.shape[3]])),s["b"](5===p.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${p.rank}.`),s["b"]("NDHWC"===l,()=>"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of "+l),null!=c&&s["b"](s["v"](i),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${c} but got pad ${i}.`);const f={x:p},m={filterSize:t,strides:n,pad:i,dimRoundingMode:c,dataFormat:l},b=r["a"].runKernel(a["Kb"],f,m);return h?Object(u["a"])(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}const l=Object(i["b"])({maxPool3d_:c})},"54ef":function(e,t,n){"use strict";n.d(t,"a",(function(){return o})),n.d(t,"b",(function(){return s}));var r=n("6ae2"),a=n("6ad5");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o="__op";function s(e){const t=Object.keys(e);if(1!==t.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+t.length+" keys.");let n=t[0];const s=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=o;const i=(...e)=>{r["a"].startScope(n);try{const t=s(...e);return Object(a["x"])(t)&&console.error("Cannot return a Promise inside of tidy."),r["a"].endScope(t),t}catch(t){throw r["a"].endScope(null),t}};return Object.defineProperty(i,"name",{value:n,configurable:!0}),i}},5616:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t=1,n=!0){const s=Object(o["a"])(e,"x","topk");if(0===s.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const i=s.shape[s.shape.length-1];if(t<0)throw new Error("'k' passed to topk() must be >= 0 but got "+t);if(t>i)throw new Error(`'k' passed to topk() must be <= the last dimension (${i}) but got `+t);const u={x:s},c={k:t,sorted:n},[l,d]=r["a"].runKernel(a["cd"],u,c);return{values:l,indices:d}}const u=Object(s["b"])({topk_:i})},"57e0":function(e,t,n){"use strict";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var r;n.d(t,"a",(function(){return r})),function(e){e[e["NONE"]=0]="NONE",e[e["MEAN"]=1]="MEAN",e[e["SUM"]=2]="SUM",e[e["SUM_BY_NONZERO_WEIGHTS"]=3]="SUM_BY_NONZERO_WEIGHTS"}(r||(r={}))},5874:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}]},5894:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("6ae2"),a=n("c05b");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const o={start:e,stop:t,num:n};return r["a"].runKernel(a["Bb"],{},o)}},5959:function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n("6ae2"),a=n("6ad5"),o=n("eb7e");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(e,t,n,s){if(null==s&&(s=Object(a["r"])(e)),"complex64"===s)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Object(a["A"])(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Object(a["c"])(t);const e=Object(a["O"])(t),r=Object(a["O"])(n);Object(a["b"])(e===r,()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`);for(let o=0;o<n.length;++o){const e=n[o],r=o!==n.length-1||e!==Object(a["O"])(t.slice(o));Object(a["b"])(n[o]===t[o]||!r,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return Object(a["A"])(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==s?Object(o["toTypedArray"])(e,s):Object(a["m"])(e,[],!0),r["a"].makeTensor(e,t,s)}},5960:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(o["a"])(e,"x","ceil"),n={x:t};return r["a"].runKernel(a["x"],n)}const u=Object(s["b"])({ceil_:i})},"5a2c":function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n("6ae2"),a=n("6ad5"),o=n("0777");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(e,t="float32"){if("complex64"===t){const t=s(e,"float32"),n=s(e,"float32");return Object(o["a"])(t,n)}const n=Object(a["F"])(Object(a["O"])(e),t);return r["a"].makeTensor(n,e,t)}},"5dc4":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(o["a"])(e,"x","sinh"),n={x:t};return r["a"].runKernel(a["Ec"],n)}const u=Object(s["b"])({sinh_:i})},"5f2a":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(o["a"])(e,"x","rsqrt"),n={x:t};return r["a"].runKernel(a["xc"],n)}const u=Object(s["b"])({rsqrt_:i})},"5f44":function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}]},"5f87":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t=-1){const n=Object(o["a"])(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const s={logits:n},i={dim:t};return r["a"].runKernel(a["Gc"],s,i)}const u=Object(s["b"])({softmax_:i})},6002:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),o=n("76c2"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t){let n=Object(s["a"])(e,"a","atan2"),i=Object(s["a"])(t,"b","atan2");[n,i]=Object(o["makeTypesMatch"])(n,i);const u={a:n,b:i};return r["a"].runKernel(a["m"],u)}const c=Object(i["b"])({atan2_:u})},6125:function(e,t,n){var r=n("1212"),a=n("b838"),o=n("a49e"),s=n("cae0"),i=n("7aec"),u=n("89ed"),c=n("a49d");c.alea=r,c.xor128=a,c.xorwow=o,c.xorshift7=s,c.xor4096=i,c.tychei=u,e.exports=c},"61d4":function(e,t,n){"use strict";n.r(t),n.d(t,"getMask",(function(){return jv})),n.d(t,"segment",(function(){return Sv}));var r={};n.r(r),n.d(r,"simpleAbsImpl",(function(){return On})),n.d(r,"addImpl",(function(){return En})),n.d(r,"bincountImpl",(function(){return _n})),n.d(r,"bincountReduceImpl",(function(){return Fn})),n.d(r,"ceilImpl",(function(){return Pn})),n.d(r,"concatImpl",(function(){return Bn})),n.d(r,"equalImpl",(function(){return Vn})),n.d(r,"expImpl",(function(){return Wn})),n.d(r,"expm1Impl",(function(){return Gn})),n.d(r,"floorImpl",(function(){return qn})),n.d(r,"gatherNdImpl",(function(){return Xn})),n.d(r,"gatherV2Impl",(function(){return Yn})),n.d(r,"greaterImpl",(function(){return Qn})),n.d(r,"greaterEqualImpl",(function(){return Jn})),n.d(r,"lessImpl",(function(){return tr})),n.d(r,"lessEqualImpl",(function(){return rr})),n.d(r,"linSpaceImpl",(function(){return or})),n.d(r,"logImpl",(function(){return sr})),n.d(r,"maxImpl",(function(){return ur})),n.d(r,"maximumImpl",(function(){return cr})),n.d(r,"minimumImpl",(function(){return dr})),n.d(r,"multiplyImpl",(function(){return hr})),n.d(r,"negImpl",(function(){return br})),n.d(r,"notEqualImpl",(function(){return yr})),n.d(r,"prodImpl",(function(){return wr})),n.d(r,"rangeImpl",(function(){return jr})),n.d(r,"rsqrtImpl",(function(){return Sr})),n.d(r,"sliceImpl",(function(){return Ir})),n.d(r,"sparseFillEmptyRowsImpl",(function(){return Cr})),n.d(r,"sparseReshapeImpl",(function(){return $r})),n.d(r,"sparseSegmentReductionImpl",(function(){return Er})),n.d(r,"squaredDifferenceImpl",(function(){return Ar})),n.d(r,"stridedSliceImpl",(function(){return _r})),n.d(r,"stringNGramsImpl",(function(){return Dr})),n.d(r,"stringSplitImpl",(function(){return Pr})),n.d(r,"stringToHashBucketFastImpl",(function(){return Lr})),n.d(r,"subImpl",(function(){return Br})),n.d(r,"tileImpl",(function(){return Wr})),n.d(r,"topKImpl",(function(){return Hr})),n.d(r,"transposeImpl",(function(){return vr})),n.d(r,"uniqueImpl",(function(){return qr}));const a=Symbol("Comlink.proxy"),o=Symbol("Comlink.endpoint"),s=Symbol("Comlink.releaseProxy"),i=Symbol("Comlink.thrown"),u=e=>"object"===typeof e&&null!==e||"function"===typeof e,c={canHandle:e=>u(e)&&e[a],serialize(e){const{port1:t,port2:n}=new MessageChannel;return p(e,t),[n,[n]]},deserialize(e){return e.start(),m(e)}},l={canHandle:e=>u(e)&&i in e,serialize({value:e}){let t;return t=e instanceof Error?{isError:!0,value:{message:e.message,name:e.name,stack:e.stack}}:{isError:!1,value:e},[t,[]]},deserialize(e){if(e.isError)throw Object.assign(new Error(e.value.message),e.value);throw e.value}},d=new Map([["proxy",c],["throw",l]]);function p(e,t=self){t.addEventListener("message",(function n(r){if(!r||!r.data)return;const{id:a,type:o,path:s}=Object.assign({path:[]},r.data),u=(r.data.argumentList||[]).map(j);let c;try{const t=s.slice(0,-1).reduce((e,t)=>e[t],e),n=s.reduce((e,t)=>e[t],e);switch(o){case"GET":c=n;break;case"SET":t[s.slice(-1)[0]]=j(r.data.value),c=!0;break;case"APPLY":c=n.apply(t,u);break;case"CONSTRUCT":{const e=new n(...u);c=w(e)}break;case"ENDPOINT":{const{port1:t,port2:n}=new MessageChannel;p(e,n),c=O(t,[t])}break;case"RELEASE":c=void 0;break;default:return}}catch(l){c={value:l,[i]:0}}Promise.resolve(c).catch(e=>({value:e,[i]:0})).then(e=>{const[r,s]=k(e);t.postMessage(Object.assign(Object.assign({},r),{id:a}),s),"RELEASE"===o&&(t.removeEventListener("message",n),f(t))})})),t.start&&t.start()}function h(e){return"MessagePort"===e.constructor.name}function f(e){h(e)&&e.close()}function m(e,t){return g(e,[],t)}function b(e){if(e)throw new Error("Proxy has been released and is not useable")}function g(e,t=[],n=function(){}){let r=!1;const a=new Proxy(n,{get(n,o){if(b(r),o===s)return()=>S(e,{type:"RELEASE",path:t.map(e=>e.toString())}).then(()=>{f(e),r=!0});if("then"===o){if(0===t.length)return{then:()=>a};const n=S(e,{type:"GET",path:t.map(e=>e.toString())}).then(j);return n.then.bind(n)}return g(e,[...t,o])},set(n,a,o){b(r);const[s,i]=k(o);return S(e,{type:"SET",path:[...t,a].map(e=>e.toString()),value:s},i).then(j)},apply(n,a,s){b(r);const i=t[t.length-1];if(i===o)return S(e,{type:"ENDPOINT"}).then(j);if("bind"===i)return g(e,t.slice(0,-1));const[u,c]=x(s);return S(e,{type:"APPLY",path:t.map(e=>e.toString()),argumentList:u},c).then(j)},construct(n,a){b(r);const[o,s]=x(a);return S(e,{type:"CONSTRUCT",path:t.map(e=>e.toString()),argumentList:o},s).then(j)}});return a}function y(e){return Array.prototype.concat.apply([],e)}function x(e){const t=e.map(k);return[t.map(e=>e[0]),y(t.map(e=>e[1]))]}const v=new WeakMap;function O(e,t){return v.set(e,t),e}function w(e){return Object.assign(e,{[a]:!0})}function k(e){for(const[t,n]of d)if(n.canHandle(e)){const[r,a]=n.serialize(e);return[{type:"HANDLER",name:t,value:r},a]}return[{type:"RAW",value:e},v.get(e)||[]]}function j(e){switch(e.type){case"HANDLER":return d.get(e.name).deserialize(e.value);case"RAW":return e.value}}function S(e,t,n){return new Promise(r=>{const a=T();e.addEventListener("message",(function t(n){n.data&&n.data.id&&n.data.id===a&&(e.removeEventListener("message",t),r(n.data))})),e.start&&e.start(),e.postMessage(Object.assign({id:a},t),n)})}function T(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */function I(e,t,n,r){function a(e){return e instanceof n?e:new n((function(t){t(e)}))}return new(n||(n=Promise))((function(n,o){function s(e){try{u(r.next(e))}catch(t){o(t)}}function i(e){try{u(r["throw"](e))}catch(t){o(t)}}function u(e){e.done?n(e.value):a(e.value).then(s,i)}u((r=r.apply(e,t||[])).next())}))}function N(e,t){var n,r,a,o,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:i(0),throw:i(1),return:i(2)},"function"===typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function i(e){return function(t){return u([e,t])}}function u(o){if(n)throw new TypeError("Generator is already executing.");while(s)try{if(n=1,r&&(a=2&o[0]?r["return"]:o[0]?r["throw"]||((a=r["return"])&&a.call(r),0):r.next)&&!(a=a.call(r,o[1])).done)return a;switch(r=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,r=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(a=s.trys,!(a=a.length>0&&a[a.length-1])&&(6===o[0]||2===o[0])){s=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){s.label=o[1];break}if(6===o[0]&&s.label<a[1]){s.label=a[1],a=o;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(o);break}a[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(i){o=[6,i],r=0}finally{n=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}}Object.create;Object.create;var C=n("fa11");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $={},E={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function A(e,t){$[e]=t}function R(e){if(!(e in $)){const t=F(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;$[e]=t}const t=$[e];return t.isContextLost()?(delete $[e],R(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),$[e])}function _(e){if("undefined"!==typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function F(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=_(e);return t.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete $[e]},!1),1===e?t.getContext("webgl",E)||t.getContext("experimental-webgl",E):t.getContext("webgl2",E)}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var D,M,P;function L(e,t){return[t,e]}function B(e,t){return e*t}function V(e){const t=C["util"].sizeFromShape(e),n=Math.ceil(t/4);return C["util"].sizeToSquarishShape(n)}function z(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function W(e,t){const[n,r]=z(e,t);return n*r*4}function U(e,t){const n=e;let r,a,o,s,i,u,c,l,d,p;return 2===Object(C["env"])().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,o=n.RGBA16F,s=n.RGBA32F,i=n.RED,c=4,l=1,d=n.HALF_FLOAT,p=n.FLOAT):(r=e.RGBA,a=e.RGBA,o=e.RGBA,s=n.RGBA,i=e.RGBA,c=4,l=4,d=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT),u=e.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:s,textureFormatFloat:i,downloadTextureFormat:u,downloadUnpackNumChannels:c,defaultNumChannels:l,textureTypeHalfFloat:d,textureTypeFloat:p}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G(e,t){const n=t();return Object(C["env"])().getBool("DEBUG")&&H(e),n}function H(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+Y(e,t))}(function(e){e[e["DENSE"]=0]="DENSE",e[e["SHARED_BATCH"]=1]="SHARED_BATCH"})(D||(D={})),function(e){e[e["RENDER"]=0]="RENDER",e[e["UPLOAD"]=1]="UPLOAD",e[e["PIXELS"]=2]="PIXELS",e[e["DOWNLOAD"]=3]="DOWNLOAD"}(M||(M={})),function(e){e[e["UNPACKED_FLOAT16"]=0]="UNPACKED_FLOAT16",e[e["UNPACKED_FLOAT32"]=1]="UNPACKED_FLOAT32",e[e["PACKED_4X1_UNSIGNED_BYTE"]=2]="PACKED_4X1_UNSIGNED_BYTE",e[e["PACKED_2X2_FLOAT32"]=3]="PACKED_2X2_FLOAT32",e[e["PACKED_2X2_FLOAT16"]=4]="PACKED_2X2_FLOAT16"}(P||(P={}));const q=5.96e-8,K=65504;function X(e){return!!(Object(C["env"])().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||q<Math.abs(e)&&Math.abs(e)<K)}function Y(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code "+t}}function Q(e,t){return xe(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function Z(e,t){const n=xe(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(G(e,()=>e.shaderSource(n,t)),G(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function J(e,t){const n=xe(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(G(e,()=>e.shaderSource(n,t)),G(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw te(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const ee=/ERROR: [0-9]+:([0-9]+):/g;function te(e,t){const n=ee.exec(t);if(null==n)return console.log("Couldn't parse line number in error: "+t),void console.log(e);const r=+n[1],a=e.split("\n"),o=a.length.toString().length+2,s=a.map((e,t)=>C["util"].rightPad((t+1).toString(),o)+e);let i=0;for(let d=0;d<s.length;d++)i=Math.max(s[d].length,i);const u=s.slice(0,r-1),c=s.slice(r-1,r),l=s.slice(r);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log("%c "+C["util"].rightPad(c[0],i),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(l.join("\n"))}function ne(e){return xe(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function re(e,t){if(G(e,()=>e.linkProgram(t)),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function ae(e,t){if(G(e,()=>e.validateProgram(t)),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function oe(e,t){const n=xe(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return G(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),G(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function se(e,t){const n=xe(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return G(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),G(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function ie(e){return xe(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function ue(e,t){const n=Object(C["env"])().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){const n=`[${e}x${t}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(e>n||t>n){const r=`[${e}x${t}]`,a=`[${n}x${n}]`;throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+a+".")}}function ce(e){return xe(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function le(e,t,n,r,a,o,s){const i=e.getAttribLocation(t,n);return-1!==i&&(G(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),G(e,()=>e.vertexAttribPointer(i,a,e.FLOAT,!1,o,s)),G(e,()=>e.enableVertexAttribArray(i)),!0)}function de(e,t,n){ve(e,n),G(e,()=>e.activeTexture(e.TEXTURE0+n)),G(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function pe(e,t,n){return xe(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}function he(e,t,n){return e.getUniformLocation(t,n)}function fe(e,t,n,r){G(e,()=>de(e,t,r)),G(e,()=>e.uniform1i(n,r))}function me(e,t,n){G(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),G(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function be(e,t){G(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),G(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function ge(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+ye(e,t))}function ye(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error "+t}}function xe(e,t,n){const r=G(e,()=>t());if(null==r)throw new Error(n);return r}function ve(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){const e=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${e}.`)}}function Oe(e,t=2){return C["util"].sizeFromShape(e.slice(0,e.length-t))}function we(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function ke(e){let t=[1,1,1];const n=0===e.length||1===e.length&&1===e[0];return n||(t=[Oe(e),...we(e)]),t}function je(e,t=!1){let n=Object(C["env"])().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,e=e.map((t,n)=>n>=e.length-2?C["util"].nearestLargerEven(e[n]):e[n]),1===e.length&&(e=[2,e[0]])),2!==e.length){const t=C["util"].squeezeShape(e);e=t.newShape}let r=C["util"].sizeFromShape(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=Oe(e);let n=2,a=2;return e.length&&([n,a]=we(e)),r=t*(n/2)*(a/2),C["util"].sizeToSquarishShape(r).map(e=>2*e)}return C["util"].sizeToSquarishShape(r)}function Se(e){return e%2===0}function Te(e,t){if(e=e.slice(-2),t=t.slice(-2),C["util"].arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(Se(n)&&Se(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&Se(e[0])&&Se(t[0])}let Ie,Ne;function Ce(e){if(null==Ie){const t=R(e);Ie=t.getParameter(t.MAX_TEXTURE_SIZE)}return Ie}function $e(e){if(null==Ne){const t=R(e);Ne=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Ne)}function Ee(e){if(0===e)return 0;let t;const n=R(e);return t=Ae(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:Ae(n,"EXT_disjoint_timer_query")?1:0,t}function Ae(e,t){const n=e.getExtension(t);return null!=n}function Re(e){try{const t=R(e);if(null!=t)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function _e(e){if(0===e)return!1;const t=R(e);if(1===e){if(!Ae(t,"OES_texture_float"))return!1}else if(!Ae(t,"EXT_color_buffer_float"))return!1;const n=De(t);return n}function Fe(e){if(0===e)return!1;const t=R(e);if(1!==e){if(Ae(t,"EXT_color_buffer_float"))return De(t);const e="EXT_color_buffer_half_float";if(Ae(t,e)){const n=t.getExtension(e);return Me(t,n)}return!1}if(!Ae(t,"OES_texture_float"))return!1;if(!Ae(t,"WEBGL_color_buffer_float"))return!1;const n=De(t);return n}function De(e){const t=U(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);const r=1,a=1;e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,r,a,0,t.textureFormatFloat,t.textureTypeFloat,null);const o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(o),s}function Me(e,t){const n=U(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);const a=1,o=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,a,o,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(s),i}function Pe(e){if(2!==e)return!1;const t=R(e),n=null!=t.fenceSync;return n}function Le(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&C["util"].assert("complex64"!==e.dtype,()=>t+" does not support complex64 tensors in the WebGL backend.")})}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Be=Object(C["env"])();
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ve(){let e,t,n,r,a,o,s,i,u,c;return 2===Object(C["env"])().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",o="outputColor",s="out vec4 outputColor;",i="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",o="gl_FragColor",s="",i="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:o,defineOutput:s,defineSpecialNaN:i,defineSpecialInf:u,defineRound:c}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ze(e,t,n="index"){const r=C["util"].computeStrides(t);return r.map((t,a)=>{const o=`int ${e[a]} = ${n} / ${t}`,s=a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`;return`${o}; ${s};`}).join("")}function We(e,t,n="index"){const r=C["util"].computeStrides(t);return r.map((t,a)=>{const o=`int ${e[a]} = ${n} / outShapeStrides[${a}]`,s=a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`;return`${o}; ${s};`}).join("")}function Ue(e){const t=C["util"].computeStrides(e).map(e=>e.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}Be.registerFlag("HAS_WEBGL",()=>Be.getNumber("WEBGL_VERSION")>0),Be.registerFlag("WEBGL_VERSION",()=>Re(2)?2:Re(1)?1:0),Be.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),Be.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===Be.get("WEBGL_VERSION")),Be.registerFlag("WEBGL_CPU_FORWARD",()=>!0),Be.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),Be.registerFlag("WEBGL_PACK",()=>Be.getBool("HAS_WEBGL")),Be.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Be.getBool("WEBGL_PACK")),Be.registerFlag("WEBGL_PACK_CLIP",()=>Be.getBool("WEBGL_PACK")),Be.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Be.getBool("WEBGL_PACK")),Be.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Be.getBool("WEBGL_PACK")),Be.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Be.getBool("WEBGL_PACK")),Be.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Be.getBool("WEBGL_PACK")),Be.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Be.getBool("WEBGL_PACK")),Be.registerFlag("WEBGL_PACK_REDUCE",()=>Be.getBool("WEBGL_PACK")),Be.registerFlag("WEBGL_LAZILY_UNPACK",()=>Be.getBool("WEBGL_PACK")),Be.registerFlag("WEBGL_CONV_IM2COL",()=>Be.getBool("WEBGL_PACK")),Be.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>Ce(Be.getNumber("WEBGL_VERSION"))),Be.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>$e(Be.getNumber("WEBGL_VERSION"))),Be.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const e=Be.getNumber("WEBGL_VERSION");return 0===e?0:Ee(e)}),Be.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Be.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!C["device_util"].isMobile()),Be.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>_e(Be.getNumber("WEBGL_VERSION"))),Be.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!Be.getBool("WEBGL_FORCE_F16_TEXTURES")&&Be.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),Be.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>Fe(Be.getNumber("WEBGL_VERSION"))),Be.registerFlag("WEBGL_FENCE_API_ENABLED",()=>Pe(Be.getNumber("WEBGL_VERSION"))),Be.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>{const e=Be.getBool("WEBGL_RENDER_FLOAT32_ENABLED");return e?4:0}),Be.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}),Be.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>C["device_util"].isMobile()&&Be.getBool("IS_CHROME")?1:-1,e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)}),Be.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),Be.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),Be.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),Be.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);const Ge="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class He{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=D.DENSE;const t=V(e),n=Ve();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${ze(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qe{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=D.DENSE;const t=V(e),n=Ve();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${ze(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ke{constructor(e){this.variableNames=["A"],this.outTexUsage=M.DOWNLOAD;const t=Ve();this.outputShape=e,this.userCode=`\n      ${Ge}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xe{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=M.DOWNLOAD;const t=Ve();this.outputShape=e,this.userCode=`\n      ${Ge}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ye{constructor(e,t,n=!1){this.variableNames=["A"];const r=Ve(),[a,o]=t;this.outputShape=e;let s="result";n&&(s="floor(result * 255. + 0.5)"),this.userCode=`\n      ${Ue(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${o};\n        int c = imod(flatIndex, ${o});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${o}.0, ${a}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${s}, 0., 0., 0.);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qe{constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=Ve(),[a,o]=t;this.outputShape=e;let s="",i="result";n&&(i="floor(result * 255. + 0.5)");for(let u=0;u<=1;u++)for(let t=0;t<=1;t++){const n=2*u+t;s+=`\n          localCoords = coords;\n          if(localCoords[2] + ${t} < ${e[2]}) {\n            localCoords[2] += ${t};\n            if(localCoords[1] + ${u} < ${e[1]}) {\n              localCoords[1] += ${u};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${o};\n              c = imod(flatIndex, ${o});\n              uv = (vec2(c, r) + halfCR) / vec2(${o}.0, ${a}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${n}] = values[0];\n              } else if(offset == 1) {\n                result[${n}] = values[1];\n              } else if(offset == 2) {\n                result[${n}] = values[2];\n              } else {\n                result[${n}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${Ue(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${s}\n\n        ${r.output} = ${i};\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ze(e){const t=Ve(),n=`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`;return Z(e,n)}function Je(e){const t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return oe(e,t)}function et(e){const t=new Uint16Array([0,1,2,2,1,3]);return se(e,t)}function tt(e,t,n,r,a,o){ue(t,n);const s=ie(e),i=e.TEXTURE_2D;return G(e,()=>e.bindTexture(i,s)),G(e,()=>e.texParameteri(i,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),G(e,()=>e.texParameteri(i,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),G(e,()=>e.texParameteri(i,e.TEXTURE_MIN_FILTER,e.NEAREST)),G(e,()=>e.texParameteri(i,e.TEXTURE_MAG_FILTER,e.NEAREST)),G(e,()=>e.texImage2D(i,0,r,t,n,0,a,o,null)),G(e,()=>e.bindTexture(e.TEXTURE_2D,null)),s}function nt(e){return e.internalFormatFloat}function rt(e,t,n,r){const[a,o]=L(t,n);return tt(e,a,o,nt(r),r.textureFormatFloat,e.FLOAT)}function at(e){return e.internalFormatHalfFloat}function ot(e,t,n,r){const[a,o]=L(t,n);return tt(e,a,o,at(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function st(e){return e.downloadTextureFormat}function it(e,t,n,r){const[a,o]=L(t,n);return tt(e,a,o,st(r),e.RGBA,e.UNSIGNED_BYTE)}function ut(e){return e.internalFormatPackedFloat}function ct(e,t,n,r){const[a,o]=z(t,n);return tt(e,a,o,ut(r),e.RGBA,e.FLOAT)}function lt(e){return e.internalFormatPackedHalfFloat}function dt(e,t,n,r){const[a,o]=z(t,n);return tt(e,a,o,lt(r),e.RGBA,r.textureTypeHalfFloat)}function pt(e,t,n){const r=0,a=12,o=20;G(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n));const s=le(e,t,"clipSpacePos",n,3,o,r);return s&&le(e,t,"uv",n,2,o,a)}function ht(e,t,n,r,a,o){let s,i,u;G(e,()=>e.bindTexture(e.TEXTURE_2D,t)),a instanceof Uint8Array?(s=new Uint8Array(n*r*4),i=e.UNSIGNED_BYTE,u=e.RGBA):(s=new Float32Array(n*r*4),i=e.FLOAT,u=o.internalFormatPackedFloat),s.set(a),G(e,()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,i,s)),G(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function ft(e,t,n){G(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?G(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):G(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),G(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function mt(e,t,n,r){const a=e.createBuffer();G(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a));const o=4,s=4,i=o*s*t*n;return G(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,i,e.STREAM_READ)),G(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),G(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),a}function bt(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}function gt(e,t,n,r){const[a,o]=L(t,n),s=4,i=new Uint8Array(B(t*n,s));return G(e,()=>e.readPixels(0,0,a,o,r.downloadTextureFormat,e.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function yt(e,t,n,r,a,o,s,i){const u=e,c=new Float32Array(W(o,s));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,c),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),c}function xt(e,t,n){const r=new Float32Array(t*n*4);return G(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r)),r}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vt{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=Object(C["env"])().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,A(t,e)):this.gl=R(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===Object(C["env"])().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=Q(this.gl,e),Ae(this.gl,t))this.textureHalfFloatExtension=Q(this.gl,t);else if(Object(C["env"])().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Ae(this.gl,r))this.colorBufferHalfFloatExtension=Q(this.gl,r);else if(Object(C["env"])().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Ae(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!Ae(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=Je(this.gl),this.indexBuffer=et(this.gl),this.framebuffer=ce(this.gl),this.textureConfig=U(this.gl,this.textureHalfFloatExtension)}get debug(){return Object(C["env"])().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;G(e,()=>e.finish()),G(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),G(e,()=>e.deleteFramebuffer(this.framebuffer)),G(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),G(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),G(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),rt(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),ot(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),it(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),ft(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),ht(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),dt(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),ct(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(be(this.gl,this.framebuffer),this.outputTexture=null),G(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>gt(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,r,a,o){return yt(this.gl,e,t,n,r,a,o,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return bt(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=mt(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Object(C["env"])().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else Object(C["env"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Object(C["env"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>xt(this.gl,t,n))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=J(t,e);null==this.vertexShader&&(this.vertexShader=Ze(t));const r=ne(t);return G(t,()=>t.attachShader(r,this.vertexShader)),G(t,()=>t.attachShader(r,n)),re(t,r),this.debug&&ae(t,r),this.vertexAttrsAreBound||(this.setProgram(r),this.vertexAttrsAreBound=pt(t,this.program,this.vertexBuffer)),r}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&G(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&ae(this.gl,this.program),G(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?pe(this.gl,e,t):he(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),G(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),fe(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=z(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&ae(this.gl,this.program),ge(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),G(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),G(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=Q(this.gl,2===Object(C["env"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Object(C["env"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Object(C["env"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await C["util"].repeatedTry(()=>this.disposed||this.isQueryAvailable(e,Object(C["env"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,Object(C["env"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl,n=t.getQueryParameter(e,t.QUERY_RESULT);return n/1e6}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT);return n/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=Ot(this.itemsToPoll.map(e=>e.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||C["util"].repeatedTry(()=>(this.pollItems(),0===this.itemsToPoll.length))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),me(this.gl,e,this.framebuffer),this.debug&&ge(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(me(this.gl,this.outputTexture,this.framebuffer),this.debug&&ge(this.gl)):be(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;me(r,e,this.framebuffer),this.debug&&ge(r),this.outputTexture=e,G(r,()=>r.viewport(0,0,t,n)),G(r,()=>r.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),G(this.gl,()=>this.gl.scissor(e,t,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}function Ot(e){let t=0;for(;t<e.length;++t){const n=e[t]();if(!n)break}return t-1}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:wt}=C["backend_util"];function kt(e,t,n){const r=[];if(e.forEach(e=>{const t=C["util"].sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=pn(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`);break;default:break}r.push(`uniform ivec2 ${e.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;");break;default:break}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)});const a=r.join("\n"),o=e.map(e=>Tt(e,t,n.packedInputs,n.enableShapeUniforms)).join("\n"),s=t.texShape,i=Ve(),u=Ct(i);let c,l,d=At(i);t.isPacked?(c=It(t.logicalShape,s,n.enableShapeUniforms),l=Et(i)):(c=Nt(t.logicalShape,s,n.enableShapeUniforms),l=$t(i)),n.packedInputs&&(d+=Dt);const p=[d,u,l,a,c,o,n.userCode].join("\n");return p}function jt(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return Yt(e,t);case 1:return Zt(e,t);case 2:return en(e,t);case 3:return nn(e,t);case 4:return an(e,t);case 5:return on(e);case 6:return sn(e);default:throw new Error(n.length+"-D input sampling is not yet supported")}}function St(e,t){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return Xt(e);case 1:return Qt(e,t);case 2:return Jt(e,t);case 3:return tn(e,t);default:return rn(e,t)}}function Tt(e,t,n=!1,r){let a="";a+=n?St(e,r):jt(e,r);const o=e.shapeInfo.logicalShape,s=t.logicalShape;return o.length<=s.length&&(a+=n?cn(e,t):ln(e,t)),a}function It(e,t,n){switch(e.length){case 0:return Mt();case 1:return Pt(e,t,n);case 2:return Ht(e,t,n);case 3:return Bt(e,t,n);default:return zt(e,t,n)}}function Nt(e,t,n){switch(e.length){case 0:return Mt();case 1:return Lt(e,t,n);case 2:return qt(e,t,n);case 3:return Vt(e,t,n);case 4:return Wt(e,t,n);case 5:return Ut(e,t);case 6:return Gt(e,t);default:throw new Error(e.length+"-D output sampling is not yet supported")}}function Ct(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}function $t(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}function Et(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}function At(e){const t=`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${Rt}\n    ${_t}\n    ${Ft}\n  `;return t}const Rt="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",_t="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Ft="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Dt="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Mt(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function Pt(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}function Lt(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}function Bt(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),o=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${o};\n      index -= b * ${o};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}function Vt(e,t,n){if(n){const t=We(["r","c","d"],e);return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${t}\n    return ivec3(r, c, d);\n  }\n`}const r=ze(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}function zt(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),o=a*Math.ceil(e[e.length-2]/2);let s=o,i="",u="b, r, c";for(let c=2;c<e.length-1;c++)s*=e[e.length-c-1],i=`\n      int b${c} = index / ${s};\n      index -= b${c} * ${s};\n    `+i,u=`b${c}, `+u;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${o};\n      index -= b * ${o};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${u});\n    }\n  `}function Wt(e,t,n){if(n){const t=We(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${t}\n      return ivec4(r, c, d, d2);\n    }\n  `}const r=ze(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}function Ut(e,t){const n=ze(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}function Gt(e,t){const n=ze(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}function Ht(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(C["util"].arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const a=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}function qt(e,t,n){return C["util"].arraysEqual(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}function Kt(e){return"offset"+e}function Xt(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=Ve();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}function Yt(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[a,o]=e.shapeInfo.texShape;if(1===a&&1===o)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const s=Kt(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${s});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[i,u]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${i}, ${u}, ${s});\n      return sampleTexture(${n}, uv);\n    }\n  `}function Qt(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,o=Ve();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${o.texture2D}(${n}, uv);\n    }\n  `;const s=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${s[0]}, ${s[1]}, index);\n      return ${o.texture2D}(${n}, uv);\n    }\n  `}function Zt(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${un(e)}\n      }\n    `;const a=e.shapeInfo.texShape,o=a[0],s=a[1];if(1===s&&1===o)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=Kt(n);return 1===s?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${o}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===o?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${s}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${o}, ${s}, index + ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}function Jt(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),o=e.shapeInfo.texShape,s=o[0],i=o[1],u=Ve();if(null!=o&&C["util"].arraysEqual(n,o))return t?`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${s}.0);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${a}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `;const c=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=Math.ceil(n[1]/2);return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${l}, ${c[0]}, ${c[1]}, row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `}function en(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),o=e.shapeInfo.texShape;if(null!=o&&C["util"].arraysEqual(n,o)){if(t)return`\n      float ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=o[0],n=o[1];return`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:s,keptDims:i}=C["util"].squeezeShape(n),u=s;if(u.length<n.length){const n=hn(e,u),r=["row","col"];return`\n      ${jt(n,t)}\n      float ${a}(int row, int col) {\n        return ${a}(${fn(r,i)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${un(e)}\n      }\n    `;const c=o[0],l=o[1],d=Kt(r);return 1===l?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===c?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${a}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${d};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${d};\n    vec2 uv = uvFromFlat(${c}, ${l}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}function tn(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),o=e.shapeInfo.texShape,s=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(1===n[0]){const r=n.slice(1),o=[1,2],s=hn(e,r),i=["b","row","col"];return`\n        ${St(s,t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${fn(i,o)});\n        }\n      `}const i=Ve();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${i.texture2D}(${r}, uv);\n    }\n  `;const u=s[0],c=s[1],l=Math.ceil(n[2]/2),d=l*Math.ceil(n[1]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${c}, ${d}, ${l}, b, row, col);\n      return ${i.texture2D}(${r}, uv);\n    }\n  `}function nn(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),o=n[1]*n[2],s=n[2],{newShape:i,keptDims:u}=C["util"].squeezeShape(n),c=i;if(c.length<n.length){const n=hn(e,c),r=["row","col","depth"];return`\n        ${jt(n,t)}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${fn(r,u)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${o}, ${s}, 1)));\n        ${un(e)}\n      }\n    `;const l=e.shapeInfo.texShape,d=l[0],p=l[1],h=e.shapeInfo.flatOffset;if(p===o&&null==h)return t?`\n      float ${a}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${s}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${p}.0, ${d}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(p===s&&null==h)return t?`\n      float ${a}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${d}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=Kt(r);return t?`\n    float ${a}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * ${o} + col * ${s} + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${o} + col * ${s} + depth + ${f};\n        vec2 uv = uvFromFlat(${d}, ${p}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}function rn(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=Ve();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;const o=e.shapeInfo.logicalShape,s=o.length,i=e.shapeInfo.texShape,u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=u[0],l=u[1],d=Math.ceil(o[s-1]/2);let p=d*Math.ceil(o[s-2]/2),h="int b, int row, int col",f=`b * ${p} + (row / 2) * ${d} + (col / 2)`;for(let m=2;m<s-1;m++)h=`int b${m}, `+h,p*=o[s-m-1],f=`b${m} * ${p} + `+f;return`\n    vec4 ${r}(${h}) {\n      int index = ${f};\n      int texR = index / ${l};\n      int texC = index - texR * ${l};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${c});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}function an(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),o=n[3],s=n[2]*o,i=n[1]*s,{newShape:u,keptDims:c}=C["util"].squeezeShape(n);if(u.length<n.length){const n=hn(e,u),r=["row","col","depth","depth2"];return`\n      ${jt(n,t)}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${fn(r,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${s}, ${o}, 1)));\n        ${un(e)}\n      }\n    `;const l=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],h=d[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,b=`int stride0 = ${r}Shape[1] * stride1;`;if(h===i&&null==l)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${s}, ${o}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${h}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(h===o&&null==l)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${h}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const g=Kt(r);return t?`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${b}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${g});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${s} +\n          depth * ${o} + depth2;\n      vec2 uv = uvFromFlat(${p}, ${h}, index + ${g});\n      return sampleTexture(${r}, uv);\n    }\n  `}function on(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],o=t[3]*a,s=t[2]*o,i=t[1]*s,{newShape:u,keptDims:c}=C["util"].squeezeShape(t);if(u.length<t.length){const t=hn(e,u),n=["row","col","depth","depth2","depth3"];return`\n      ${jt(t)}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${fn(n,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${i}, ${s}, ${o}, ${a})) +\n          depth3;\n        ${un(e)}\n      }\n    `;const l=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],h=d[1];if(h===i&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${s}, ${o}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${h}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(h===a&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${h}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=Kt(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${s} + depth * ${o} +\n          depth2 * ${a} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${p}, ${h}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}function sn(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:o}=C["util"].squeezeShape(t);if(a.length<t.length){const t=hn(e,a),n=["row","col","depth","depth2","depth3","depth4"];return`\n      ${jt(t)}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${fn(n,o)});\n      }\n    `}const s=t[5],i=t[4]*s,u=t[3]*i,c=t[2]*u,l=t[1]*c;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${l}, ${c}, ${u}, ${i})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${s}, 1)));\n        ${un(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,h=p[0],f=p[1];if(f===l&&null==d)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${c}, ${u}, ${i}, ${s})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===s&&null==d)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=Kt(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${l} + col * ${c} + depth * ${u} +\n          depth2 * ${i} + depth3 * ${s} + depth4 + ${m};\n      vec2 uv = uvFromFlat(${h}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}function un(e){const t=e.name,n=C["util"].sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function cn(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",o=e.shapeInfo.logicalShape.length,s=t.logicalShape.length,i=wt(e.shapeInfo.logicalShape,t.logicalShape),u=dn(s),c=s-o;let l;const d=["x","y","z","w","u","v"];l=0===o?"":s<2&&i.length>=1?"coords = 0;":i.map(e=>`coords.${d[e+c]} = 0;`).join("\n");let p="";p=s<2&&o>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>"coords."+d[t+c]).join(", ");let h="return outputValue;";const f=C["util"].sizeFromShape(e.shapeInfo.logicalShape),m=1===f,b=C["util"].sizeFromShape(t.logicalShape),g=1===b;if(1!==o||m||g){if(m&&!g)h=1===s?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(i.length){const e=o-2,t=o-1;i.indexOf(e)>-1&&i.indexOf(t)>-1?h="return vec4(outputValue.x);":i.indexOf(e)>-1?h="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(t)>-1&&(h="return vec4(outputValue.xx, outputValue.zz);")}}else h="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${u} coords = getOutputCoords();\n      ${l}\n      vec4 outputValue = get${r}(${p});\n      ${h}\n    }\n  `}function ln(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",o=t.texShape,s=e.shapeInfo.texShape,i=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&i===u&&null==e.shapeInfo.flatOffset&&C["util"].arraysEqual(s,o))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const c=dn(u),l=wt(e.shapeInfo.logicalShape,t.logicalShape),d=u-i;let p;const h=["x","y","z","w","u","v"];p=0===i?"":u<2&&l.length>=1?"coords = 0;":l.map(e=>`coords.${h[e+d]} = 0;`).join("\n");let f="";return f=u<2&&i>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>"coords."+h[t+d]).join(", "),`\n    float ${a}() {\n      ${c} coords = getOutputCoords();\n      ${p}\n      return get${r}(${f});\n    }\n  `}function dn(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function pn(e,t,n){const{newShape:r}=C["util"].squeezeShape(t),a=t.length,o=e&&3===a&&1===t[0],s=o?t.slice(1):r,i=!e&&a>1&&!C["util"].arraysEqual(t,n)&&r.length<a||o,u=i?s:t;return{useSqueezeShape:i,uniformShape:u}}function hn(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function fn(e,t){return t.map(t=>e[t]).join(", ")}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mn(e,t,n,r){const a=n.map((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}}),o=a.map(e=>e.shapeInfo),s={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},i=kt(a,s,t),u=e.createProgram(i);let c=null;const l=e.getUniformLocation(u,"NAN",!1);1===Object(C["env"])().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(u,"INFINITY",!1));const d=!1,p={},h={},f={};for(let x=0;x<t.variableNames.length;x++){const n=t.variableNames[x];p[n]=e.getUniformLocation(u,n,d),p["offset"+n]=e.getUniformLocation(u,"offset"+n,d),t.enableShapeUniforms&&(h[n+"Shape"]=e.getUniformLocation(u,n+"Shape",d),f[n+"TexShape"]=e.getUniformLocation(u,n+"TexShape",d))}let m,b,g;t.enableShapeUniforms&&(m=e.getUniformLocation(u,"outShape",d),g=e.getUniformLocation(u,"outShapeStrides",d),b=e.getUniformLocation(u,"outTexShape",d));const y=[];return t.customUniforms&&t.customUniforms.forEach((t,n)=>{y[n]=e.getUniformLocation(u,t.name,d)}),{program:t,source:i,webGLProgram:u,uniformLocations:p,customUniformLocations:y,inShapeInfos:o,outShapeInfo:s,infLoc:c,nanLoc:l,inShapesLocations:h,inTexShapesLocations:f,outShapeLocation:m,outShapeStridesLocation:g,outTexShapeLocation:b}}function bn(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((e,n)=>{const r=e.logicalShape,a=t[n],o=a.shape;if(!C["util"].arraysEqual(r,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${o} must match`);if(e.isUniform&&a.isUniform)return;const s=e.texShape,i=a.isUniform?null:a.texData.texShape;if(!C["util"].arraysEqual(s,i))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${s} and ${i} must match`)})}function gn(e,t,n,r,a){t.program.enableShapeUniforms||(bn(t.inShapeInfos,n),bn([t.outShapeInfo],[r]));const o=r.texData.texture,s=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(o,s[0],s[1]):e.setOutputMatrixTexture(o,s[0],s[1]),e.setProgram(t.webGLProgram),1===Object(C["env"])().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((n,r)=>{const a=t.program.variableNames[r],o=t.uniformLocations[a],s=t.uniformLocations["offset"+a],i=t.inShapesLocations[a+"Shape"],u=t.inTexShapesLocations[a+"TexShape"];if(i){const{uniformShape:r}=pn(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(i,new Int32Array(r));break;case 2:e.gl.uniform2iv(i,new Int32Array(r));break;case 3:e.gl.uniform3iv(i,new Int32Array(r));break;case 4:e.gl.uniform4iv(i,new Int32Array(r));break;default:break}}if(u&&e.gl.uniform2i(u,n.texData.texShape[0],n.texData.texShape[1]),null!=o)if(n.isUniform)if(C["util"].sizeFromShape(n.shape)<2)e.gl.uniform1f(o,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(o,t)}else null!=n.texData.slice&&null!=s&&e.gl.uniform1i(s,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,o,r)});const i=t.outShapeLocation;if(i)switch(r.shape.length){case 1:e.gl.uniform1iv(i,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(i,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(i,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(i,new Int32Array(r.shape));break;default:break}if(t.outShapeStridesLocation){const n=C["util"].computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n));break;default:break}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a&&t.program.customUniforms.forEach((n,r)=>{const o=t.customUniformLocations[r],s=a[r];if("float"===n.type)e.gl.uniform1fv(o,s);else if("vec2"===n.type)e.gl.uniform2fv(o,s);else if("vec3"===n.type)e.gl.uniform3fv(o,s);else if("vec4"===n.type)e.gl.uniform4fv(o,s);else if("int"===n.type)e.gl.uniform1iv(o,s);else if("ivec2"===n.type)e.gl.uniform2iv(o,s);else if("ivec3"===n.type)e.gl.uniform3iv(o,s);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(o,s)}}),e.executeProgram()}function yn(e,t,n){let r="";t.concat(n).forEach(t=>{const a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const o=t.texData.texShape,{useSqueezeShape:s,uniformShape:i}=pn(e.packedInputs,t.shape,o);let u="",c="",l="";if(1===i.length&&e.packedInputs){const e=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==i.length||e.packedInputs){if(i.length>2&&!e.packedInputs){const e=C["util"].computeStrides(i);l=`${e[0]===o[1]}_${e[e.length-1]===o[1]}`}}else c=`${i[0]>1}_${i[1]>1}`;const d=t.shape.length,p=2===d&&C["util"].arraysEqual(t.shape,o),h=1===C["util"].sizeFromShape(t.shape),f=C["backend_util"].getBroadcastDims(t.shape,n.shape),m=!e.packedInputs&&d===n.shape.length&&C["util"].arraysEqual(o,n.texData.texShape),b=e.packedInputs||d>2?"":`${o[0]>1}_${o[1]>1}`;r+=`${d}_${m}_${s}_${i.length}_${h}_${f}_${p}_${u}_${c}_${l}_${b}_${a}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${a}`}});const a=e.userCode;let o=e.constructor.name;return o+="_"+r+"_"+a+Object(C["env"])().getNumber("WEBGL_VERSION"),o}function xn(e){return Object(C["env"])().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vn(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&C["util"].assert("complex64"!==e.dtype,()=>t+" does not support complex64 tensors in the CPU backend.")})}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function On(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const wn=e=>{const{x:t}=e.inputs,n=e.backend;vn(t,"abs");let r=new Float32Array(C["util"].sizeFromShape(t.shape));const a=n.data.get(t.dataId).values;return r=On(a),n.makeOutput(r,t.shape,"float32")};C["Abs"];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function kn(e){return(t,n,r,a,o)=>{const s=C["backend_util"].assertAndGetBroadcastShape(t,n),i=s.length,u=C["util"].computeStrides(s),c=C["util"].sizeFromShape(s),l=C["util"].getTypedArrayFromDType(o,c),d=t.length,p=n.length,h=C["util"].computeStrides(t),f=C["util"].computeStrides(n),m=C["backend_util"].getBroadcastDims(t,s),b=C["backend_util"].getBroadcastDims(n,s);if(m.length+b.length===0)for(let g=0;g<l.length;++g)l[g]=e(r[g%r.length],a[g%a.length]);else for(let g=0;g<l.length;++g){const t=C["util"].indexToLoc(g,i,u),n=t.slice(-d);m.forEach(e=>n[e]=0);const o=C["util"].locToIndex(n,d,h),s=t.slice(-p);b.forEach(e=>s[e]=0);const c=C["util"].locToIndex(s,p,f);l[g]=e(r[o],a[c])}return[l,s]}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jn(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,o=n.data.get(r.dataId).values,s=n.data.get(a.dataId).values,i=n.makeTensorInfo(r.shape,"complex64"),u=n.data.get(i.dataId);return u.complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",o),imag:n.makeTensorInfo(a.shape,"float32",s)},i}C["Complex"];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sn(e,t,n="float32"){if("complex64"===n){const n=Sn(e,t,"float32"),r=Sn(e,t,"float32");return jn({inputs:{real:n,imag:r},backend:e})}const r=C["util"].makeZerosTypedArray(C["util"].sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tn(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}C["Identity"];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function In(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,o=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,o)}C["Real"];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nn(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:o}=r;if("complex64"===o){if("complex64"===a.dtype)return Tn({inputs:{x:a},backend:n});const e=Sn(n,a.shape,a.dtype),t=Nn({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=jn({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){const e=In({inputs:{input:a},backend:n}),t=Nn({inputs:{x:e},backend:n,attrs:{dtype:o}});return n.disposeIntermediateTensorInfo(e),t}if(!C["util"].hasEncodingLoss(a.dtype,o)){const e=Tn({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:o}}if("int32"===o){const e=n.data.get(a.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(a.shape,"int32",t)}if("bool"===o){const e=n.data.get(a.dataId).values,t=C["util"].toTypedArray([0],a.dtype),[r,o]=kn((e,t)=>e!==t?1:0)(a.shape,[],e,t,"bool");return n.makeTensorInfo(o,"bool",r)}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${o}`)}C["Cast"];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cn(e,t,n,r){return null==n?({inputs:n,backend:a})=>{const{a:o,b:s}=n,i=a;vn([o,s],e);const u=i.data.get(o.dataId).values,c=i.data.get(s.dataId).values,l="string"===o.dtype?C["backend_util"].fromUint8ToStringArray(u):u,d="string"===o.dtype?C["backend_util"].fromUint8ToStringArray(c):c,p=r||o.dtype,[h,f]=t(o.shape,s.shape,l,d,p);return i.makeTensorInfo(f,p,h)}:({inputs:e,backend:a})=>{const{a:o,b:s}=e,i=a;if("complex64"===o.dtype||"complex64"===s.dtype){const e=Nn({inputs:{x:o},backend:i,attrs:{dtype:"complex64"}}),t=i.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,u=i.data.get(r.dataId).values,c=i.data.get(a.dataId).values,l=Nn({inputs:{x:s},backend:i,attrs:{dtype:"complex64"}}),d=i.data.get(l.dataId),p=d.complexTensorInfos.real,h=d.complexTensorInfos.imag,f=i.data.get(p.dataId).values,m=i.data.get(h.dataId).values,[b,g,y]=n(o.shape,s.shape,u,c,f,m),x=i.makeTensorInfo(y,"float32",b),v=i.makeTensorInfo(y,"float32",g),O=jn({inputs:{real:x,imag:v},backend:i});return i.disposeIntermediateTensorInfo(e),i.disposeIntermediateTensorInfo(l),i.disposeIntermediateTensorInfo(x),i.disposeIntermediateTensorInfo(v),O}{const e=i.data.get(o.dataId).values,n=i.data.get(s.dataId).values,a=r||o.dtype,[u,c]=t(o.shape,s.shape,e,n,a);return i.makeTensorInfo(c,a,u)}}}function $n(e){return(t,n,r,a,o,s)=>{const i=C["backend_util"].assertAndGetBroadcastShape(t,n),u=C["util"].sizeFromShape(i),c=i.length,l=C["util"].computeStrides(i),d=C["util"].getTypedArrayFromDType("float32",u),p=C["util"].getTypedArrayFromDType("float32",u),h=C["backend_util"].getBroadcastDims(t,i),f=C["backend_util"].getBroadcastDims(n,i),m=C["backend_util"].mergeRealAndImagArrays(r,a),b=C["backend_util"].mergeRealAndImagArrays(o,s),g=t.length,y=C["util"].computeStrides(t),x=n.length,v=C["util"].computeStrides(n);if(h.length+f.length===0)for(let O=0;O<d.length;O++){const t=O%m.length,n=O%b.length,r=e(m[2*t],m[2*t+1],b[2*n],b[2*n+1]);d[O]=r.real,p[O]=r.imag}else for(let O=0;O<d.length;O++){const t=C["util"].indexToLoc(O,c,l),n=t.slice(-g);h.forEach(e=>n[e]=0);const r=C["util"].locToIndex(n,g,y),a=t.slice(-x);f.forEach(e=>a[e]=0);const o=C["util"].locToIndex(a,x,v),s=e(m[2*r],m[2*r+1],b[2*o],b[2*o+1]);d[O]=s.real,p[O]=s.imag}return[d,p,i]}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const En=kn((e,t)=>e+t),An=$n((e,t,n,r)=>({real:e+n,imag:t+r})),Rn=Cn(C["Add"],En,An);C["Add"];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _n(e,t,n,r,a){const o=C["util"].sizeFromShape(r),s=C["util"].makeZerosTypedArray(a,n);for(let i=0;i<e.length;i++){const n=e[i];if(n<0)throw new Error("Input x must be non-negative!");n>=a||(s[n]+=o>0?t[i]:1)}return s}function Fn(e,t,n,r=!1){const a=e.shape[0],o=e.shape[1],s=Object(C["buffer"])([a,n],t.dtype);for(let i=0;i<a;i++)for(let a=0;a<o;a++){const o=e.get(i,a);if(o<0)throw new Error("Input x must be non-negative!");o>=n||(r?s.set(1,i,o):t.size>0?s.set(s.get(i,o)+t.get(i,a),i,o):s.set(s.get(i,o)+1,i,o))}return s}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dn(e){return(t,n,r)=>{const a=C["util"].getTypedArrayFromDType(n,t.length);for(let o=0;o<t.length;++o)a[o]=e(t[o],r);return a}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mn(e,t,n){return({inputs:r,attrs:a,backend:o})=>{const{x:s}=r;if(vn(s,e),"string"===s.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const i=o,u=i.data.get(s.dataId).values,c=n||s.dtype,l=t(u,c,a);return i.makeTensorInfo(s.shape,c,l)}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pn=Dn(e=>Math.ceil(e)),Ln=Mn(C["Ceil"],Pn);C["Ceil"];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Bn(e,t,n,r){const a=C["util"].getArrayFromDType(n,C["util"].sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach(e=>{const n=C["util"].sizeFromShape(e.shape);a.set(e.vals,t),t+=n})}else{let r=0;e.forEach(e=>{const o="string"===n?C["backend_util"].fromUint8ToStringArray(e.vals):e.vals;let s=0;for(let n=0;n<e.shape[0];++n){const i=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[i+t]=o[s++]}r+=e.shape[1]})}return a}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vn=kn((e,t)=>e===t?1:0),zn=Cn(C["Equal"],Vn,null,"bool"),Wn=(C["Equal"],Dn(e=>Math.exp(e))),Un=Mn(C["Exp"],Wn),Gn=(C["Exp"],Dn(e=>Math.expm1(e))),Hn=Mn(C["Expm1"],Gn),qn=(C["Expm1"],Dn(e=>Math.floor(e))),Kn=Mn(C["Floor"],qn);C["Floor"];
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Xn(e,t,n,r,a,o,s,i,u){const c=Object(C["buffer"])([r,o],n);for(let l=0;l<r;l++){const n=[];let r=0;for(let t=0;t<a;t++){const o=e[l*a+t];r+=o*s[t],n.push(o)}if(r<0||r>=u/o)throw new Error(`Invalid indices: ${n} does not index into ${i}`);for(let e=0;e<o;e++)c.values[l*o+e]=t.get(...t.indexToLoc(r*o+e))}return c}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yn(e,t,n){const r=Object(C["buffer"])(n,e.dtype);for(let a=0;a<r.size;++a){const n=r.indexToLoc(a),o=n.slice(),s=o[0],i=o[2],u=t.locToIndex([s,i]);o[2]=t.values[u];const c=e.locToIndex(o);r.values[a]=e.values[c]}return r}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qn=kn((e,t)=>e>t?1:0),Zn=Cn(C["Greater"],Qn,null,"bool"),Jn=(C["Greater"],kn((e,t)=>e>=t?1:0)),er=Cn(C["GreaterEqual"],Jn,null,"bool"),tr=(C["GreaterEqual"],kn((e,t)=>e<t?1:0)),nr=Cn(C["Less"],tr,null,"bool"),rr=(C["Less"],kn((e,t)=>e<=t?1:0)),ar=Cn(C["LessEqual"],rr,null,"bool");C["LessEqual"];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function or(e,t,n){const r=(t-e)/(n-1),a=C["util"].makeZerosTypedArray(n,"float32");a[0]=e;for(let o=1;o<a.length;o++)a[o]=a[o-1]+r;return a}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sr=Dn(e=>Math.log(e)),ir=Mn(C["Log"],sr);C["Log"];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ur(e,t,n,r){const a=C["util"].getTypedArrayFromDType(r,C["util"].sizeFromShape(n));for(let o=0;o<a.length;++o){const n=o*t;let r=e[n];for(let a=0;a<t;++a){const t=e[n+a];(Number.isNaN(t)||t>r)&&(r=t)}a[o]=r}return a}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cr=kn((e,t)=>Math.max(e,t)),lr=Cn(C["Maximum"],cr),dr=(C["Maximum"],kn((e,t)=>Math.min(e,t))),pr=Cn(C["Minimum"],dr),hr=(C["Minimum"],kn((e,t)=>e*t)),fr=$n((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n})),mr=Cn(C["Multiply"],hr,fr);C["Multiply"];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function br(e,t,n){const r=C["util"].createScalarValue(-1,n);return hr([],t,r,e,n)}function gr(e){const{inputs:t,backend:n}=e,{x:r}=t;vn(r,"neg");const a=n.data.get(r.dataId).values,[o,s]=br(a,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,o)}C["Neg"];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yr=kn((e,t)=>e!==t?1:0),xr=Cn(C["NotEqual"],yr,null,"bool");C["NotEqual"];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vr(e,t,n,r,a){const o=t.length,s=C["util"].sizeFromShape(t),i=C["util"].computeStrides(t),u=C["util"].computeStrides(a),c=C["util"].getTypedArrayFromDType(n,C["util"].sizeFromShape(a));for(let l=0;l<s;++l){const t=C["util"].indexToLoc(l,o,i),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[r[e]];const a=C["util"].locToIndex(n,o,u);c[a]=e[l]}return c}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Or(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:o}=n;vn(a,"transpose");const s=a.shape.length,i=new Array(s);for(let d=0;d<i.length;d++)i[d]=a.shape[o[d]];const u=r.data.get(a.dataId).values,c=vr(u,a.shape,a.dtype,o,i),l=r.write(c,i,a.dtype);return{dataId:l,shape:i,dtype:a.dtype}}C["Transpose"];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wr(e,t,n,r){const[a,o]=C["backend_util"].computeOutAndReduceShapes(e,r),s=Object(C["upcastType"])(t,"int32"),i=C["util"].makeZerosTypedArray(C["util"].sizeFromShape(a),s),u=C["util"].sizeFromShape(o);for(let c=0;c<i.length;++c){const e=c*u;let t=1;for(let r=0;r<u;++r)t*=n[e+r];i[c]=t}return{outVals:i,outShape:a,outDtype:s}}function kr(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o,keepDims:s}=r;vn(a,"prod");const i=a.shape.length,u=C["util"].parseAxisParam(o,a.shape),c=C["backend_util"].getAxesPermutation(u,i);let l=u,d=a;const p=[];null!=c&&(d=Or({inputs:{x:a},backend:n,attrs:{perm:c}}),p.push(d),l=C["backend_util"].getInnerMostAxes(l.length,i));const h=n.data.get(d.dataId).values,{outVals:f,outShape:m,outDtype:b}=wr(d.shape,d.dtype,h,l);let g=m;return s&&(g=C["backend_util"].expandShapeToKeepDim(m,u)),p.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(g,b,f)}C["Prod"];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jr(e,t,n,r){const a=e===t,o=e<t&&n<0,s=t<e&&n>1;if(a||o||s)return C["util"].makeZerosTypedArray(0,r);const i=Math.abs(Math.ceil((t-e)/n)),u=C["util"].makeZerosTypedArray(i,r);t<e&&1===n&&(n=-1),u[0]=e;for(let c=1;c<u.length;c++)u[c]=u[c-1]+n;return u}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sr=Dn(e=>1/Math.sqrt(e)),Tr=Mn(C["Rsqrt"],Sr);C["Rsqrt"];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ir(e,t,n,r,a){const o=C["slice_util"].isSliceContinous(r,t,n),s=C["util"].sizeFromShape(n),i=C["util"].computeStrides(r);if(o){const n=C["slice_util"].computeFlatOffset(t,i);return"string"===a?e.slice(n,n+s):e.subarray(n,n+s)}const u="string"===a?C["backend_util"].fromUint8ToStringArray(e):e,c=Object(C["buffer"])(r,a,u),l=Object(C["buffer"])(n,a);for(let d=0;d<l.size;++d){const e=l.indexToLoc(d),n=e.map((e,n)=>e+t[n]);l.set(c.get(...n),...e)}return"string"===a?C["backend_util"].fromStringArrayToUint8(l.values):l.values}function Nr(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:o,size:s}=r;vn(a,"slice");const[i,u]=C["slice_util"].parseSliceParams(a,o,s);C["slice_util"].assertParamsValid(a,i,u);const c=n.data.get(a.dataId).values,l=Ir(c,i,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,l)}C["Slice"];
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cr(e,t,n,r,a,o,s){const i=t[0],u=o[0],c=new Array(u),l=new Array(i),d=t[1];if(0===u){if(0!==i)throw new Error("Received SparseTensor with denseShape[0] = 0 but\n         indices.shape[0] = "+i);const e=C["util"].getArrayFromDType(n,0),t=C["util"].getArrayFromDType(a,0);return[e,[0,d],t,c,l]}let p=!0,h=0;const f=new Array(u).fill(0);for(let b=0;b<i;++b){const t=e[b*d];if(t<0)throw new Error(`indices(${b}, 0) is invalid: ${t} < 0`);if(t>=u)throw new Error(`indices(${b}, 0) is invalid: ${t} >= ${u}`);++f[t],p=p&&t>=h,h=t}let m=!0;for(let b=0;b<u;++b){const e=0===f[b];c[b]=e,m=m&&!e,f[b]=Math.max(f[b],1),b>0&&(f[b]+=f[b-1])}if(m&&p){const t=e,n=r;for(let e=0;e<i;++e)l[e]=e;return[t,[i,d],n,c,l]}{const t=f[u-1],o=C["util"].getArrayFromDType(n,t*d),p=C["util"].getArrayFromDType(a,t),h=new Array(u).fill(0);for(let n=0;n<i;++n){const t=e[n*d],a=h[t],s=(0===t?0:f[t-1])+a;h[t]++;for(let r=0;r<d;++r)o[s*d+r]=e[n*d+r];p[s]=r[n],l[n]=s}for(let e=0;e<u;++e){const t=h[e];if(0===t){const t=0===e?0:f[e-1];o[t*d+0]=e;for(let e=1;e<d;++e)o[t*d+e]=0;p[t]=s}}return[o,[t,d],p,c,l]}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $r(e,t,n,r,a){const o=C["util"].sizeFromShape(r),s=t[0],i=a.length,u=[];let c=1,l=-1;for(let b=0;b<i;++b){const e=a[b];if(-1===e){if(-1!==l)throw new Error(`only one output dimension may be -1, not both ${l} and ${b}`);l=b,u.push(1)}else{if(e<0)throw new Error(`size ${b} must be non-negative, not ${e}`);c*=e,u.push(e)}}if(-1!==l){if(c<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(o/c);if(c*e!==o)throw new Error(`Input to reshape is a SparseTensor with ${o}\n          dense values, but the requested shape requires a multiple of ${c}. inputShape=${r} outputShape= ${u}`);u[l]=e}const d=C["util"].sizeFromShape(u);if(d!==o)throw new Error(`Input to reshape is a tensor with ${o} dense values, but the requested shape has ${d}. inputShape=${r} outputShape=${u}`);const p=r.length,h=[];if(p>0){h[p-1]=1;for(let e=p-2;e>=0;--e)h[e]=h[e+1]*r[e+1]}const f=[];if(i>0){f[i-1]=1;for(let e=i-2;e>=0;--e)f[e]=f[e+1]*u[e+1]}const m=C["util"].getArrayFromDType(n,s*i);for(let b=0;b<s;++b){let t=0;for(let n=0;n<p;++n)t+=e[b*p+n]*h[n];for(let e=0;e<i;++e)m[b*i+e]=Math.trunc(t/f[e]),t%=f[e]}return[m,[s,i],u]}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Er(e,t,n,r,a,o=!1,s=0){const i=r.length;if(i!==a.length)throw new Error("segmentIds and indices should have same size.");const u=[t[0],e.length/t[0]],c=u[1],l=i>0?a[i-1]+1:0,d=l;if(d<0)throw new Error("segment ids must be >= 0");const p=t.slice();p[0]=d;const h=p.reduce((e,t)=>e*t,1),f=C["util"].getArrayFromDType(n,h);if(0===i)return d>0&&f.fill(s),[f,p];if(d<=0)throw new Error("segment ids must be >= 0");let m=0,b=1,g=0,y=a[m];while(1){let t=0;if(b<i){if(t=a[b],y===t){++b;continue}if(y>=t)throw new Error("segment ids are not increasing")}if(y<0||y>=d)throw new Error(`Segment id ${y} out of range [0, ${d}), possibly because segmentIds input is not sorted.`);y>g&&f.fill(s,g*c,y*c);for(let n=m;n<b;++n){const t=r[n];if(t<0||t>=u[0])throw new Error(`Bad: indices[${n}] == ${r[n]} out of range [0, ${u[0]})`);for(let n=0;n<c;n++)f[y*c+n]+=e[t*c+n]}if(o)for(let e=0;e<c;e++)f[y*c+e]/=b-m;if(m=b,++b,g=y+1,y=t,b>i)break}return g<d&&f.fill(s,g*c,d*c),[f,p]}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ar=kn((e,t)=>{const n=e-t;return n*n}),Rr=Cn(C["SquaredDifference"],Ar);C["SquaredDifference"];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _r(e,t,n,r){const a=Object(C["buffer"])(e,t.dtype);for(let o=0;o<a.size;o++){const e=a.indexToLoc(o),s=new Array(e.length);for(let t=0;t<s.length;t++)s[t]=e[t]*n[t]+r[t];a.set(t.get(...s),...e)}return a}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fr{constructor(e,t,n,r,a,o){this.separator=C["util"].encodeString(e),this.nGramWidths=t,this.leftPad=C["util"].encodeString(n),this.rightPad=C["util"].encodeString(r),this.padWidth=a,this.preserveShort=o}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,o){for(let s=0;s<a;++s){const i=this.getPadWidth(o),u=Math.max(0,i-s),c=Math.max(0,i-(a-(s+1))),l=o-(u+c),d=t+(u>0?0:s-i);let p=0;p+=u*this.leftPad.length;for(let t=0;t<l;++t)p+=e[d+t].length;p+=c*this.rightPad.length;const h=u+c+l-1;p+=h*this.separator.length,n[r+s]=new Uint8Array(p);const f=n[r+s];let m=0;const b=e=>e.forEach(e=>f[m++]=e);for(let e=0;e<u;++e)b(this.leftPad),b(this.separator);for(let t=0;t<l-1;++t)b(e[d+t]),b(this.separator);if(l>0){b(e[d+l-1]);for(let e=0;e<c;++e)b(this.separator),b(this.rightPad)}else{for(let e=0;e<c-1;++e)b(this.rightPad),b(this.separator);b(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error("First split value must be 0, got "+e);for(let a=1;a<r;++a){let r=t[a]>=e;if(r=r&&t[a]<=n,!r)throw new Error(`Invalid split value ${t[a]}, must be in [${e}, ${n}]`);e=t[a]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const a=r-1,o=C["util"].getArrayFromDType("int32",r);if(0===n||0===r){const e=new Array(n);for(let t=0;t<=a;++t)o[t]=0;return[e,o]}o[0]=0;for(let i=1;i<=a;++i){const e=t[i]-t[i-1];let n=0;this.nGramWidths.forEach(t=>{n+=this.getNumNGrams(e,t)}),this.preserveShort&&e>0&&0===n&&(n=1),o[i]=o[i-1]+n}const s=new Array(o[a]);for(let i=0;i<a;++i){const n=t[i];let r=o[i];if(this.nGramWidths.forEach(a=>{const o=t[i+1]-t[i],u=this.getNumNGrams(o,a);this.createNGrams(e,n,s,r,u,a),r+=u}),this.preserveShort&&r===o[i]){const a=t[i+1]-t[i];if(0===a)continue;const o=a+2*this.padWidth,u=1;this.createNGrams(e,n,s,r,u,o)}}return[s,o]}}function Dr(e,t,n,r,a,o,s,i){return new Fr(n,r,a,o,s,i).compute(e,t)}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mr(e,t,n){if(!e.length)return[];if(0===t.length){const t=new Array(e.length);for(let n=0;n<e.length;++n)t[n]=e.subarray(n,n+1);return t}if(1===t.length){const r=t[0],a=[];let o=e.indexOf(r);while(-1!==o){const t=e.subarray(0,o);n&&0===t.length||a.push(t),e=e.subarray(o+1),o=e.indexOf(r)}return n&&0===e.length||a.push(e),a}const r=[];let a=0;for(let o=0;o<e.length+1;o++)if(o===e.length||-1!==t.indexOf(e[o])){const t=e.subarray(a,o);n&&0===t.length||r.push(t),a=o+1}return r}function Pr(e,t,n){const r=e.length,a=[];let o=0,s=0;const i=new Array(r);for(let p=0;p<r;++p){const r=Mr(e[p],t,n),u=r.length;i[p]=u,o+=u,s=Math.max(s,u),a.push(...r)}const u=C["util"].getArrayFromDType("int32",2*o),c=new Array(o),l=[r,s];let d=0;for(let p=0;p<r;++p)for(let e=0;e<i[p];++e)u[2*d]=p,u[2*d+1]=e,c[d]=a[d],++d;return[u,c,l]}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lr(e,t){const n=C["util"].getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=C["util"].fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Br=kn((e,t)=>e-t),Vr=$n((e,t,n,r)=>({real:e-n,imag:t-r})),zr=Cn(C["Sub"],Br,Vr);C["Sub"];
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Wr(e,t){const n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=e.shape[a]*t[a];const r=Object(C["buffer"])(n,e.dtype);for(let a=0;a<r.values.length;++a){const t=r.indexToLoc(a),n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=t[r]%e.shape[r];const o=e.locToIndex(n);r.values[a]=e.values[o]}return r}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ur=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function Gr(e,t,n=0,r=e.length-1){while(r>n){if(r-n>600){const a=r-n+1,o=t-n+1,s=Math.log(a),i=.5*Math.exp(2*s/3),u=.5*Math.sqrt(s*i*(a-i)/a)*Math.sign(o-a/2),c=Math.max(n,Math.floor(t-o*i/a+u)),l=Math.min(r,Math.floor(t+(a-o)*i/a+u));Gr(e,t,c,l)}const a=e[t];let o=n,s=r;C["util"].swap(e,n,t),Ur(e[r],a)>0&&C["util"].swap(e,n,r);while(o<s){C["util"].swap(e,o,s),o++,s--;while(Ur(e[o],a)<0)o+=1;while(Ur(e[s],a)>0)s-=1}0===Ur(e[n],a)?C["util"].swap(e,n,s):(s+=1,C["util"].swap(e,s,r)),s<=t&&(n=s+1),t<=s&&(r=s-1)}}function Hr(e,t,n,r,a){const o=t[t.length-1],[s,i]=[e.length/o,o],u=C["util"].getTypedArrayFromDType(n,s*r),c=C["util"].getTypedArrayFromDType("int32",s*r);for(let d=0;d<s;d++){const t=d*i,n=e.subarray(t,t+i);let o=new Array(n.length);n.forEach((e,t)=>o[t]={value:e,index:t}),r<o.length&&(Gr(o,r),o=o.slice(0,r)),a&&o.sort(Ur);const s=d*r,l=u.subarray(s,s+r),p=c.subarray(s,s+r);for(let e=0;e<r;e++)l[e]=o[e].value,p[e]=o[e].index}const l=t.slice();return l[l.length-1]=r,[Object(C["buffer"])(l,n,u),Object(C["buffer"])(l,"int32",c)]}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qr(e,t,n,r){const a=C["util"].parseAxisParam(t,n)[0],o=[1,n[0],1];for(let f=0;f<a;f++)o[0]*=n[f];o[1]=n[a];for(let f=a+1;f<n.length;f++)o[2]*=n[f];const s={},i=new Int32Array(n[a]),u=new C["TensorBuffer"](o,r,e),c=[],l=1===o[0]&&1===o[2];for(let f=0;f<n[a];f++){let t;if(l)t=e[f].toString();else{const e=[];for(let t=0;t<o[0];t++)for(let n=0;n<o[2];n++)e.push(u.get(t,f,n));t=e.join(",")}if(void 0!==s[t])i[f]=s[t];else{const e=Object.keys(s).length;s[t]=e,i[f]=e,c.push(f)}}const d=o.slice();d[1]=Object.keys(s).length;const p=new C["TensorBuffer"](d,r);c.forEach((e,t)=>{for(let n=0;n<o[0];n++)for(let r=0;r<o[2];r++)p.set(u.get(n,e,r),n,t,r)});const h=n.slice();return h[a]=d[1],{outputValues:p.values,outputShape:h,indices:i}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:Kr,bincountImpl:Xr,bincountReduceImpl:Yr,ceilImpl:Qr,concatImpl:Zr,equalImpl:Jr,expImpl:ea,expm1Impl:ta,floorImpl:na,gatherNdImpl:ra,gatherV2Impl:aa,greaterImpl:oa,greaterEqualImpl:sa,lessImpl:ia,lessEqualImpl:ua,linSpaceImpl:ca,logImpl:la,maxImpl:da,maximumImpl:pa,minimumImpl:ha,multiplyImpl:fa,negImpl:ma,notEqualImpl:ba,prodImpl:ga,rangeImpl:ya,rsqrtImpl:xa,simpleAbsImpl:va,sliceImpl:Oa,sparseFillEmptyRowsImpl:wa,sparseReshapeImpl:ka,sparseSegmentReductionImpl:ja,stridedSliceImpl:Sa,stringNGramsImpl:Ta,stringSplitImpl:Ia,stringToHashBucketFastImpl:Na,subImpl:Ca,tileImpl:$a,topKImpl:Ea,transposeImpl:Aa,uniqueImpl:Ra}=r;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _a(e,t){return["x","y","z","w","u","v"].slice(0,t).map(t=>`${e}.${t}`)}function Fa(e,t){return 1===t?[e]:_a(e,t)}function Da(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ma{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=Fa("rc",t),r=dn(t),a=La(t,e,n),o=Ba(t,e[e.length-1],e[e.length-2],n),s=Va(e,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${a}) {\n            setOutput(vec4(0));\n          } else {\n            ${o}\n\n            setOutput(vec4(${s}));\n          }\n        }\n      `}}}function Pa(e,t){const n=[];for(let r=0;r<=1;r++)for(let a=0;a<=1;a++){let o=`${0===r?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let n=2;n<e;n++)o=t[t.length-1-n]+","+o;n.push(o)}return n}function La(e,t,n){if(1===e)return"rc > "+t[0];let r="";for(let a=e-2;a<e;a++)r+=`${n[a]} >= ${t[a]}`,a<e-1&&(r+="||");return r}function Ba(e,t,n,r){if(1===e)return"";const a=r.slice(-2);return`\n    int r = ${a[0]};\n    int c = ${a[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}function Va(e,t){const n=e.length,r=Pa(n,t);return 1===n?`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class za{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let r=0;r<4;r++){let e="thisRC = rc;";r%2===1&&(e+="thisRC.z += 1;"),r>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${r}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${r>0?"}":""}\n      `}this.userCode=`\n      ${Wa(t)}\n      ${Ue(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${e[1]};\n        int cols = ${e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}function Wa(e){const t=ze(["r","c","d"],e);return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${t}\n      return ivec3(r, c, d);\n    }\n  `}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ua{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=Xa(t,n),a=Ya(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const o=Ha(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=o,this.log();const e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}let s;return r===P.PACKED_2X2_FLOAT32?s=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===P.PACKED_2X2_FLOAT16?s=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===P.UNPACKED_FLOAT32?s=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===P.UNPACKED_FLOAT16?s=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===P.PACKED_4X1_UNSIGNED_BYTE&&(s=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(s),this.numUsedTextures++,this._numBytesAllocated+=o,this.log(),s}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const a=Xa(n,r),o=Ya(t,a,r);o in this.freeTextures||(this.freeTextures[o]=[]);const s=Ha(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),i=Object(C["env"])().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==i&&this._numBytesAllocated>i?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=s):(this.freeTextures[o].push(e),this.numFreeTextures++,this._numBytesFree+=s),this.numUsedTextures--;const u=this.usedTextures[o],c=u.indexOf(e);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(c,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: "+this._numBytesAllocated),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e)});for(const e in this.usedTextures)this.usedTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Ga(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error("Unknown internal format "+t)}function Ha(e,t,n,r,a){const o=qa(t,r);let s;if(a){const[t,n]=z(e[0],e[1]);s=t*n}else{const[t,n]=L(e[0],e[1]);s=t*n}const i=Ga(n,o);return s*i}function qa(e,t){switch(e){case P.PACKED_2X2_FLOAT32:return ut(t);case P.PACKED_2X2_FLOAT16:return lt(t);case P.UNPACKED_FLOAT32:return nt(t);case P.UNPACKED_FLOAT16:return at(t);case P.PACKED_4X1_UNSIGNED_BYTE:return st(t);default:throw new Error("Unknown physical texture type "+e)}}function Ka(e){return Object(C["env"])().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?P.PACKED_2X2_FLOAT32:P.UNPACKED_FLOAT32:e?P.PACKED_2X2_FLOAT16:P.UNPACKED_FLOAT16}function Xa(e,t){if(e===M.UPLOAD)return P.PACKED_2X2_FLOAT32;if(e===M.RENDER||null==e)return Ka(t);if(e===M.DOWNLOAD||e===M.PIXELS)return P.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type "+e)}function Ya(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qa{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=xn(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const Za="if (isnan(x)) return x;",Ja="return x;",eo="return abs(x);";const to="return (x >= 0.0) ? x : (exp(x) - 1.0);",no=Za+"\n  return (x < 0.0) ? 0.0 : x;\n",ro=Za+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",ao="return x;",oo="return 1.0 / (1.0 + exp(-1.0 * x));",so="return x;",io="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",uo="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",co="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",lo="return 1.0 / (1.0 + exp(-1.0 * x));";class po{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=xn(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ho{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=Fa("rc",t),r=dn(t),a=Da(t,n),o=n.slice(-2),s=t<=1?"rc":`vec2(${o.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${s}));\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fo=C["kernel_impls"].whereImpl,mo=1e-7,bo=1e-4,go={};function yo(e){return e in go||(go[e]={}),go[e]}const xo=Object(C["env"])().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),vo=600;function Oo(){return null==Object(C["env"])().global.screen?1024:Object(C["env"])().global.screen.height*Object(C["env"])().global.screen.width*window.devicePixelRatio*vo/1024/1024}class wo extends C["KernelBackend"]{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Object(C["env"])().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=R(Object(C["env"])().getNumber("WEBGL_VERSION"));this.binaryCache=yo(Object(C["env"])().getNumber("WEBGL_VERSION")),this.gpgpu=new vt(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;this.textureManager=new Ua(this.gpgpu),this.numMBBeforeWarning=Oo(),this.texData=new C["DataStorage"](this,Object(C["engine"])())}nextDataId(){return wo.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((Object(C["env"])().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Object(C["env"])().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:M.UPLOAD,refCount:1}),r}refCount(e){if(this.texData.has(e)){const t=this.texData.get(e);return t.refCount}return 0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,n,r,a){if(Object(C["env"])().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:M.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:o,shape:s,isPacked:i}=t;if(null!=o){let t;t=i?new po(s,ao):new Qa(s,ao);const n=this.runWebGLProgram(t,[{dataId:e,shape:s,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let c,l;if(u&&(c=C["util"].now()),"complex64"===r){const e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);l=C["backend_util"].mergeRealAndImagArrays(e,t)}else l=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=C["util"].now()-c),this.convertAndCacheOnCPU(e,l)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise(e=>t.push(e))}const t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:o,complexTensorInfos:s,isPacked:i}=t;if(null!=a){let t;t=i?new po(r,ao):new Qa(r,ao);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:o}],o),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(!Object(C["env"])().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Object(C["env"])().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,c,l=null;if("complex64"!==o&&Object(C["env"])().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);l=this.gpgpu.createBufferFromTexture(t.texture,...V(r))}if(this.pendingRead.set(e,[]),"complex64"!==o&&await this.gpgpu.createAndWaitForFence(),"complex64"===o){const e=await Promise.all([this.read(s.real.dataId),this.read(s.imag.dataId)]),t=e[0],n=e[1];c=C["backend_util"].mergeRealAndImagArrays(t,n)}else if(null==l)c=this.getValuesFromTexture(e);else{const e=C["util"].sizeFromShape(r);c=this.gpgpu.downloadFloat32MatrixFromBuffer(l,e)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=l){const e=this.gpgpu.gl;G(e,()=>e.deleteBuffer(l))}const d=this.convertAndCacheOnCPU(e,c),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(e=>e(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Object(C["engine"])().removeDataId(e,this),this.pendingDeletes--),d}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map(e=>C["util"].decodeString(e))}catch(r){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(C["buffer"])(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!X(n)){if(Object(C["env"])().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=C["util"].sizeFromShape(t);if(Object(C["env"])().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),o=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...V(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),o}const o=Object(C["env"])().getBool("WEBGL_PACK")&&!0===r,s=o?ke(t):t,i=o?new Xe(s):new Ke(s),u=this.runWebGLProgram(i,[{shape:s,dtype:n,dataId:e}],"float32"),c=this.texData.get(u.dataId),l=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture,c.texShape[0],c.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(u),l}timerAvailable(){return Object(C["env"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=C["util"].flatten(this.activeTimers.map(e=>e.query)).filter(e=>null!=e),o=C["util"].flatten(this.activeTimers.map(e=>e.name)).filter(e=>null!=e);this.activeTimers=t,r&&(this.programTimersStack=null);const s={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Object(C["env"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(a);s["kernelMs"]=C["util"].sum(e),s["getExtraProfileInfo"]=()=>e.map((e,t)=>({name:o[t],ms:e})).map(e=>`${e.name}: ${e.ms}`).join(", ")}else s["kernelMs"]={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,s}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Object(C["env"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:C["util"].now(),endMs:null}}endTimer(e){return Object(C["env"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=C["util"].now(),e)}async getQueryTime(e){if(Object(C["env"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:o,slice:s}=this.texData.get(e),i=s&&s.origDataId||e,u=this.dataRefCount.get(i);u>1?this.dataRefCount.set(i,u-1):(this.dataRefCount.delete(i),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,o)));const c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=xo){return Object(C["env"])().getBool("WEBGL_CPU_FORWARD")&&e.every(e=>null==this.texData.get(e.dataId).texture&&C["util"].sizeFromShape(e.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){C["backend_util"].warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return fo(e.shape,t)}packedUnaryOp(e,t,n){const r=new po(e.shape,t),a=this.compileAndRun(r,[e],n);return Object(C["engine"])().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=va(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Object(C["env"])().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,eo,e.dtype);const t=new Qa(e.shape,eo),n=this.compileAndRun(t,[e]);return Object(C["engine"])().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&C["util"].isString(n[0])){const a=n.map(e=>C["util"].encodeString(e));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return Object(C["engine"])().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new ho(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new Ma(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){const n=[Oe(e.shape),...we(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[Oe(t),...we(t)],o=new za(a,n),s=!0,i=this.runWebGLProgram(o,[r],e.dtype,null,s);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:r,dtype:a}=t,o=ke(r);let s;s=n?new qe(o):new He(o);const i=!0,u=this.runWebGLProgram(s,[{shape:o,dtype:a,dataId:e}],a,null,i);return{dtype:a,shape:r,dataId:u.dataId}}runWebGLProgram(e,t,n,r,a=!1){const o=this.makeTensorInfo(e.outputShape,n),s=this.texData.get(o.dataId);if(e.packedOutput&&(s.isPacked=!0),e.outPackingScheme===D.DENSE){const t=V(e.outputShape);s.texShape=t.map(e=>2*e)}if(null!=e.outTexUsage&&(s.usage=e.outTexUsage),0===C["util"].sizeFromShape(o.shape))return s.values=C["util"].getTypedArrayFromDType(o.dtype,0),o;const i=[],u=t.map(t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&C["util"].sizeFromShape(t.shape)<=Object(C["env"])().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!==!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),i.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!Te(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),i.push(t),n=this.texData.get(t.dataId),e.shape=r}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}});this.uploadToGPU(o.dataId);const c={shape:o.shape,texData:s,isUniform:!1},l=yn(e,u,c),d=this.getAndSaveBinary(l,()=>mn(this.gpgpu,e,u,c)),p=null!=this.activeTimers;let h;p&&(h=this.startTimer()),gn(this.gpgpu,d,u,c,r),i.forEach(e=>this.disposeIntermediateTensorInfo(e)),p&&(h=this.endTimer(h),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(h)}));const f=Object(C["env"])().get("WEBGL_FLUSH_THRESHOLD");if(f>0){const e=C["util"].now();e-this.lastGlFlushTime>f&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Object(C["env"])().getBool("WEBGL_LAZILY_UNPACK")&&s.isPacked&&!1===a){const e=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),e}return o}compileAndRun(e,t,n,r,a=!1){n=n||t[0].dtype;const o=this.runWebGLProgram(e,t,n,r,a);return o}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!Object(C["env"])().getBool("IS_TEST")){const e=Object.keys(this.binaryCache);e.forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Object(C["tidy"])(()=>{if(!Object(C["env"])().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Object(C["env"])().getBool("DEBUG");Object(C["env"])().set("DEBUG",!1);const t=this.abs(Object(C["scalar"])(1e-8)).dataSync()[0];if(Object(C["env"])().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?mo:bo}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:o,usage:s,isPacked:i}=t;if(null!=o)return;const u=null!=this.activeTimers;let c;u&&(c=C["util"].now());let l=t.texShape;if(null==l&&(l=je(n,i),t.texShape=l),null!=a){const e=ke(n);let o,s=l[1],d=l[0];const p=a instanceof Uint8Array;i?([s,d]=z(l[0],l[1]),o=new Qe(e,[d,s],p)):o=new Ye(e,[d,s],p);const h=this.makeTensorInfo([d,s],r);this.texData.get(h.dataId).usage=p?M.PIXELS:M.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(h.dataId),s,d,a);const f=!0,m=this.runWebGLProgram(o,[h],r,null,f),b=this.texData.get(m.dataId);t.texture=b.texture,t.texShape=b.texShape,t.isPacked=b.isPacked,t.usage=b.usage,this.disposeIntermediateTensorInfo(h),this.texData.delete(m.dataId),t.values=null,u&&(this.uploadWaitMs+=C["util"].now()-c)}else{const e=this.acquireTexture(l,s,r,i);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=ko(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*C["util"].bytesPerElement(t)}}function ko(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error("Unknown dtype "+t)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */wo.nextDataId=0,
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
C["device_util"].isBrowser()&&Object(C["registerBackend"])("webgl",()=>new wo,2);const jo="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class So{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=C["backend_util"].assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=xn(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const To="\n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n";class Io{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=C["backend_util"].assertAndGetBroadcastShape(t,n);const a=this.outputShape.length;this.enableShapeUniforms=xn(a);let o="";if(r)if(0===a||1===C["util"].sizeFromShape(this.outputShape))o="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{const e=dn(a);if(o=`\n          ${e} coords = getOutputCoords();\n        `,1===a)this.enableShapeUniforms?o+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":o+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=Fa("coords",a);this.enableShapeUniforms?o+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:o+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${o}\n\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function No(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Co={kernelName:C["Identity"],backendName:"webgl",kernelFunc:No};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $o(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,o=n.makeTensorInfo(r.shape,"complex64"),s=n.texData.get(o.dataId),i=No({inputs:{x:r},backend:n}),u=No({inputs:{x:a},backend:n});return s.complexTensorInfos={real:i,imag:u},o}const Eo={kernelName:C["Complex"],backendName:"webgl",kernelFunc:$o},Ao="return (a < 0.) ? b * a : a;",Ro="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _o(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:o}=r,s=n.makeTensorInfo([],"float32",C["util"].createScalarValue(o,"float32")),i=Object(C["env"])().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Io(Ro,a.shape,s.shape):new So(Ao,a.shape,s.shape),u=n.runWebGLProgram(i,[a,s],a.dtype);return n.disposeIntermediateTensorInfo(s),u}const Fo={kernelName:C["LeakyRelu"],backendName:"webgl",kernelFunc:_o},Do="return (a < 0.) ? b * a : a;",Mo="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Po(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,o=Object(C["env"])().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Io(Mo,r.shape,a.shape):new So(Do,r.shape,a.shape);return n.runWebGLProgram(o,[r,a],r.dtype)}const Lo={kernelName:C["Prelu"],backendName:"webgl",kernelFunc:Po},Bo="if (isnan(x)) return x;",Vo="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n",zo="\n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wo({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:o})=>{const{x:s}=a,i=o,u=r||s.dtype;if(i.shouldExecuteOnCPU([s])&&null!=n){const e=i.texData.get(s.dataId),t=n(e.values,u);return i.makeTensorInfo(s.shape,u,t)}const c=Object(C["env"])().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t;let l;return l=c?new po(s.shape,t):new Qa(s.shape,e),i.runWebGLProgram(l,[s],u)}}function Uo({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:o}){return({inputs:s,backend:i})=>{const{a:u,b:c}=s,l=i;if(r&&"complex64"===u.dtype){const t=l.texData.get(u.dataId),n=l.texData.get(c.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map(t=>{const[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:u.shape},o={dataId:r.dataId,dtype:r.dtype,shape:c.shape},s=new So(e,u.shape,c.shape);return l.runWebGLProgram(s,[a,o],Object(C["upcastType"])(n.dtype,r.dtype))}),o=$o({inputs:{real:r,imag:a},backend:l});return l.disposeIntermediateTensorInfo(r),l.disposeIntermediateTensorInfo(a),o}const d=o||Object(C["upcastType"])(u.dtype,c.dtype);if(("string"===u.dtype||"string"===c.dtype||l.shouldExecuteOnCPU([u,c]))&&null!=a){const e=l.texData.get(u.dataId).values,t=l.texData.get(c.dataId).values,n="string"===u.dtype?C["backend_util"].fromUint8ToStringArray(e):e,r="string"===u.dtype?C["backend_util"].fromUint8ToStringArray(t):t,[o,s]=a(u.shape,c.shape,n,r,d),i=l.makeTensorInfo(s,d),p=l.texData.get(i.dataId);return p.values=o,i}const p=Object(C["env"])().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t;let h;return h=p?new Io(t,u.shape,c.shape,n):new So(e,u.shape,c.shape),l.runWebGLProgram(h,[u,c],d)}}function Go(e,t=!1){if("linear"===e)return t?so:Ja;if("relu"===e)return t?uo:no;if("elu"===e)return t?io:to;if("relu6"===e)return t?co:ro;if("prelu"===e)return t?Mo:Do;if("leakyrelu"===e)return t?Ro:Ao;if("sigmoid"===e)return t?lo:oo;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ho{constructor(e,t,n,r=!1,a=!1,o=!1,s=null,i=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const c=r?e[1]:e[2],l=Math.ceil(c/2),d=r?"i * 2, rc.y":"rc.y, i * 2",p=a?"rc.z, i * 2":"i * 2, rc.z",h=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",b="";s&&(m=i?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${s}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${s}\n        }`:`vec4 activation(vec4 x) {\n          ${s}\n        }`,b="result = activation(result);");const g=o?"result += getBiasAtOutCoords();":"";o&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let y="rc.x",x="rc.x";e[0]<t[0]?y=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n\n      const float sharedDimension = ${l}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${l}; i++) {\n          int batchA = ${y};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${d});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${h[0]} * ${f[0]});\n          result += (${h[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${g}\n\n        ${b}\n\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qo={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class Ko{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=C["backend_util"].assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xo="return a * b;";function Yo(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,o=C["backend_util"].upcastType(r.dtype,a.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),o=new Ko(qo.REAL,r.shape,a.shape),s=new Ko(qo.IMAG,r.shape,a.shape),i=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],u=n.runWebGLProgram(o,i,"float32"),c=n.runWebGLProgram(s,i,"float32"),l=$o({inputs:{real:u,imag:c},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),l}if(n.shouldExecuteOnCPU([r,a])){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),[s,i]=fa(r.shape,a.shape,e.values,t.values,o),u=n.makeTensorInfo(i,o),c=n.texData.get(u.dataId);return c.values=s,u}let s;return s=Object(C["env"])().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Io(Xo,r.shape,a.shape):new So(Xo,r.shape,a.shape),n.runWebGLProgram(s,[r,a],o)}const Qo={kernelName:C["Multiply"],backendName:"webgl",kernelFunc:Yo};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zo(e,t,n){const r=[Oe(e.shape),...we(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},o=[Oe(t),...we(t)],s=new za(o,r),i=!0,u=n.runWebGLProgram(s,[a],e.dtype,null,i);return{dataId:u.dataId,shape:t,dtype:u.dtype}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jo(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:o}=r,s=n,i=C["util"].sizeFromShape(a.shape),u=C["util"].inferFromImplicitShape(o,i),c=C["util"].sizeFromShape(u);C["util"].assert(i===c,()=>`The new shape (${u}) has ${c} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);const l=s.texData.get(a.dataId);return!l.isPacked||Te(a.shape,u)||null!==l.texture&&Te(l.shape,u)?(s.incRef(a.dataId),{dataId:a.dataId,shape:u,dtype:a.dtype}):Zo(a,u,s)}const es={kernelName:C["Reshape"],backendName:"webgl",kernelFunc:Jo};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ts{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:o}=e;this.outputShape=[r,o];const s=4*Math.floor(n/4),i=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${C["util"].isInt(e)?e.toPrecision(2):e}, ones);`}let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${s}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${s};\n        if (${1===i}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===i}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===i}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ns{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:o}=e;this.outputShape=[r,o];let s="0.0",i="";"prod"===t?s="1.0":"min"===t?(s="1.0 / 1e-20",i="min"):"max"===t&&(s="-1.0 / 1e-20",i="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const c=4*Math.floor(n/4),l=n%4;let d=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${i}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${i}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,p="vec4";"all"===t?(s="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(s="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${s};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${h}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${s});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${c}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${c};\n        if (${1===l}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${2===l}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${3===l}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${d}\n        }\n        setOutput(${u});\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rs(e){const t=[];while(0===t.length||1!==t[t.length-1].outSize){const n=t.length?t[t.length-1].outSize:e[1],r=C["backend_util"].computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}function as(e,t,n,r){const a=rs(e.shape);let o=e;for(let s=0;s<a.length;s++){const{inSize:i,windowSize:u,outSize:c}=a[s];let l,d;l="mean"===n?0===s?new ts({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:c},i):new ts({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:c}):new ns({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:c},n),d=o,o=r.runWebGLProgram(l,[o],t),d.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(d)}return o}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class os{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let o=0;o<n.length;o++)n[o]=e[t[o]];this.outputShape=n,this.rank=n.length;const r=dn(this.rank),a=ss(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}function ss(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let a=0;a<e.length;a++)r[e[a]]=n[a];return r.join()}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class is{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let c=0;c<n.length;c++)n[c]=e[t[c]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=dn(this.rank),a=_a("rc",this.rank),o=new Array(this.rank);for(let c=0;c<t.length;c++)o[t[c]]=a[c];const s=`vec2(${o.slice(-2).join()})`,i=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${o.join()}), ${s})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${i}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${i}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function us(e,t,n){const r=Object(C["env"])().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new is(e.shape,t):new os(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cs(e,t,n,r){const a=t,o=e.shape.length,s=C["util"].parseAxisParam(a,e.shape);let i=s;const u=C["backend_util"].getAxesPermutation(i,o),c=null!=u;let l=e;c&&(l=us(e,u,r),i=C["backend_util"].getInnerMostAxes(i.length,o)),C["backend_util"].assertAxesAreInnerMostDims("sum",i,o);const[d,p]=C["backend_util"].computeOutAndReduceShapes(l.shape,i);let h=d;n&&(h=C["backend_util"].expandShapeToKeepDim(d,s));const f=C["util"].sizeFromShape(p),m=C["util"].sizeFromShape(e.shape),b=m/f,g=Jo({inputs:{x:l},attrs:{shape:[b,f]},backend:r}),y=Object(C["sumOutType"])(e.dtype),x=as(g,y,"sum",r),v=Jo({inputs:{x:x},attrs:{shape:h},backend:r});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(x),c&&r.disposeIntermediateTensorInfo(l),v}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ls(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o,keepDims:s}=r;return cs(a,o,s,n)}const ds={kernelName:C["Sum"],backendName:"webgl",kernelFunc:ls};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ps(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:o}=r,s=n,i=a.shape.length,u=new Array(i);for(let l=0;l<u.length;l++)u[l]=a.shape[o[l]];let c;if(s.shouldExecuteOnCPU([a])){const e=s.texData.get(a.dataId),t=e.values,n=Aa(t,a.shape,a.dtype,o,u);c=s.makeTensorInfo(u,a.dtype);const r=s.texData.get(c.dataId);r.values=n}else c=us(a,o,s);return c}const hs={kernelName:C["Transpose"],backendName:"webgl",kernelFunc:ps},fs=1e3;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ms({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:u=null}){const c=e.shape.length,l=t.shape.length,d=n?e.shape[c-2]:e.shape[c-1],p=r?t.shape[l-1]:t.shape[l-2],h=n?e.shape[c-1]:e.shape[c-2],f=r?t.shape[l-2]:t.shape[l-1],m=e.shape.slice(0,-2),b=t.shape.slice(0,-2),g=C["util"].sizeFromShape(m),y=C["util"].sizeFromShape(b),x=g===y||1===g||1===y;C["util"].assert(c>=2&&l>=2&&x,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${b}).`);const v=g>y?e.shape.slice(0,-2):t.shape.slice(0,-2),O=v.concat([h,f]);C["util"].assert(d===p,()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`);const w=n?[g,d,h]:[g,h,d],k=r?[y,f,p]:[y,p,f],j=Jo({inputs:{x:e},backend:a,attrs:{shape:w}}),S=Jo({inputs:{x:t},backend:a,attrs:{shape:k}}),T=[j,S],I=Math.max(g,y),N=n?j.shape[1]:j.shape[2],$=null!=o,E=null!=s,A="leakyrelu"===u,R=null!=u?Go(u,!0):null,_=$||E||A||null!=R;let F;if((1===h||1===f)&&N>fs&&!1===_){let e=j,t=S;n&&(e=ps({inputs:{x:j},backend:a,attrs:{perm:[0,2,1]}}),T.push(e)),r&&(t=ps({inputs:{x:S},backend:a,attrs:{perm:[0,2,1]}}),T.push(t));const o=1!==f,s=1===f;let i=e;o&&(i=Jo({inputs:{x:e},backend:a,attrs:{shape:[I,N,1]}}),T.push(i));const u=1===f?2:1;let c=t;s&&(c=Jo({inputs:{x:t},backend:a,attrs:{shape:[I,1,N]}}),T.push(c));const l=Yo({inputs:{a:i,b:c},backend:a});F=ls({inputs:{x:l},backend:a,attrs:{axis:u,keepDims:!0}}),T.push(l)}else{const u=Object(C["upcastType"])(e.dtype,t.dtype),c=new Ho(w,k,[I,h,f],n,r,$,R,E,A),l=[j,S];if(null!=o&&l.push(o),E&&l.push(s),A){const e=a.makeTensorInfo([],"float32",C["util"].createScalarValue(i,"float32"));l.push(e),T.push(e)}F=a.runWebGLProgram(c,l,u)}const D=Jo({inputs:{x:F},backend:a,attrs:{shape:O}});T.push(F);for(const C of T)a.disposeIntermediateTensorInfo(C);return D}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bs(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:o,bias:s,preluActivationWeights:i}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=r;return ms({a:a,b:o,transposeA:u,transposeB:c,backend:n,bias:s,preluActivationWeights:i,leakyreluAlpha:d,activation:l})}const gs={kernelName:C["_FusedMatMul"],backendName:"webgl",kernelFunc:bs},ys="return abs(x);";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xs(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=va(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let a;return a=Object(C["env"])().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new po(r.shape,ys):new Qa(r.shape,ys),n.runWebGLProgram(a,[r],r.dtype)}const vs={kernelName:C["Abs"],backendName:"webgl",kernelFunc:xs},Os=Za+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n",ws=Wo({opSnippet:Os}),ks={kernelName:C["Acos"],backendName:"webgl",kernelFunc:ws},js=Za+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));",Ss=Wo({opSnippet:js}),Ts={kernelName:C["Acosh"],backendName:"webgl",kernelFunc:Ss},Is="return a + b;",Ns=Uo({opSnippet:Is,packedOpSnippet:Is,supportsComplex:!0,cpuKernelImpl:Kr}),Cs={kernelName:C["Add"],backendName:"webgl",kernelFunc:Ns};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class $s{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((e,t)=>"T"+t);const n=[];this.variableNames.forEach(e=>{n.push(`float v${e} = get${e}AtOutCoords();`)});const r=this.variableNames.map(e=>"v"+e).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Es{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((e,t)=>"T"+t);const n=[];this.variableNames.forEach(e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)});const r=this.variableNames.map(e=>"v"+e).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function As(e){const{inputs:t,backend:n}=e,r=t;if(1===r.length)return No({inputs:{x:r[0]},backend:n});if(r.length>Object(C["env"])().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(r.length/2),t=As({inputs:r.slice(0,e),backend:n}),a=As({inputs:r.slice(e),backend:n});return As({inputs:[t,a],backend:n})}const a=r.map(e=>e.dtype).reduce((e,t)=>Object(C["upcastType"])(e,t)),o=r.map(e=>e.shape),s=Object(C["env"])().getBool("WEBGL_PACK"),i=s?new Es(r[0].shape,o):new $s(r[0].shape,o);return n.runWebGLProgram(i,r,a)}const Rs={kernelName:C["AddN"],backendName:"webgl",kernelFunc:As};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _s(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o,keepDims:s}=r,i=a.shape.length,u=C["util"].parseAxisParam(o,a.shape);let c=u;const l=C["backend_util"].getAxesPermutation(c,i);let d=a;null!=l&&(d=ps({inputs:{x:a},backend:n,attrs:{perm:l}}),c=C["backend_util"].getInnerMostAxes(c.length,i)),C["backend_util"].assertAxesAreInnerMostDims("all",c,i);const[p,h]=C["backend_util"].computeOutAndReduceShapes(d.shape,c),f=C["util"].sizeFromShape(h),m=Jo({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),b=as(m,m.dtype,"all",n);let g;if(s){const e=C["backend_util"].expandShapeToKeepDim(p,u);g=Jo({inputs:{x:b},backend:n,attrs:{shape:e}})}else g=Jo({inputs:{x:b},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),null!=l&&n.disposeIntermediateTensorInfo(d),g}const Fs={kernelName:C["All"],backendName:"webgl",kernelFunc:_s};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ds(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o,keepDims:s}=r,i=a.shape.length,u=C["util"].parseAxisParam(o,a.shape);let c=u;const l=C["backend_util"].getAxesPermutation(c,i);let d=a;null!=l&&(d=ps({inputs:{x:a},backend:n,attrs:{perm:l}}),c=C["backend_util"].getInnerMostAxes(c.length,i)),C["backend_util"].assertAxesAreInnerMostDims("any",c,i);const[p,h]=C["backend_util"].computeOutAndReduceShapes(d.shape,c),f=C["util"].sizeFromShape(h),m=Jo({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),b=as(m,m.dtype,"any",n);let g;if(s){const e=C["backend_util"].expandShapeToKeepDim(p,u);g=Jo({inputs:{x:b},backend:n,attrs:{shape:e}})}else g=Jo({inputs:{x:b},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),null!=l&&n.disposeIntermediateTensorInfo(d),g}const Ms={kernelName:C["Any"],backendName:"webgl",kernelFunc:Ds};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ps{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:o}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,o];const s="max"===t?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${i};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${s} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ls{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,C["util"].assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);const a=e[e.length-1],o=Math.ceil(a/t);this.outputShape=e.slice(0,-1),o>1&&this.outputShape.push(o),r||this.variableNames.push("bestIndicesA");const s=this.outputShape,i=s.length,u=dn(i),c=Fa("coords",i);let l,d;if(1===o){d=i+1;const e=dn(d);l=`\n        ${e} sourceLocR = ${e}(${c.join()}, 0);\n        ++${c[i-1]};\n        ${e} sourceLocG = ${e}(${c.join()}, 0);\n        ++${c[i-2]};\n        ${e} sourceLocA = ${e}(${c.join()}, 0);\n        --${c[i-1]};\n        ${e} sourceLocB = ${e}(${c.join()}, 0);\n        --${c[i-2]};`}else d=i,l=`\n        ${u} sourceLocR = coords;\n        ++${c[i-1]};\n        ${u} sourceLocG = coords;\n        ++${c[i-2]};\n        ${u} sourceLocA = coords;\n        --${c[i-1]};\n        ${u} sourceLocB = coords;\n        --${c[i-2]};`;const p=["x","y","z","w","u","v"].slice(0,d),h="."+p[d-1],f=p.map(e=>"int "+e),m=Fa("sourceLocR",d-1).concat("inIdx.r"),b=Fa("sourceLocG",d-1).concat("inIdx.g"),g=Fa("sourceLocB",d-1).concat("inIdx.b"),y=Fa("sourceLocA",d-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()})));`,O=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${b.join()}) : 0.,\n            hasNextRow ? getAChannel(${g.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,w=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${w}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${c[i-1]} < ${s[i-1]-1};\n        bool hasNextRow = ${c[i-2]} < ${s[i-2]-1};\n        ${l}\n        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},\n          sourceLocB${h}, sourceLocA${h}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${O};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${O};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bs(e,t,n,r=null){let a=t.shape[0],o=t.shape[1];null!=r&&(a=r.shape[0],o=r.shape[1]);const s=C["backend_util"].computeOptimalWindowSize(o),i={windowSize:s,inSize:o,batchSize:a,outSize:Math.ceil(o/s)},u=new Ps(i,n,null==r),c=[t];null!=r&&c.push(r);const l=e.runWebGLProgram(u,c,"int32");if(1===l.shape[1])return l;const d=Bs(e,t,n,l);return e.disposeIntermediateTensorInfo(l),d}function Vs(e,t,n,r=null){const a=null!=r?r.shape:t.shape,o=a[a.length-1],s=C["backend_util"].computeOptimalWindowSize(o),i=new Ls(a,s,n,null==r),u=null==r?[t]:[t,r],c=e.runWebGLProgram(i,u,"int32");if(c.shape.length===t.shape.length){const r=Vs(e,t,n,c);return e.disposeIntermediateTensorInfo(c),r}return c}function zs(e,t,n,r){const a=[n];if(C["backend_util"].assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!Object(C["env"])().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],[o,s]=C["backend_util"].computeOutAndReduceShapes(t.shape,a),i=C["util"].sizeFromShape(s),u=Jo({inputs:{x:t},backend:e,attrs:{shape:[-1,i]}});n.push(u);const c=Bs(e,u,r);n.push(c);const l=Jo({inputs:{x:c},backend:e,attrs:{shape:o}});return n.forEach(t=>e.disposeIntermediateTensorInfo(t)),l}return Vs(e,t,r)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ws(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o}=r;let s=C["util"].parseAxisParam(o,a.shape);const i=C["backend_util"].getAxesPermutation(s,a.shape.length);let u=a;const c=[];null!=i&&(u=ps({inputs:{x:a},backend:n,attrs:{perm:i}}),c.push(u),s=C["backend_util"].getInnerMostAxes(s.length,u.shape.length)),C["backend_util"].assertAxesAreInnerMostDims("argMax",[s[0]],u.shape.length);const l=zs(n,u,s[0],"max");return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),l}const Us={kernelName:C["ArgMax"],backendName:"webgl",kernelFunc:Ws};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gs(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o}=r;let s=C["util"].parseAxisParam(o,a.shape);const i=C["backend_util"].getAxesPermutation(s,a.shape.length);let u=a;const c=[];null!=i&&(u=ps({inputs:{x:a},backend:n,attrs:{perm:i}}),c.push(u),s=C["backend_util"].getInnerMostAxes(s.length,u.shape.length)),C["backend_util"].assertAxesAreInnerMostDims("argMin",[s[0]],u.shape.length);const l=zs(n,u,s[0],"min");return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),l}const Hs={kernelName:C["ArgMin"],backendName:"webgl",kernelFunc:Gs},qs=Za+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n",Ks=Wo({opSnippet:qs}),Xs={kernelName:C["Asin"],backendName:"webgl",kernelFunc:Ks},Ys=Za+"return log(x + sqrt(x * x + 1.0));",Qs=Wo({opSnippet:Ys}),Zs={kernelName:C["Asinh"],backendName:"webgl",kernelFunc:Qs},Js=Za+"\n  return atan(x);\n",ei=Wo({opSnippet:Js}),ti={kernelName:C["Atan"],backendName:"webgl",kernelFunc:ei},ni=Vo+"\n  return atan(a, b);\n",ri="\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+zo+"\n  return result;\n",ai=Uo({opSnippet:ni,packedOpSnippet:ri}),oi={kernelName:C["Atan2"],backendName:"webgl",kernelFunc:ai},si=Za+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;",ii=Wo({opSnippet:si}),ui={kernelName:C["Atanh"],backendName:"webgl",kernelFunc:ii};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class ci{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const o=e.filterWidth,s=e.strideHeight,i=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,l=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,b=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let g="0.0";if(f||(g="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${s}, ${i});\n        const ivec2 pads = ivec2(${p}, ${h});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${l};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d};\n                wC += ${c}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:b:`wR * ${d} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}const y="max";let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / count");const v=4*Math.floor(o/4),O=o%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ${y}(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${i});\n      const ivec2 pads = ivec2(${p}, ${h});\n      const float initializationValue = ${g};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${g});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${l};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${v}; wC += 4) {\n            int xC = xCCorner + wC * ${c};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              getValue(batch, xR, xC + 3 * ${c}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${v};\n          if (${1===O}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===O}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===O}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${x});\n      }\n    `}}class li{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const o=e.filterWidth,s=e.strideDepth,i=e.strideHeight,u=e.strideWidth,c=e.dilationDepth,l=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,b=e.padInfo.top,g=e.padInfo.left;this.outputShape=e.outShape;const y="avg"===t;let x="0.0";if(y||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${s}, ${i}, ${u});\n        const ivec3 pads = ivec3(${m}, ${b}, ${g});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${c}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${h};\n                wR += ${l}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${d}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}const v="max";let O=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(O="avgValue / count");const w=4*Math.floor(o/4),k=o%4,j=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ${v}(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${s}, ${i}, ${u});\n      const ivec3 pads = ivec3(${m}, ${b}, ${g});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${c}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h};\n            wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${d};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${d}, ch)\n              );\n\n              ${j}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${j}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${j}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                initializationValue\n              );\n\n              ${j}\n            }\n          }\n          setOutput(${O});\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function di(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;Le(a,"avgPool");const{filterSize:o,strides:s,pad:i,dimRoundingMode:u}=r,c=1;C["util"].assert(C["backend_util"].eitherStridesOrDilationsAreOne(s,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${c}'`);const l=C["backend_util"].computePool2DInfo(a.shape,o,s,c,i,u);if(1===l.filterWidth&&1===l.filterHeight&&C["util"].arraysEqual(l.inShape,l.outShape))return No({inputs:{x:a},backend:n});const d=new ci(l,"avg",!1);return n.runWebGLProgram(d,[a],"float32")}const pi={kernelName:C["AvgPool"],backendName:"webgl",kernelFunc:di};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hi(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:o,strides:s,pad:i,dimRoundingMode:u,dataFormat:c}=r,l=[1,1,1],d=C["backend_util"].computePool3DInfo(a.shape,o,s,l,i,u,c),p=new li(d,"avg",!1);return n.runWebGLProgram(p,[a],"float32")}const fi={kernelName:C["AvgPool3D"],backendName:"webgl",kernelFunc:hi};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mi{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,o=e.dilationHeight,s=e.dilationWidth,i=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=i-1-e.padInfo.top,l=u-1-e.padInfo.left,d=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${c}, ${l});\n      const float avgMultiplier = float(${d});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${i};\n            wR += ${o}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${s}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class bi{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,o=e.strideHeight,s=e.strideWidth,i=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,l=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,h=l-1-e.padInfo.front,f=d-1-e.padInfo.top,m=p-1-e.padInfo.left,b=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${h}, ${f}, ${m});\n      const float avgMultiplier = float(${b});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${l};\n            wD += ${i}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${d};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${o}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${c}) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gi(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:o}=t,s=o,{filterSize:i,strides:u,pad:c,dimRoundingMode:l}=r,d=[1,1,1],p=C["backend_util"].computePool3DInfo(s.shape,i,u,d,c,l),h=new bi(p);return n.runWebGLProgram(h,[a],s.dtype)}const yi={kernelName:C["AvgPool3DGrad"],backendName:"webgl",kernelFunc:gi};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xi(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:o}=t,s=o;Le([a,o],"avgPoolGrad");const{filterSize:i,strides:u,pad:c}=r,l=C["backend_util"].computePool2DInfo(s.shape,i,u,1,c),d=new mi(l);return n.runWebGLProgram(d,[a],s.dtype)}const vi={kernelName:C["AvgPoolGrad"],backendName:"webgl",kernelFunc:xi};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oi(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:o}=t,{transposeA:s,transposeB:i}=r;return ms({a:a,b:o,transposeA:s,transposeB:i,backend:n})}const wi={kernelName:C["BatchMatMul"],backendName:"webgl",kernelFunc:Oi};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ki{constructor(e,t,n,r,a,o){this.outputShape=[],this.variableNames=["x","mean","variance"],C["backend_util"].assertAndGetBroadcastShape(e,t),C["backend_util"].assertAndGetBroadcastShape(e,n);let s="0.0";null!=r&&(C["backend_util"].assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),s="getOffsetAtOutCoords()");let i="1.0";null!=a&&(C["backend_util"].assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${s};\n        float scale = ${i};\n        float inv = scale * inversesqrt(variance + float(${o}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ji{constructor(e,t,n,r,a,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],C["backend_util"].assertAndGetBroadcastShape(e,t),C["backend_util"].assertAndGetBroadcastShape(e,n);let s="vec4(0.0)";null!=r&&(C["backend_util"].assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),s="getOffsetAtOutCoords()");let i="vec4(1.0)";null!=a&&(C["backend_util"].assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${s};\n        vec4 scale = ${i};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${o}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Si=({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:a,variance:o,offset:s,scale:i}=e;C["util"].assert(a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),C["util"].assert(null==s||a.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),C["util"].assert(null==i||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=n;null==u&&(u=.001);const c=[r,a,o];let l=null;null!=s&&(l=s.shape,c.push(s));let d=null;null!=i&&(d=i.shape,c.push(i));const p=Object(C["env"])().getBool("WEBGL_PACK_NORMALIZATION")?new ji(r.shape,a.shape,o.shape,l,d,u):new ki(r.shape,a.shape,o.shape,l,d,u),h=t.runWebGLProgram(p,c,c[0].dtype);return h},Ti={kernelName:C["FusedBatchNorm"],backendName:"webgl",kernelFunc:Si};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Ii{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=dn(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=Ci(this.rank);let r;const a=e.map((e,t)=>`sourceLoc.${Ni[t]} = start[${t}] + coords.${Ni[t]};`);r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${a.join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const Ni=["x","y","z","w","u","v"];function Ci(e){if(1===e)return"sourceLoc";if(e<=6)return Ni.slice(0,e).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $i{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=dn(this.rank),n=Fa("coords",this.rank),r=Fa("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,o=`getChannel(getSource(${r.join()}), ${a})`,s=`\n      result.x = ${o};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${o};\n        --${r[this.rank-1]};\n      }\n    `,i=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${o};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${o};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map((e,t)=>`start[${t}]`).join()});`:e.map((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${s}\n        ${i}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ei(e,t,n,r){const a=r.texData.get(e.dataId),o=r.makeTensorInfo(n,e.dtype),s=r.texData.get(o.dataId);Object.assign(s,a),s.refCount=1,s.shape=n,s.dtype=e.dtype;let i=C["slice_util"].computeFlatOffset(t,C["util"].computeStrides(e.shape));a.slice&&(i+=a.slice.flatOffset),s.slice={flatOffset:i,origDataId:a.slice&&a.slice.origDataId||e.dataId};const u=r.dataRefCount.get(s.slice.origDataId)||1;return r.dataRefCount.set(s.slice.origDataId,u+1),o}function Ai(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:o,size:s}=r,[i,u]=C["slice_util"].parseSliceParams(a,o,s);if(C["slice_util"].assertParamsValid(a,i,u),0===C["util"].sizeFromShape(u))return n.makeTensorInfo(u,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const e=n.texData.get(a.dataId),t=Oa(e.values,i,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,t)}const{isPacked:c}=n.texData.get(a.dataId),l=C["slice_util"].isSliceContinous(a.shape,i,u);if(c||!l){const e=Object(C["env"])().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new $i(u):new Ii(u),t=[i];return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),Ei(a,i,u,n)}const Ri={kernelName:C["Slice"],backendName:"webgl",kernelFunc:Ai},_i=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:o,crops:s}=r;C["util"].assert(a.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const i=o.reduce((e,t)=>e*t),u=C["backend_util"].getReshaped(a.shape,o,i),c=C["backend_util"].getPermuted(u.length,o.length),l=C["backend_util"].getReshapedPermuted(a.shape,o,i),d=C["backend_util"].getSliceBeginCoords(s,o.length),p=C["backend_util"].getSliceSize(l,s,o.length),h=[],f=Jo({inputs:{x:a},backend:n,attrs:{shape:u}}),m=ps({inputs:{x:f},backend:n,attrs:{perm:c}}),b=Jo({inputs:{x:m},backend:n,attrs:{shape:l}}),g=Ai({inputs:{x:b},backend:n,attrs:{begin:d,size:p}});return h.push(f),h.push(m),h.push(b),h.forEach(e=>n.disposeIntermediateTensorInfo(e)),g},Fi={kernelName:C["BatchToSpaceND"],backendName:"webgl",kernelFunc:_i};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Di(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:o}=t,{size:s}=r,i=n.readSync(a.dataId),u=n.readSync(o.dataId),c=Xr(i,u,o.dtype,o.shape,s);return n.makeTensorInfo([s],o.dtype,c)}const Mi={kernelName:C["Bincount"],backendName:"webgl",kernelFunc:Di},Pi="return float(a != b);",Li=Uo({opSnippet:Pi,cpuKernelImpl:ba,dtype:"bool"}),Bi={kernelName:C["NotEqual"],backendName:"webgl",kernelFunc:Li};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Vi(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.texData.get(r.dataId);return No({inputs:{x:a.complexTensorInfos.real},backend:n})}const zi={kernelName:C["Real"],backendName:"webgl",kernelFunc:Vi},Wi="return float(int(x));";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ui(e,t){const n=new Qa(e.shape,Wi),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gi(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:o}=r;if("complex64"===o){if("complex64"===a.dtype)return No({inputs:{x:a},backend:n});const e=C["zeros"](a.shape),t=Gi({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=$o({inputs:{real:t,imag:e},backend:n});return e.dispose(),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){const e=Vi({inputs:{input:a},backend:n}),t=Gi({inputs:{x:e},backend:n,attrs:{dtype:o}});return n.disposeIntermediateTensorInfo(e),t}if(!C["util"].hasEncodingLoss(a.dtype,o)){const e=No({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:o}}if("int32"===o)return Ui(a,n);if("bool"===o){const e=n.makeTensorInfo([],"bool",C["util"].getTypedArrayFromDType("bool",1)),t={a:a,b:e},r=Li({inputs:t,backend:n});return n.disposeIntermediateTensorInfo(e),r}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${o}`)}const Hi={kernelName:C["Cast"],backendName:"webgl",kernelFunc:Gi},qi="return ceil(x);",Ki=Wo({opSnippet:qi,packedOpSnippet:qi,cpuKernelImpl:Qr}),Xi={kernelName:C["Ceil"],backendName:"webgl",kernelFunc:Ki};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Yi{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qi{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zi(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:o,clipValueMax:s}=r;let i;i=Object(C["env"])().getBool("WEBGL_PACK_CLIP")?new Qi(a.shape):new Yi(a.shape);const u=[[o],[s]];return n.runWebGLProgram(i,[a],a.dtype,u)}const Ji={kernelName:C["ClipByValue"],backendName:"webgl",kernelFunc:Zi};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eu{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tu(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function nu(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),o=new eu(r.shape),s=[tu(r,a.complexTensorInfos.real),tu(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(o,s,s[0].dtype)}const ru={kernelName:C["ComplexAbs"],backendName:"webgl",kernelFunc:nu};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class au{constructor(e){this.outputShape=[],this.outputShape=C["backend_util"].computeOutShape(e,1),this.variableNames=e.map((e,t)=>"T"+t);const t=new Array(e.length-1);t[0]=e[0][1];for(let o=1;o<t.length;o++)t[o]=t[o-1]+e[o][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let o=1;o<t.length;o++){const e=t[o-1];n.push(`else if (yC < ${t[o]}) setOutput(getT${o}(yR, yC-${e}));`)}const r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ou{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=C["backend_util"].computeOutShape(e,t);const n=this.outputShape,r=n.length,a=dn(r),o=Fa("coords",r),s=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((e,t)=>"T"+t);const i=new Array(e.length-1);i[0]=e[0][t];for(let f=1;f<i.length;f++)i[f]=i[f-1]+e[f][t];const u=s[t],c=s.slice(-2),l=s.join();let d=`if (${u} < ${i[0]}) {\n        return getChannel(\n            getT0(${l}), vec2(${c.join()}));\n        }`;for(let f=1;f<i.length;f++){const e=i[f-1];d+=`\n        if (${u} < ${i[f]}  && ${u} >= ${i[f-1]}) {\n          return getChannel(\n            getT${f}(${su(s,u,e)}),\n            vec2(${su(c,u,e)}));\n        }`}const p=i.length,h=i[i.length-1];d+=`\n        return getChannel(\n          getT${p}(${su(s,u,h)}),\n          vec2(${su(c,u,h)}));`,this.userCode=`\n      float getValue(${s.map(e=>"int "+e)}) {\n        ${d}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${o}), 0., 0., 0.);\n\n        ${o[r-1]} = ${o[r-1]} + 1;\n        if (${o[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${o});\n        }\n\n        ${o[r-2]} = ${o[r-2]} + 1;\n        if (${o[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${o});\n        }\n\n        ${o[r-1]} = ${o[r-1]} - 1;\n        if (${o[r-2]} < ${n[r-2]} &&\n            ${o[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${o});\n        }\n        setOutput(result);\n      }\n    `}}function su(e,t,n){const r=e.indexOf(t),a=e.map((e,t)=>t===r?`${e} - ${n}`:e);return a.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iu(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.texData.get(r.dataId);return No({inputs:{x:a.complexTensorInfos.imag},backend:n})}const uu={kernelName:C["Imag"],backendName:"webgl",kernelFunc:iu};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cu(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map(e=>Vi({inputs:{input:e},backend:n})),a=e.map(e=>iu({inputs:{input:e},backend:n})),o=cu(r,t,n),s=cu(a,t,n),i=$o({inputs:{real:o,imag:s},backend:n});return r.forEach(e=>n.disposeIntermediateTensorInfo(e)),a.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(s),i}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){const a=e.map(e=>{const r=C["util"].sizeFromShape(e.shape.slice(t)),a=[-1,r];return Jo({inputs:{x:e},backend:n,attrs:{shape:a}})}),o=a.map(e=>({vals:n.readSync(e.dataId),shape:e.shape})),s=C["backend_util"].computeOutShape(a.map(e=>e.shape),1),i=1===a[0].shape[0],u=Zr(o,s,r,i),c=C["backend_util"].computeOutShape(e.map(e=>e.shape),t),l=n.makeTensorInfo(c,r,u);return a.forEach(e=>n.disposeIntermediateTensorInfo(e)),l}if(e.length>Object(C["env"])().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),a=cu(e.slice(0,r),t,n),o=cu(e.slice(r),t,n),s=cu([a,o],t,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),s}if(Object(C["env"])().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const a=new ou(e.map(e=>e.shape),t);return n.runWebGLProgram(a,e,r)}const{tensors2D:o,outShape:s}=lu(e,t,n),i=new au(o.map(e=>e.shape)),u=n.runWebGLProgram(i,o,r);o.forEach(e=>n.disposeIntermediateTensorInfo(e));const c=Jo({inputs:{x:u},attrs:{shape:s},backend:n});return n.disposeIntermediateTensorInfo(u),c}function lu(e,t,n){const r=C["backend_util"].computeOutShape(e.map(e=>e.shape),t),a=e.map(e=>Jo({inputs:{x:e},attrs:{shape:[-1,C["util"].sizeFromShape(e.shape.slice(t))]},backend:n}));return{tensors2D:a,outShape:r}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function du(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,o=C["util"].parseAxisParam(a,t[0].shape)[0],s=C["backend_util"].computeOutShape(t.map(e=>e.shape),o);if(0===C["util"].sizeFromShape(s))return n.makeTensorInfo(s,t[0].dtype,[]);const i=t.filter(e=>C["util"].sizeFromShape(e.shape)>0);if(1===i.length)return No({inputs:{x:i[0]},backend:n});const u=i.map(e=>e.shape);return C["backend_util"].assertParamsConsistent(u,o),cu(i,o,n)}const pu={kernelName:C["Concat"],backendName:"webgl",kernelFunc:du};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hu{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const o=e.padInfo.top,s=e.padInfo.left,i=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,l=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,b=m?1:2,g=m?2:3,y=m?3:1;let x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const O=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${i}, ${u});\n      const ivec2 pads = ivec2(${o}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${b}], coords[${g}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${c};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${l};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${h}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${h}) *\n                    getW(wR, wC, ${h}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${h}, xR, xC) *\n                    getW(wR, wC, ${h}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2),\n                getW(wR, wC, ${h} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1),\n                  getX(batch, xR, xC, ${h} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC),\n                  getX(batch, ${h} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${O}\n        ${v}\n        setOutput(result);\n      }\n    `}}class fu{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,o=e.strideHeight,s=e.strideWidth,i=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,l=e.filterDepth,d=e.filterHeight,p=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${o}, ${s});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${l}; wF++) {\n          int xF = xFCorner + wF * ${i};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${c};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${h}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${h}) *\n                  getW(wF, wR, wC, ${h}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1),\n                  getX(batch, xF, xR, xC, ${h} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2),\n                  getW(wF, wR, wC, ${h} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mu{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const{filterWidth:r,inChannels:a,strideWidth:o,strideHeight:s,padInfo:i,outWidth:u,dilationWidth:c,dilationHeight:l,dataFormat:d}=n,{left:p,top:h}=i,f=a*r,m=Ve(),b="channelsLast"===d,g=b?0:1,y=b?1:2;let x="";for(let v=0;v<=1;v++)for(let n=0;n<=1;n++)x+=`\n          blockIndex = rc.y + ${n};\n          pos = rc.x + ${v};\n\n          if(blockIndex < ${e[1]} && pos < ${e[0]}) {\n            offsetY = int(blockIndex / (${u})) * ${s} - ${h};\n            d0 = offsetY + ${l} * (pos / ${f});\n\n            if(d0 < ${t[g]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${u}.) * ${o}. - ${p}.);\n              d1 = offsetX + ${c} * (int(mod(float(pos), ${f}.) / ${a}.));\n\n              if(d1 < ${t[y]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${a}.));\n\n                if (${b}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*v+n}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*v+n}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bu({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:s=0,activation:i=null}){const u=e.shape,c=r.texData.get(e.dataId),l=n.inChannels,d=u[0]*u[1]*u[2],p=n.outChannels,h="channelsLast"===n.dataFormat,f=!1,m=!1;let b;const g=[],y=(1===d||1===p)&&l>fs,x=u[2]%2!==0&&!!c.isPacked;if(!y&&Object(C["env"])().getBool("WEBGL_LAZILY_UNPACK")&&Object(C["env"])().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&x){const l=h?u[0]*u[1]*(u[2]+1):u[0]*u[2]*(u[3]+1),d={dataId:e.dataId,shape:[1,l,n.inChannels],dtype:e.dtype},p=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,C["util"].assert(Te(c.shape,d.shape),()=>`packed reshape ${c.shape} to ${d.shape} isn't free`);const y=Jo({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(y);const x=ms({a:d,b:y,backend:r,transposeA:f,transposeB:m,bias:a,activation:i,preluActivationWeights:o,leakyreluAlpha:s}),v=r.texData.get(x.dataId);C["util"].assert(v.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=p,v.shape=n.outShape,b=No({inputs:{x:x},backend:r}),b.shape=n.outShape,g.push(x)}else{const c=h?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],l=Jo({inputs:{x:e},backend:r,attrs:{shape:[1,c,n.inChannels]}}),d=Jo({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),p=ms({a:l,b:d,transposeA:f,transposeB:m,backend:r,bias:a,activation:i,preluActivationWeights:o,leakyreluAlpha:s});b=Jo({inputs:{x:p},backend:r,attrs:{shape:n.outShape}}),g.push(l),g.push(d),g.push(p)}for(const v of g)r.disposeIntermediateTensorInfo(v);return b}function gu({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:s=0,activation:i=null}){const{filterWidth:u,filterHeight:c,inChannels:l,outWidth:d,outHeight:p,dataFormat:h}=n,f="channelsLast"===h,m=u*c*l,b=p*d,g=[m,b],y=!0,x=!1,v=[],O=Jo({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),w=Jo({inputs:{x:t},backend:r,attrs:{shape:[1,m,C["util"].sizeFromShape(t.shape)/m]}});v.push(O),v.push(w);const k=new mu(g,O.shape,n),j=r.runWebGLProgram(k,[O],"float32"),S=Jo({inputs:{x:j},backend:r,attrs:{shape:[1,g[0],g[1]]}});v.push(j),v.push(S);const T=null!=a,I=null!=o,N="leakyrelu"===i,$=i?Go(i,!0):null,E=new Ho(S.shape,w.shape,[1,b,n.outChannels],y,x,T,$,I,N),A=[S,w];if(a&&A.push(a),I&&A.push(o),N){const e=r.makeTensorInfo([],"float32",C["util"].createScalarValue(s,"float32"));A.push(e),v.push(e)}const R=r.runWebGLProgram(E,A,"float32"),_=f?[1,p,d,n.outChannels]:[1,n.outChannels,p,d],F=Jo({inputs:{x:R},backend:r,attrs:{shape:_}});v.push(R);for(const C of v)r.disposeIntermediateTensorInfo(C);return F}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yu(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:o}=t,{strides:s,pad:i,dataFormat:u,dilations:c,dimRoundingMode:l}=r,d=C["backend_util"].convertConv2DDataFormat(u),p=C["backend_util"].computeConv2DInfo(a.shape,o.shape,s,c,i,l,!1,d);let h;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(Object(C["env"])().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])h=gu({x:a,filter:o,convInfo:p,backend:n});else{const e=new hu(p);h=n.runWebGLProgram(e,[a,o],"float32")}else h=bu({x:a,filter:o,convInfo:p,backend:n});const f=Jo({inputs:{x:h},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(h),f}const xu={kernelName:C["Conv2D"],backendName:"webgl",kernelFunc:yu};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vu{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,o="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${o}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Ou{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,o="channelsLast"===e.dataFormat,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,u=o?1:2,c=o?2:3,l=o?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${l}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${o}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class wu{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,o=e.padInfo.top,s=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${o};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${s};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ku{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,o=e.strideHeight,s=e.strideWidth,i=t-1-e.padInfo.front,u=n-1-e.padInfo.top,c=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${i}, ${u}, ${c});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${o}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ju(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:o}=t,{strides:s,pad:i,dataFormat:u,dimRoundingMode:c,filterShape:l}=r,d=C["backend_util"].convertConv2DDataFormat(u),p=C["backend_util"].computeConv2DInfo(a.shape,l,s,1,i,c,!1,d),h=new vu(p);return n.runWebGLProgram(h,[a,o],"float32")}const Su={kernelName:C["Conv2DBackpropFilter"],backendName:"webgl",kernelFunc:ju};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tu(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:o}=t,{inputShape:s,strides:i,pad:u,dataFormat:c,dimRoundingMode:l}=r,d=C["backend_util"].convertConv2DDataFormat(c),p=C["backend_util"].computeConv2DInfo(s,o.shape,i,1,u,l,!1,d),h=new Ou(p);return n.runWebGLProgram(h,[a,o],"float32")}const Iu={kernelName:C["Conv2DBackpropInput"],backendName:"webgl",kernelFunc:Tu};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nu(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:o}=t,{strides:s,pad:i,dilations:u}=r,c=C["backend_util"].computeConv3DInfo(a.shape,o.shape,s,u,i),l=new fu(c);return n.runWebGLProgram(l,[a,o],"float32")}const Cu={kernelName:C["Conv3D"],backendName:"webgl",kernelFunc:Nu};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $u(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:o}=t,{strides:s,pad:i,filterShape:u}=r,c=C["backend_util"].computeConv3DInfo(a.shape,u,s,1,i),l=new wu(c);return n.runWebGLProgram(l,[a,o],"float32")}const Eu={kernelName:C["Conv3DBackpropFilterV2"],backendName:"webgl",kernelFunc:$u};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Au(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:o}=t,{pad:s,strides:i,inputShape:u}=r,c=C["backend_util"].computeConv3DInfo(u,o.shape,i,1,s),l=new ku(c);return n.runWebGLProgram(l,[a,o],"float32")}const Ru={kernelName:C["Conv3DBackpropInputV2"],backendName:"webgl",kernelFunc:Au},_u=Bo+"\n  return cos(x);\n",Fu=Wo({opSnippet:_u}),Du={kernelName:C["Cos"],backendName:"webgl",kernelFunc:Fu},Mu="\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n",Pu=Wo({opSnippet:Mu}),Lu={kernelName:C["Cosh"],backendName:"webgl",kernelFunc:Pu};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Bu{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[o,s,i,u]=e,[c]=t,[l,d]=n;this.outputShape=[c,l,d,u];const p="bilinear"===r?1:0,[h,f]=[s-1+".0",i-1+".0"],[m,b,g]=l>1?[""+(s-1)/(l-1),"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0","0.5 * (y1+y2) * "+h],[y,x,v]=d>1?[""+(i-1)/(d-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0","0.5 * (x1+x2) * "+f];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${o}) {\n          return;\n        }\n\n        float height_scale = ${b};\n        float width_scale = ${x};\n\n        float in_y = ${g};\n        if( in_y < 0.0 || in_y > ${h} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vu=e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:o,boxInd:s}=t,{cropSize:i,method:u,extrapolationValue:c}=r,l=new Bu(a.shape,o.shape,i,u,c);return n.runWebGLProgram(l,[a,o,s],"float32")},zu={kernelName:C["CropAndResize"],backendName:"webgl",kernelFunc:Vu};class Wu{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;const r=e.length,a=t?"0.0":`getX(${Uu(r,"coords")})`,o=e[e.length-1];let s="",i="";t?(s=n?"end != "+(o-1):"end != 0",i=n?"end + 1":"end - 1"):(s=n?"end + pow2 < "+o:"end >= pow2",i=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${dn(r)} coords = getOutputCoords();\n        int end = ${Gu(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${s}) {\n          int idx = ${i};\n          ${Gu(r,"coords")} = idx;\n          val += getX(${Uu(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}}function Uu(e,t){if(1===e)return""+t;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function Gu(e,t){if(1===e)return""+t;if(2===e)return t+".y";if(3===e)return t+".z";if(4===e)return t+".w";throw Error(`Cumulative sum for rank ${e} is not yet supported`)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hu(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o,exclusive:s,reverse:i}=r,u=a.shape.length,c=C["backend_util"].getAxesPermutation([o],u);let l=a;null!=c&&(l=ps({inputs:{x:a},backend:n,attrs:{perm:c}}));const d=C["backend_util"].getInnerMostAxes(1,u)[0];if(d!==u-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${a.shape.length-1} but got axis=`+o);const p=l.shape[d];let h=No({inputs:{x:l},backend:n});for(let f=0;f<=Math.ceil(Math.log2(p))-1;f++){const e=new Wu(l.shape,!1,i),t=[[f]],r=h;h=n.runWebGLProgram(e,[h],h.dtype,t),n.disposeIntermediateTensorInfo(r)}if(s){const e=new Wu(l.shape,s,i),t=h;h=n.runWebGLProgram(e,[h],h.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=c){const e=C["backend_util"].getUndoAxesPermutation(c),t=ps({inputs:{x:h},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),t}return h}const qu={kernelName:C["Cumsum"],backendName:"webgl",kernelFunc:Hu};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ku(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:o}=t,{size:s,binaryOutput:i}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(o.dataId),r=Xr(e,t,o.dtype,o.shape,s);return n.makeTensorInfo([s],o.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(o),r=Yr(e,t,s,i);return n.makeTensorInfo(r.shape,o.dtype,r.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+a.shape.length+".")}const Xu={kernelName:C["DenseBincount"],backendName:"webgl",kernelFunc:Ku};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yu{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qu(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:o,dataFormat:s}=r;C["util"].assert(o>1,()=>"blockSize should be > 1 for depthToSpace, but was: "+o);const i=a.shape[0],u="NHWC"===s?a.shape[1]:a.shape[2],c="NHWC"===s?a.shape[2]:a.shape[3],l="NHWC"===s?a.shape[3]:a.shape[1],d=u*o,p=c*o,h=l/(o*o),f="NHWC"===s?[i,d,p,h]:[i,h,d,p],m=new Yu(f,o,s);return n.runWebGLProgram(m,[a],a.dtype)}const Zu={kernelName:C["DepthToSpace"],backendName:"webgl",kernelFunc:Qu};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ju{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const o=e.inHeight,s=e.inWidth,i=e.padInfo.top,u=e.padInfo.left,c=e.strideHeight,l=e.strideWidth,d=e.dilationHeight,p=e.dilationWidth,h=e.filterHeight,f=e.filterWidth,m=e.outChannels/e.inChannels;let b="",g="";n&&(b=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,g="result = activation(result);");const y=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${c}, ${l});\n      const ivec2 pads = ivec2(${i}, ${u});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${m};\n        int q = d2 - d1 * ${m};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${d};\n\n          if (xR < 0 || xR >= ${o}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${f}; wC++) {\n            int xC = xCCorner + wC * ${p};\n\n            if (xC < 0 || xC >= ${s}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${y}\n        ${g}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ec{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;const o=e.outChannels/e.inChannels,s=e.inHeight,i=e.inWidth,u=e.padInfo.top,c=e.padInfo.left,l=e.strideHeight,d=e.strideWidth,p=e.dilationHeight,h=e.dilationWidth,f=e.filterHeight,m=e.filterWidth,b=m;let g="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let O=0;O<m;O++)g+=`\n          vec4 xTexelC${2*O};\n          int xTexelC${2*O}Ready;\n          vec4 xTexelC${2*O+1};\n          int xTexelC${2*O+1}Ready;\n          vec4 xC${O};`;for(let O=0;O<f;O++){for(let e=0;e<m;e++)g+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;g+=`\n        xR = xRCorner + ${O*p};\n        if (xR >=0 && xR < ${s}) {\n      `;for(let e=0;e<(b+1)/2;e++){const t=2*e,n=t*h;if(g+=`\n          xC = xCCorner + ${n};\n          `,1===d){if(t<m&&(c%2===1?(g+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < ${i} && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= ${i}) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,g+=1===h&&n>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < ${i}) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= ${i}) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):g+=`\n                if (xC >= 0 && xC < ${i} && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= ${i}) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,n+1<m)){const e=c%2===0?C["util"].nearestLargerEven(h):h;h%2===0&&c%2===1||h%2!==0&&c%2!==1?(g+=`\n                  xCOffset = xC + ${c%2} + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < ${i} && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= ${i}) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,h>1&&(g+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < ${i} && xTexelC${t}Ready == 0) {\n                      xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${t}Ready = 1;\n                    }\n                    `),g+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                  `):g+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < ${i} && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= ${i}) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else n<m&&(c%2===1?(g+=`\n                xCOffset = xC + 1 - ${d};\n                if(xCOffset >= 0 && xCOffset < ${i} && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= ${i}) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${i} && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= ${i}) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,n+1<m&&(g+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + ${d};\n                  if(xCOffset >= 0 && xCOffset < ${i}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(g+=`\n                if(xC >= 0 && xC < ${i} && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= ${i}) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + ${d};\n                if(xCOffset >= 0 && xCOffset < ${i} && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= ${i}) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,n+1<m&&(g+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<m&&(g+=`\n            wTexel = getW(${O}, ${n}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,n+1<m&&(g+=`\n              wTexel = getW(${O}, ${n+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}g+="\n        }\n      "}let y="",x="";n&&(y=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,x="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${l}, ${d});\n      const ivec2 pads = ivec2(${u}, ${c});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${g}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${v}\n        ${x}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tc(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:o}=t,{strides:s,pad:i,dilations:u,dimRoundingMode:c}=r;let l=u;null==l&&(l=[1,1]),C["util"].assert(C["backend_util"].eitherStridesOrDilationsAreOne(s,l),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${s} and dilations '${l}'`);const d=C["backend_util"].computeConv2DInfo(a.shape,o.shape,s,l,i,c,!0);let p;return p=Object(C["env"])().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels===1?new ec(d):new Ju(d),n.runWebGLProgram(p,[a,o],"float32")}const nc={kernelName:C["DepthwiseConv2dNative"],backendName:"webgl",kernelFunc:tc};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rc{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${o} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ac{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,o=t-1-e.padInfo.top,s=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${i}; dm++) {\n              int d2 = d1 * ${i} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oc(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:o}=t,{strides:s,dilations:i,pad:u,dimRoundingMode:c,filterShape:l}=r,d=C["backend_util"].computeConv2DInfo(a.shape,l,s,i,u,c,!0),p=new rc(d);return n.runWebGLProgram(p,[a,o],"float32")}const sc={kernelName:C["DepthwiseConv2dNativeBackpropFilter"],backendName:"webgl",kernelFunc:oc};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ic(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:o}=t,{strides:s,dilations:i,pad:u,dimRoundingMode:c,inputShape:l}=r,d=C["backend_util"].computeConv2DInfo(l,o.shape,s,i,u,c,!0),p=new ac(d);return n.runWebGLProgram(p,[a,o],"float32")}const uc={kernelName:C["DepthwiseConv2dNativeBackpropInput"],backendName:"webgl",kernelFunc:ic};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cc{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lc(e){const{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],o=C["util"].sizeFromShape(r.shape),s=Jo({inputs:{x:r},backend:n,attrs:{shape:[o]}}),i=new cc(o),u=n.runWebGLProgram(i,[s],s.dtype),c=Jo({inputs:{x:u},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(u),c}const dc={kernelName:C["Diag"],backendName:"webgl",kernelFunc:lc};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pc{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:o,filterHeight:s,filterWidth:i,dilationHeight:u,dilationWidth:c}=e,{top:l,left:d}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${o});\n      const ivec2 pads = ivec2(${l}, ${d});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${s}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${i}; w++) {\n              int wIn = wBeg + w * ${c};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hc(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:o}=t,{strides:s,pad:i,dilations:u}=r,c=C["backend_util"].computeDilation2DInfo(a.shape,o.shape,s,i,"NHWC",u);let l;const d=new pc(c);l=n.runWebGLProgram(d,[a,o],"float32");const p=Jo({inputs:{x:l},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(l),p}const fc={kernelName:C["Dilation2D"],backendName:"webgl",kernelFunc:hc};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mc(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,o=t,{allDims:s,summedDims:i,idDims:u}=C["backend_util"].decodeEinsumEquation(a,o.length);C["backend_util"].checkEinsumDimSizes(s.length,u,o);const{path:c,steps:l}=C["backend_util"].getEinsumComputePath(i,u),d=l.length;let p=null,h=s.length;const f=[];for(let m=0;m<d;++m){for(const e of l[m]){const{permutationIndices:t,expandDims:r}=C["backend_util"].getEinsumPermutation(h,u[e]);let a;C["backend_util"].isIdentityPermutation(t)?a=o[e]:(a=ps({inputs:{x:o[e]},backend:n,attrs:{perm:t}}),f.push(a));const s=a.shape.slice();for(let e=0;e<r.length;++e)s.splice(r[e],0,1);C["util"].arraysEqual(a.shape,s)||(a=Jo({inputs:{x:a},backend:n,attrs:{shape:s}}),f.push(a)),null===p?p=a:(p=Yo({inputs:{a:a,b:p},backend:n}),f.push(p))}m<d-1&&(c[m]>=0&&(p=ls({inputs:{x:p},backend:n,attrs:{axis:c[m]-(s.length-h),keepDims:!1}}),f.push(p)),h--)}for(const m of f)m!==p&&n.disposeIntermediateTensorInfo(m);return p}const bc={kernelName:C["Einsum"],backendName:"webgl",kernelFunc:mc},gc="return (x >= 0.0) ? x : (exp(x) - 1.0);",yc="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",xc=Wo({opSnippet:gc,packedOpSnippet:yc}),vc={kernelName:C["Elu"],backendName:"webgl",kernelFunc:xc},Oc="return (b >= 1.0) ? a : a * (b + 1.0);",wc="\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",kc=e=>{const{inputs:t,backend:n}=e,{dy:r,y:a}=t,o=Object(C["env"])().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Io(wc,r.shape,a.shape):new So(Oc,r.shape,a.shape);return n.runWebGLProgram(o,[r,a],r.dtype)},jc={kernelName:C["EluGrad"],backendName:"webgl",kernelFunc:kc},Sc="\n  return vec4(equal(a, b));\n",Tc="return float(a == b);",Ic=Uo({opSnippet:Tc,packedOpSnippet:Sc,dtype:"bool",cpuKernelImpl:Jr}),Nc={kernelName:C["Equal"],backendName:"webgl",kernelFunc:Ic},Cc=`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${C["backend_util"].ERF_P};\n  float a1 = ${C["backend_util"].ERF_A1};\n  float a2 = ${C["backend_util"].ERF_A2};\n  float a3 = ${C["backend_util"].ERF_A3};\n  float a4 = ${C["backend_util"].ERF_A4};\n  float a5 = ${C["backend_util"].ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`,$c=Wo({opSnippet:Cc}),Ec={kernelName:C["Erf"],backendName:"webgl",kernelFunc:$c},Ac="return exp(x);",Rc=Wo({opSnippet:Ac,packedOpSnippet:Ac,cpuKernelImpl:ea}),_c={kernelName:C["Exp"],backendName:"webgl",kernelFunc:Rc};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Fc(e){const{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:o}=t,s=o.shape.length,i=o.shape.slice();let u=a;return a<0&&(C["util"].assert(-(s+1)<=a,()=>`Axis must be in the interval [${-(s+1)}, ${s}]`),u=s+a+1),i.splice(u,0,1),Jo({inputs:{x:o},backend:r,attrs:{shape:i}})}const Dc={kernelName:C["ExpandDims"],backendName:"webgl",kernelFunc:Fc},Mc="return exp(x) - 1.0;",Pc=Wo({opSnippet:Mc,packedOpSnippet:Mc,cpuKernelImpl:ta}),Lc={kernelName:C["Expm1"],backendName:"webgl",kernelFunc:Pc};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Bc{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?"2.0 * "+Math.PI:"-2.0 * "+Math.PI,o=n?r+".0":"1.0";let s;if("real"===e)s="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);s="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${s}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${o};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vc(e,t,n){const r=n.texData.get(e.dataId),a=C["util"].sizeFromShape(e.shape),o=e.shape[e.shape.length-1],s=a/o,i=Jo({inputs:{x:e},backend:n,attrs:{shape:[s,o]}}),u=i.shape,c=new Bc("real",u,t),l=new Bc("imag",u,t),d=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:u},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:u}],p=n.runWebGLProgram(c,d,"float32"),h=n.runWebGLProgram(l,d,"float32"),f=$o({inputs:{real:p,imag:h},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h);const m=Jo({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(f),m}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zc(e){const{inputs:t,backend:n}=e,{input:r}=t;return Vc(r,!1,n)}const Wc={kernelName:C["FFT"],backendName:"webgl",kernelFunc:zc};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uc{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gc(e){const{backend:t,attrs:n}=e,{shape:r,value:a}=n;let{dtype:o}=n;if(o=o||C["util"].inferDtype(a),"string"===o){const e=C["util"].getArrayFromDType(o,C["util"].sizeFromShape(r));return e.fill(a),t.makeTensorInfo(r,o,e)}{const e=new Uc(r,a),n=[[a]];return t.runWebGLProgram(e,[],o,n)}}const Hc={kernelName:C["Fill"],backendName:"webgl",kernelFunc:Gc};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qc{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kc={kernelName:C["FlipLeftRight"],backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=new qc(n.shape),o=r.runWebGLProgram(a,[n],n.dtype);return o}},Xc="return floor(x);",Yc=Wo({opSnippet:Xc,packedOpSnippet:Xc,cpuKernelImpl:na}),Qc={kernelName:C["Floor"],backendName:"webgl",kernelFunc:Yc},Zc="\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",Jc="\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",el=Uo({opSnippet:Zc,packedOpSnippet:Jc,dtype:"int32"}),tl={kernelName:C["FloorDiv"],backendName:"webgl",kernelFunc:el};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class nl{constructor(e){this.variableNames=["A"];const t=Ve(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rl{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=Ve(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const al={kernelName:C["FromPixels"],backendName:"webgl",kernelFunc:sl};let ol;function sl(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:a}=t;const{numChannels:o}=r,s="undefined"!==typeof HTMLVideoElement&&a instanceof HTMLVideoElement,i="undefined"!==typeof HTMLImageElement&&a instanceof HTMLImageElement,[u,c]=s?[a.videoWidth,a.videoHeight]:[a.width,a.height],l=[c,u],d=[c,u,o];(i||s)&&(null==ol&&(ol=document.createElement("canvas").getContext("2d")),ol.canvas.width=u,ol.canvas.height=c,ol.drawImage(a,0,0,u,c),a=ol.canvas);const p=n.makeTensorInfo(l,"int32");n.texData.get(p.dataId).usage=M.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),a);const h=Object(C["env"])().getBool("WEBGL_PACK")?new rl(d):new nl(d),f=n.runWebGLProgram(h,[p],"int32");return n.disposeData(p.dataId),f}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function il(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:o,bias:s,preluActivationWeights:i}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r,m=C["backend_util"].convertConv2DDataFormat(l),b=C["backend_util"].computeConv2DInfo(a.shape,o.shape,u,d,c,p,!1,m);let g;const y=[];if(1!==b.filterHeight||1!==b.filterWidth||1!==b.dilationHeight||1!==b.dilationWidth||1!==b.strideHeight||1!==b.strideWidth||"SAME"!==b.padInfo.type&&"VALID"!==b.padInfo.type)if(Object(C["env"])().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])g=gu({x:a,filter:o,convInfo:b,backend:n,bias:s,activation:h,preluActivationWeights:i,leakyreluAlpha:f});else{const e=null!=s,t=null!=i,r="leakyrelu"===h,u=h?Go(h,!1):null,c=new hu(b,e,u,t,r),l=[a,o];if(s&&l.push(s),i&&l.push(i),r){const e=n.makeTensorInfo([],"float32",C["util"].createScalarValue(f,"float32"));l.push(e),y.push(e)}g=n.runWebGLProgram(c,l,"float32")}else g=bu({x:a,filter:o,convInfo:b,backend:n,bias:s,activation:h,preluActivationWeights:i,leakyreluAlpha:f});const x=Jo({inputs:{x:g},backend:n,attrs:{shape:b.outShape}});return y.push(g),y.forEach(e=>n.disposeIntermediateTensorInfo(e)),x}const ul={kernelName:C["FusedConv2D"],backendName:"webgl",kernelFunc:il};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cl(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:o,bias:s,preluActivationWeights:i}=t,{strides:u,pad:c,dilations:l,dimRoundingMode:d,activation:p,leakyreluAlpha:h}=r,f=[];let m=l;null==m&&(m=[1,1]),C["util"].assert(C["backend_util"].eitherStridesOrDilationsAreOne(u,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`);const b=C["backend_util"].computeConv2DInfo(a.shape,o.shape,u,m,c,d,!0),g=Object(C["env"])().getBool("WEBGL_PACK_DEPTHWISECONV")&&b.strideWidth<=2&&b.outChannels/b.inChannels===1,y=p?Go(p,g):null,x=[a,o],v=null!=s,O=null!=i,w="leakyrelu"===p;if(v&&x.push(s),O&&x.push(i),w){const e=n.makeTensorInfo([],"float32",C["util"].createScalarValue(h,"float32"));x.push(e),f.push(e)}let k;k=g?new ec(b,v,y,O,w):new Ju(b,v,y,O,w);const j=n.runWebGLProgram(k,x,"float32");return f.forEach(e=>n.disposeIntermediateTensorInfo(e)),j}const ll={kernelName:C["FusedDepthwiseConv2D"],backendName:"webgl",kernelFunc:cl};class dl{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=dn(t.length),a=dn(n.length),o=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${o};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pl(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,o=a.shape,s=o[o.length-1],i=C["util"].sizeFromShape(r.shape),[u,c,l,d]=C["backend_util"].prepareAndValidate(r,a),p=Jo({inputs:{x:a},backend:n,attrs:{shape:[c,s]}}),h=Jo({inputs:{x:r},backend:n,attrs:{shape:[C["util"].sizeFromShape(r.shape)/l,l]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){const e=n.readSync(a.dataId),t=n.bufferSync(r),o=ra(e,t,r.dtype,c,s,l,d,r.shape,i);return n.makeTensorInfo(u,r.dtype,o.values)}const f=new dl(s,d,[c,l]),m=n.runWebGLProgram(f,[h,p],h.dtype),b=Jo({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),b}const hl={kernelName:C["GatherNd"],backendName:"webgl",kernelFunc:pl};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fl{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=dn(this.rank),r=ml(e,2);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}function ml(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let a=0;a<e.length;a++)2===a?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(""+n[a]);return r.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bl(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:o}=t,{axis:s,batchDims:i}=r,u=C["util"].parseAxisParam(s,a.shape)[0],c=C["backend_util"].segment_util.collectGatherOpShapeInfo(a,o,u,i),l=C["util"].sizeFromShape(o.shape),d=[],p=Jo({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),h=Jo({inputs:{x:o},backend:n,attrs:{shape:[c.batchSize,l/c.batchSize]}});d.push(p),d.push(h);const f=[c.batchSize,c.outerSize,l/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([a,o])||"string"===a.dtype){const e=n.bufferSync(h),t=n.bufferSync(p),r=aa(t,e,f);return d.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(c.outputShape,r.dtype,r.values)}const m=new fl(p.shape,f),b=n.runWebGLProgram(m,[p,h],p.dtype);d.push(b);const g=Jo({inputs:{x:b},backend:n,attrs:{shape:c.outputShape}});return d.forEach(e=>n.disposeIntermediateTensorInfo(e)),g}const gl={kernelName:C["GatherV2"],backendName:"webgl",kernelFunc:bl},yl="return float(a > b);",xl="\n  return vec4(greaterThan(a, b));\n",vl=Uo({opSnippet:yl,packedOpSnippet:xl,cpuKernelImpl:oa,dtype:"bool"}),Ol={kernelName:C["Greater"],backendName:"webgl",kernelFunc:vl},wl="return float(a >= b);",kl="\n  return vec4(greaterThanEqual(a, b));\n",jl=Uo({opSnippet:wl,packedOpSnippet:kl,dtype:"bool",cpuKernelImpl:sa}),Sl={kernelName:C["GreaterEqual"],backendName:"webgl",kernelFunc:jl};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Tl(e){const{inputs:t,backend:n}=e,{input:r}=t;return Vc(r,!0,n)}const Il={kernelName:C["IFFT"],backendName:"webgl",kernelFunc:Tl},Nl="return float(!isnan(x) && !isinf(x));",Cl=Wo({opSnippet:Nl,dtype:"bool"}),$l={kernelName:C["IsFinite"],backendName:"webgl",kernelFunc:Cl},El="return float(isinf(x));",Al=Wo({opSnippet:El,dtype:"bool"}),Rl={kernelName:C["IsInf"],backendName:"webgl",kernelFunc:Al},_l="return float(isnan(x));",Fl=Wo({opSnippet:_l,dtype:"bool"}),Dl={kernelName:C["IsNan"],backendName:"webgl",kernelFunc:Fl},Ml="return float(a < b);",Pl="\n  return vec4(lessThan(a, b));\n",Ll=Uo({opSnippet:Ml,packedOpSnippet:Pl,cpuKernelImpl:ia,dtype:"bool"}),Bl={kernelName:C["Less"],backendName:"webgl",kernelFunc:Ll},Vl="return float(a <= b);",zl="\n  return vec4(lessThanEqual(a, b));\n",Wl=Uo({opSnippet:Vl,packedOpSnippet:zl,cpuKernelImpl:ua,dtype:"bool"}),Ul={kernelName:C["LessEqual"],backendName:"webgl",kernelFunc:Wl};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Gl(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:o}=n,s=ca(r,a,o);return t.makeTensorInfo([s.length],"float32",s)}const Hl={kernelName:C["LinSpace"],backendName:"webgl",kernelFunc:Gl},ql="if (x < 0.0) return NAN;\n  return log(x);",Kl="\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",Xl=Wo({opSnippet:ql,packedOpSnippet:Kl,cpuKernelImpl:la}),Yl={kernelName:C["Log"],backendName:"webgl",kernelFunc:Xl},Ql="return log(1.0 + x);",Zl=Wo({opSnippet:Ql}),Jl={kernelName:C["Log1p"],backendName:"webgl",kernelFunc:Zl},ed="return float(a >= 1.0 && b >= 1.0);",td="\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",nd=Uo({opSnippet:ed,packedOpSnippet:td,dtype:"bool"}),rd={kernelName:C["LogicalAnd"],backendName:"webgl",kernelFunc:nd},ad="return float(!(x >= 1.0));",od=Wo({opSnippet:ad}),sd={kernelName:C["LogicalNot"],backendName:"webgl",kernelFunc:od},id="return float(a >= 1.0 || b >= 1.0);",ud="\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",cd=Uo({opSnippet:id,packedOpSnippet:ud,dtype:"bool"}),ld={kernelName:C["LogicalOr"],backendName:"webgl",kernelFunc:cd};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class dd{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const o=t,s=e[3]-1;let i;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;i=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${o}; j <= ${o}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${s}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${i};\n        setOutput(val);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pd{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const o=t,s=e[3]-1;let i;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;i=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${o};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${o}; j <= ${o}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${s}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${i};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hd=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:o,bias:s,alpha:i,beta:u}=r,c=Object(C["env"])().getBool("WEBGL_PACK_NORMALIZATION")?new pd(a.shape,o,s,i,u):new dd(a.shape,o,s,i,u);return n.runWebGLProgram(c,[a],a.dtype)},fd={kernelName:C["LRN"],backendName:"webgl",kernelFunc:hd};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class md{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bd=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:o,dy:s}=t,{depthRadius:i,bias:u,alpha:c,beta:l}=r,d=new md(a.shape,i,u,c,l);return n.runWebGLProgram(d,[a,o,s],a.dtype)},gd={kernelName:C["LRNGrad"],backendName:"webgl",kernelFunc:bd};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yd(e,t,n,r){const a=C["util"].sizeFromShape(t),o=C["util"].sizeFromShape(e.shape),s=o/a,i=Jo({inputs:{x:e},attrs:{shape:[s,a]},backend:r}),u=as(i,e.dtype,"max",r),c=Jo({inputs:{x:u},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(u),c}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xd(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:o,keepDims:s}=r,i=a.shape.length,u=C["util"].parseAxisParam(o,a.shape);let c=u;const l=C["backend_util"].getAxesPermutation(c,i),d=null!=l,p=n.shouldExecuteOnCPU([a]);let h=a;if(d){if(p){const e=n.texData.get(h.dataId),t=e.values,r=new Array(i);for(let n=0;n<r.length;n++)r[n]=a.shape[l[n]];const o=Aa(t,a.shape,a.dtype,l,r);h=n.makeTensorInfo(r,a.dtype);const s=n.texData.get(h.dataId);s.values=o}else h=us(a,l,n);c=C["backend_util"].getInnerMostAxes(c.length,i)}C["backend_util"].assertAxesAreInnerMostDims("max",c,i);const[f,m]=C["backend_util"].computeOutAndReduceShapes(h.shape,c);let b,g=f;if(s&&(g=C["backend_util"].expandShapeToKeepDim(f,u)),p){const e=n.texData.get(h.dataId),t=e.values,r=da(t,C["util"].sizeFromShape(m),g,a.dtype);b=n.makeTensorInfo(g,a.dtype);const o=n.texData.get(b.dataId);o.values=r}else b=yd(h,m,g,n);return d&&n.disposeIntermediateTensorInfo(h),b}const vd={kernelName:C["Max"],backendName:"webgl",kernelFunc:xd},Od=jo+"\n  return max(a, b);\n",wd="\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+To+"\n  return result;\n",kd=Uo({opSnippet:Od,packedOpSnippet:wd,cpuKernelImpl:pa}),jd={kernelName:C["Maximum"],backendName:"webgl",kernelFunc:kd};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Sd(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;Le(a,"maxPool");const{filterSize:o,strides:s,pad:i,dimRoundingMode:u}=r,c=1;C["util"].assert(C["backend_util"].eitherStridesOrDilationsAreOne(s,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${c}'`);const l=C["backend_util"].computePool2DInfo(a.shape,o,s,c,i,u);if(1===l.filterWidth&&1===l.filterHeight&&C["util"].arraysEqual(l.inShape,l.outShape))return No({inputs:{x:a},backend:n});const d=new ci(l,"max",!1);return n.runWebGLProgram(d,[a],a.dtype)}const Td={kernelName:C["MaxPool"],backendName:"webgl",kernelFunc:Sd};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Id(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:o,strides:s,pad:i,dataFormat:u,dimRoundingMode:c}=r,l=[1,1,1],d=C["backend_util"].computePool3DInfo(a.shape,o,s,l,i,c,u),p=new li(d,"max",!1);return n.runWebGLProgram(p,[a],a.dtype)}const Nd={kernelName:C["MaxPool3D"],backendName:"webgl",kernelFunc:Id};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cd{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,o=e.effectiveFilterWidth,s=a-1-e.padInfo.top,i=o-1-e.padInfo.left,u=a*o-1;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${o}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${o} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class $d{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,o=e.dilationHeight,s=e.dilationWidth,i=e.effectiveFilterDepth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,l=i-1-e.padInfo.front,d=u-1-e.padInfo.top,p=c-1-e.padInfo.left,h=i*u*c-1;this.userCode=`\n      const ivec3 pads = ivec3(${l}, ${d}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${i};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${o}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${c};\n                wC += ${s}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${h} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${c} +\n                  wR * ${c} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ed(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:o}=t,s=o,{filterSize:i,strides:u,pad:c,dimRoundingMode:l}=r,d=[1,1,1],p=C["backend_util"].computePool3DInfo(s.shape,i,u,d,c,l),h=new li(p,"max",!0),f=n.runWebGLProgram(h,[s],s.dtype),m=new $d(p),b=n.runWebGLProgram(m,[a,f],s.dtype);return n.disposeIntermediateTensorInfo(f),b}const Ad={kernelName:C["MaxPool3DGrad"],backendName:"webgl",kernelFunc:Ed};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rd(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:o,output:s}=t,i=o;Le([o,s],"maxPoolGrad");const{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=r,p=C["backend_util"].computePool2DInfo(i.shape,u,c,1,l,d),h=!0,f=new ci(p,"max",h),m=n.runWebGLProgram(f,[i],i.dtype),b=new Cd(p),g=n.runWebGLProgram(b,[a,m],i.dtype);return n.disposeIntermediateTensorInfo(m),g}const _d={kernelName:C["MaxPoolGrad"],backendName:"webgl",kernelFunc:Rd};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fd(e,t,n,r){let a=new ci(n,"max",!1);const o=r.runWebGLProgram(a,[e],"float32");a=new ci(n,"max",!0,!0,t);const s=r.runWebGLProgram(a,[e],"float32");return[o,s]}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dd={kernelName:C["MaxPoolWithArgmax"],backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:o,pad:s,includeBatchInIndex:i}=t,u=n;C["util"].assert(4===r.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const c=[1,1];C["util"].assert(C["backend_util"].eitherStridesOrDilationsAreOne(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const l=C["backend_util"].computePool2DInfo(r.shape,a,o,c,s),[d,p]=Fd(r,i,l,u);return[d,p]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Md(e,t,n,r){const a=C["util"].sizeFromShape(t),o=C["util"].sizeFromShape(e.shape),s=o/a,i=Jo({inputs:{x:e},attrs:{shape:[s,a]},backend:r}),u=as(i,"float32","mean",r),c=Jo({inputs:{x:u},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(u),c}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pd={kernelName:C["Mean"],backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:a,axis:o}=t,s=n,i=r.shape.length,u=C["util"].parseAxisParam(o,r.shape);let c=u;const l=C["backend_util"].getAxesPermutation(c,i),d=null!=l,p=s.shouldExecuteOnCPU([r]),h=[];let f=r;if(d){if(p){const e=s.texData.get(f.dataId),t=e.values,n=new Array(i);for(let s=0;s<n.length;s++)n[s]=r.shape[l[s]];const a=Aa(t,r.shape,r.dtype,l,n);f=s.makeTensorInfo(n,r.dtype);const o=s.texData.get(f.dataId);o.values=a}else f=us(r,l,s);h.push(f),c=C["backend_util"].getInnerMostAxes(c.length,i)}C["backend_util"].assertAxesAreInnerMostDims("sum",c,i);const[m,b]=C["backend_util"].computeOutAndReduceShapes(f.shape,c);let g=m;a&&(g=C["backend_util"].expandShapeToKeepDim(m,u));const y=Md(f,b,g,s);for(const x of h)s.disposeIntermediateTensorInfo(x);return y}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ld(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o,keepDims:s}=r,i=a.shape.length,u=C["util"].parseAxisParam(o,a.shape);let c=u;const l=C["backend_util"].getAxesPermutation(c,i);let d=a;null!=l&&(d=ps({inputs:{x:a},backend:n,attrs:{perm:l}}),c=C["backend_util"].getInnerMostAxes(c.length,a.shape.length)),C["backend_util"].assertAxesAreInnerMostDims("min",c,i);const[p,h]=C["backend_util"].computeOutAndReduceShapes(d.shape,c),f=C["util"].sizeFromShape(h),m=Jo({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),b=as(m,m.dtype,"min",n);let g;if(s){const e=C["backend_util"].expandShapeToKeepDim(p,u);g=Jo({inputs:{x:b},backend:n,attrs:{shape:e}})}else g=Jo({inputs:{x:b},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),null!=l&&n.disposeIntermediateTensorInfo(d),g}const Bd={kernelName:C["Min"],backendName:"webgl",kernelFunc:Ld},Vd=jo+"\n  return min(a, b);\n",zd="\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+To+"\n  return result;\n",Wd=Uo({opSnippet:Vd,packedOpSnippet:zd,cpuKernelImpl:ha}),Ud={kernelName:C["Minimum"],backendName:"webgl",kernelFunc:Wd};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Gd{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=dn(r),o=t.map(e=>e[0]).join(","),s=t.map((t,n)=>t[0]+e[n]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${o});\n      ${a} end = ${a}(${s});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${i}));\n      }\n    `:`\n        int start = ${o};\n        int end = ${s};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hd{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=dn(r),o=t.map(e=>e[0]).join(","),s=t.map((t,n)=>t[0]+e[n]).join(","),i=Fa("rc",r),u=Fa("source",r),c=`${i[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${u.slice(-2).join()})`,d="reflect"===n?0:1;let p="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${d};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${d};\n        }\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${l});\n        ${i[r-1]} += 1;\n        if(${c}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${l});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${d}) +\n                gte * ((end - 1) * 2 - source + ${d});\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${l});\n        ${i[r-1]} += 1;\n        if(${c}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${l});\n        }\n        rc = outputLoc;\n        ${i[r-2]} += 1;\n        if(${i[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${l});\n          ${i[r-1]} += 1;\n          if(${c}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${l});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${o});\n      const ${a} end = ${a}(${s});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qd=({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:a,mode:o}=n,s=Object(C["env"])().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Hd(r.shape,a,o):new Gd(r.shape,a,o),i=t.runWebGLProgram(s,[r],r.dtype);return i},Kd={kernelName:C["MirrorPad"],backendName:"webgl",kernelFunc:qd},Xd="if (b == 0.0) return NAN;\n  return mod(a, b);",Yd="\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  "+To+"\n  return result;\n",Qd=Uo({opSnippet:Xd,packedOpSnippet:Yd}),Zd={kernelName:C["Mod"],backendName:"webgl",kernelFunc:Qd};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Jd{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ep="\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",tp="\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",np=Uo({opSnippet:ep,packedOpSnippet:tp,checkOutOfBounds:!0}),rp={kernelName:C["RealDiv"],backendName:"webgl",kernelFunc:np},ap="return a - b;",op=Uo({opSnippet:ap,packedOpSnippet:ap,supportsComplex:!0,cpuKernelImpl:Ca}),sp={kernelName:C["Sub"],backendName:"webgl",kernelFunc:op};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ip(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:o}=r,s=C["util"].parseAxisParam([o],a.shape),i=xd({inputs:{x:a},backend:n,attrs:{reductionIndices:s,keepDims:!1}}),u=C["backend_util"].expandShapeToKeepDim(i.shape,s),c=Jo({inputs:{x:i},backend:n,attrs:{shape:u}}),l=op({inputs:{a:a,b:c},backend:n}),d=Rc({inputs:{x:l},backend:n}),p=ls({inputs:{x:d},backend:n,attrs:{axis:s,keepDims:!1}}),h=Jo({inputs:{x:p},backend:n,attrs:{shape:u}}),f=np({inputs:{a:d,b:h},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),f}const up={kernelName:C["Softmax"],backendName:"webgl",kernelFunc:ip};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cp(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:o,seed:s,normalized:i}=r,u=i?a:ip({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),c=u.shape[0],l=u.shape[1],d=new Jd(c,l,o),p=[[s]],h=n.runWebGLProgram(d,[u],"int32",p);return i||n.disposeIntermediateTensorInfo(u),h}const lp={kernelName:C["Multinomial"],backendName:"webgl",kernelFunc:cp},dp="return -x;";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pp(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,a]=ma(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}let a;return a=Object(C["env"])().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new po(r.shape,dp):new Qa(r.shape,dp),n.runWebGLProgram(a,[r],r.dtype)}const hp={kernelName:C["Neg"],backendName:"webgl",kernelFunc:pp},fp=C["kernel_impls"].nonMaxSuppressionV3Impl;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mp(e){C["backend_util"].warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:o}=t,{maxOutputSize:s,iouThreshold:i,scoreThreshold:u}=r,c=n.readSync(a.dataId),l=n.readSync(o.dataId),{selectedIndices:d}=fp(c,l,s,i,u);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}const bp={kernelName:C["NonMaxSuppressionV3"],backendName:"webgl",kernelFunc:mp},gp=C["kernel_impls"].nonMaxSuppressionV4Impl;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yp(e){C["backend_util"].warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:o}=t,{maxOutputSize:s,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:c}=r,l=n.readSync(a.dataId),d=n.readSync(o.dataId),{selectedIndices:p,validOutputs:h}=gp(l,d,s,i,u,c);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}const xp={kernelName:C["NonMaxSuppressionV4"],backendName:"webgl",kernelFunc:yp},vp=C["kernel_impls"].nonMaxSuppressionV5Impl;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Op(e){C["backend_util"].warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:o}=t,{maxOutputSize:s,iouThreshold:i,scoreThreshold:u,softNmsSigma:c}=r,l=n.readSync(a.dataId),d=n.readSync(o.dataId),p=s,h=i,f=u,m=c,{selectedIndices:b,selectedScores:g}=vp(l,d,p,h,f,m);return[n.makeTensorInfo([b.length],"int32",new Int32Array(b)),n.makeTensorInfo([g.length],"float32",new Float32Array(g))]}const wp={kernelName:C["NonMaxSuppressionV5"],backendName:"webgl",kernelFunc:Op};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kp{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jp=e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:o,onValue:s,offValue:i}=r,u=C["util"].sizeFromShape(a.shape),c=new kp(u,o,s,i),l=Jo({inputs:{x:a},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(c,[l],a.dtype);n.disposeIntermediateTensorInfo(l);const p=[...a.shape,o],h=Jo({inputs:{x:d},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(d),h},Sp={kernelName:C["OneHot"],backendName:"webgl",kernelFunc:jp};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Tp(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=Vi({inputs:{input:r},backend:n}),t=Tp({inputs:{x:e},backend:n}),a=iu({inputs:{input:r},backend:n}),o=Tp({inputs:{x:a},backend:n}),s=$o({inputs:{real:t,imag:o},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),s}return Gc({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const Ip={kernelName:C["ZerosLike"],backendName:"webgl",kernelFunc:Tp};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Np(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const e=Vi({inputs:{input:r},backend:n}),t=Np({inputs:{x:e},backend:n}),a=iu({inputs:{input:r},backend:n}),o=Tp({inputs:{x:a},backend:n}),s=$o({inputs:{real:t,imag:o},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),s}return Gc({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:n})}const Cp={kernelName:C["OnesLike"],backendName:"webgl",kernelFunc:Np};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $p(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return Fc({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const o=t[0].shape,s=t[0].dtype;t.forEach(e=>{C["util"].assertShapesMatch(o,e.shape,"All tensors passed to stack must have matching shapes"),C["util"].assert(s===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],u=t.map(e=>{const t=Fc({inputs:{input:e},backend:n,attrs:{dim:a}});return i.push(t),t}),c=du({inputs:u,backend:n,attrs:{axis:a}});return i.forEach(e=>n.disposeIntermediateTensorInfo(e)),c}const Ep={kernelName:C["Pack"],backendName:"webgl",kernelFunc:$p};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ap{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=dn(r),o=t.map(e=>e[0]).join(","),s=t.map((t,n)=>t[0]+e[n]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${o});\n      ${a} end = ${a}(${s});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${i}));\n        }\n      }\n    `:`\n        int start = ${o};\n        int end = ${s};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rp{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=dn(r),o=t.map(e=>e[0]).join(","),s=t.map((t,n)=>t[0]+e[n]).join(","),i=Fa("rc",r),u=Fa("source",r),c=`${i[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${u.slice(-2).join()})`,d=[a+" rc = outputLoc;",`${i[r-1]} += 1;\n       if(${c}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${i[r-2]} += 1;\n       if(${i[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${i[r-1]} += 1;\n         if(${c}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let h="";for(let f=0,m=1===r?2:4;f<m;f++)h+=`\n        ${d[f]}\n        if (${p}) {\n          result[${f}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${f}] = getChannel(getX(${u.join()}), ${l});\n        }\n      `;h+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${o});\n      const ${a} end = ${a}(${s});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _p=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:o,constantValue:s}=r,i=Object(C["env"])().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Rp(a.shape,o,s):new Ap(a.shape,o,s),u=[[s]];return n.runWebGLProgram(i,[a],a.dtype,u)},Fp={kernelName:C["PadV2"],backendName:"webgl",kernelFunc:_p},Dp="\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",Mp="\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  "+To+"\n  return result;\n",Pp=Uo({opSnippet:Dp,packedOpSnippet:Mp}),Lp={kernelName:C["Pow"],backendName:"webgl",kernelFunc:Pp};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Bp(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o,keepDims:s}=r,i=a.shape.length,u=[],c=C["util"].parseAxisParam(o,a.shape);let l=c;const d=C["backend_util"].getAxesPermutation(l,i);let p,h=a;if(null!=d&&(h=ps({inputs:{x:a},backend:n,attrs:{perm:d}}),l=C["backend_util"].getInnerMostAxes(l.length,i),u.push(h)),C["backend_util"].assertAxesAreInnerMostDims("prod",l,i),n.shouldExecuteOnCPU([h])){const e=n.texData.get(h.dataId).values,{outVals:t,outShape:r,outDtype:a}=ga(h.shape,h.dtype,e,l);p=n.makeTensorInfo(r,a,t)}else{const[e,t]=C["backend_util"].computeOutAndReduceShapes(h.shape,l),r=C["util"].sizeFromShape(t),o=Jo({inputs:{x:h},backend:n,attrs:{shape:[-1,r]}}),s=Object(C["sumOutType"])(a.dtype),i=as(o,s,"prod",n);p=Jo({inputs:{x:i},backend:n,attrs:{shape:e}}),u.push(o),u.push(i)}if(s){u.push(p);const e=C["backend_util"].expandShapeToKeepDim(p.shape,c);p=Jo({inputs:{x:p},backend:n,attrs:{shape:e}})}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),p}const Vp={kernelName:C["Prod"],backendName:"webgl",kernelFunc:Bp},zp=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:o,dtype:s}=n,i=ya(r,a,o,s);return t.makeTensorInfo([i.length],s,i)},Wp={kernelName:C["Range"],backendName:"webgl",kernelFunc:zp},Up="return 1.0 / x;",Gp=Wo({opSnippet:Up}),Hp={kernelName:C["Reciprocal"],backendName:"webgl",kernelFunc:Gp},qp=Za+"\n  return (x < 0.0) ? 0.0 : x;\n",Kp="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Xp=Wo({opSnippet:qp,packedOpSnippet:Kp}),Yp={kernelName:C["Relu"],backendName:"webgl",kernelFunc:Xp},Qp=Za+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",Zp="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Jp=Wo({opSnippet:Qp,packedOpSnippet:Zp}),eh={kernelName:C["Relu6"],backendName:"webgl",kernelFunc:Jp};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class th{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[o,s,i,u]=e;this.outputShape=[o,t,n,u];const c=[r&&t>1?s-1:s,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${s}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nh{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,s,i,u]=e;this.outputShape=[o,t,n,u];const c=[r&&t>1?s-1:s,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]},\n          ${c[1]/l[1]});\n      const vec3 inputShapeRC = vec3(${s}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rh(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:o,halfPixelCenters:s,size:i}=r,[u,c]=i,l=Object(C["env"])().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new nh(a.shape,u,c,o,s):new th(a.shape,u,c,o,s);return n.runWebGLProgram(l,[a],"float32")}const ah={kernelName:C["ResizeBilinear"],backendName:"webgl",kernelFunc:rh};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oh{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,o,s]=e,i=[n&&o>1?r-1:r,n&&s>1?a-1:a],u=[n&&o>1?o-1:o,n&&s>1?s-1:s],c=i[0]/u[0],l=i[1]/u[1],d=1/c,p=1/l,h=2*Math.ceil(d)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${o}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${s}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sh(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:o}=t,{alignCorners:s}=r,i=new oh(o.shape,a.shape,s);return n.runWebGLProgram(i,[o],o.dtype)}const ih={kernelName:C["ResizeBilinearGrad"],backendName:"webgl",kernelFunc:sh};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uh{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[o,s,i,u]=e;this.outputShape=[o,t,n,u];const c=[r&&t>1?s-1:s,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let p;p=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${s}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ch{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,s,i,u]=e;this.outputShape=[o,t,n,u];const c=[r&&t>1?s-1:s,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let p;p=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]},\n          ${c[1]/l[1]});\n      const vec3 inputShapeRC = vec3(${s}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lh(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:o,halfPixelCenters:s,size:i}=r,[u,c]=i,l=Object(C["env"])().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new ch(a.shape,u,c,o,s):new uh(a.shape,u,c,o,s);return n.runWebGLProgram(l,[a],a.dtype)}const dh={kernelName:C["ResizeNearestNeighbor"],backendName:"webgl",kernelFunc:lh};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ph{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,o,s]=e,i=[n&&o>1?r-1:r,n&&s>1?a-1:a],u=[n&&o>1?o-1:o,n&&s>1?s-1:s],c=i[0]/u[0],l=i[1]/u[1],d=1/c,p=1/l,h=2*Math.ceil(d)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${o}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${s}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${i[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${i[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hh(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:o}=t,{alignCorners:s}=r,i=new ph(o.shape,a.shape,s);return n.runWebGLProgram(i,[o],o.dtype)}const fh={kernelName:C["ResizeNearestNeighborGrad"],backendName:"webgl",kernelFunc:hh};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mh{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`,a=e.map((e,t)=>r(t)).join(","),o=dn(n);this.userCode=`\n      void main() {\n        ${o} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bh{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=Fa("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,o=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,s=dn(n);function i(e){return d(e)}function u(e){return e[n-1]="("+e[n-1]+" + 1)",d(e)}function c(e){return e[n-2]="("+e[n-2]+" + 1)",d(e)}function l(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",d(e)}function d(t){const n=e.map((e,n)=>p(n,t)),r=n.join(","),a=n.slice(-2).join(",");return`getChannel(getX(${r}), vec2(${a}))`}function p(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:""+r[n]}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${s} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${i(r.slice())};\n          if(${a}){\n            result.g = ${u(r.slice())};\n          }\n          if(${o}) {\n            result.b = ${c(r.slice())};\n            if(${a}) {\n              result.a = ${l(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gh(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:o}=r,s=a.shape.length,i=C["util"].parseAxisParam(o,a.shape);if(0===s)return No({inputs:{x:a},backend:n});const u=Object(C["env"])().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new bh(a.shape,i):new mh(a.shape,i);return n.runWebGLProgram(u,[a],a.dtype)}const yh={kernelName:C["Reverse"],backendName:"webgl",kernelFunc:gh};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xh{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let a="";a="number"===typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vh={kernelName:C["RotateWithOffset"],backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:o,center:s}=t,i=n,u=new xh(r.shape,o),[c,l]=C["backend_util"].getImageCenter(s,r.shape[1],r.shape[2]),d=[[c,l,Math.sin(a),Math.cos(a)]],p=i.runWebGLProgram(u,[r],r.dtype,d);return p}},Oh="\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n",wh=Wo({opSnippet:Oh}),kh={kernelName:C["Round"],backendName:"webgl",kernelFunc:wh},jh="return inversesqrt(x);",Sh=Wo({opSnippet:jh,cpuKernelImpl:xa}),Th={kernelName:C["Rsqrt"],backendName:"webgl",kernelFunc:Sh};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Ih{constructor(e,t,n,r,a,o,s=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=o;const i=dn(a.length),u=dn(o.length);let c="";1===n?c="i":2===n&&(c="i, j");const l=`getIndices(${c})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const p=`getUpdates(${d})`,h=t>1?"strides[j]":"strides";this.userCode=`\n        ${i} strides = ${i}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${l});\n              flattenedIndex += index * ${h};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nh(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:o}=t,{shape:s}=r,{sliceRank:i,numUpdates:u,sliceSize:c,strides:l,outputSize:d}=C["backend_util"].calculateShapes(o,a,s),p=[d/c,c];if(0===d)return n.makeTensorInfo(s,a.dtype);const h=Jo({inputs:{x:a},backend:n,attrs:{shape:[u,i]}}),f=Jo({inputs:{x:o},backend:n,attrs:{shape:[u,c]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),b=new Ih(u,i,h.shape.length,f.shape.length,l,p),g=n.runWebGLProgram(b,[f,h,m],f.dtype),y=Jo({inputs:{x:g},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(m),y}const Ch={kernelName:C["ScatterNd"],backendName:"webgl",kernelFunc:Nh};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $h{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[],s=[];for(let r=0;r<t.length;r++)s.push(""+n[r]),r<e&&o.push(""+n[r]);r=o.join(),a=s.join()}const o=dn(n);this.userCode=`\n      void main() {\n        ${o} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eh(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:o}=t,s=new $h(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(s,[r,a,o],Object(C["upcastType"])(a.dtype,o.dtype))}const Ah={kernelName:C["Select"],backendName:"webgl",kernelFunc:Eh},Rh=`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${C["backend_util"].SELU_SCALEALPHA};\n  float scale = ${C["backend_util"].SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`,_h=Wo({opSnippet:Rh}),Fh={kernelName:C["Selu"],backendName:"webgl",kernelFunc:_h},Dh="return 1.0 / (1.0 + exp(-1.0 * x));",Mh=Wo({opSnippet:Dh}),Ph={kernelName:C["Sigmoid"],backendName:"webgl",kernelFunc:Mh},Lh="\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n",Bh=Wo({opSnippet:Lh}),Vh={kernelName:C["Sign"],backendName:"webgl",kernelFunc:Bh},zh=Bo+"\n  return sin(x);\n",Wh=Wo({opSnippet:zh}),Uh={kernelName:C["Sin"],backendName:"webgl",kernelFunc:Wh},Gh="\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n",Hh=Wo({opSnippet:Gh}),qh={kernelName:C["Sinh"],backendName:"webgl",kernelFunc:Hh},Kh="\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n",Xh=Wo({opSnippet:Kh}),Yh={kernelName:C["Softplus"],backendName:"webgl",kernelFunc:Xh},Qh=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:o,paddings:s}=r;C["util"].assert(a.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const i=o.reduce((e,t)=>e*t),u=[[0,0]];u.push(...s);for(let g=1+o.length;g<a.shape.length;++g)u.push([0,0]);const c=[],l=_p({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),d=C["backend_util"].getReshaped(l.shape,o,i,!1),p=C["backend_util"].getPermuted(d.length,o.length,!1),h=C["backend_util"].getReshapedPermuted(l.shape,o,i,!1),f=Jo({inputs:{x:l},backend:n,attrs:{shape:d}}),m=ps({inputs:{x:f},backend:n,attrs:{perm:p}}),b=Jo({inputs:{x:m},backend:n,attrs:{shape:h}});return c.push(l),c.push(f),c.push(m),c.forEach(e=>n.disposeIntermediateTensorInfo(e)),b},Zh={kernelName:C["SpaceToBatchND"],backendName:"webgl",kernelFunc:Qh};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Jh(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:o,defaultValue:s}=t;if(1!==o.shape.length)throw new Error("Dense shape must be a vector, saw:\n         "+o.shape);if(2!==r.shape.length)throw new Error("Indices must be a matrix, saw:\n         "+r.shape);if(1!==a.shape.length)throw new Error("Values must be a vector, saw:\n         "+a.shape);if(0!==s.shape.length)throw new Error("Default value must be a scalar, saw:\n        "+s.shape);const i=n.readSync(r.dataId),u=n.readSync(a.dataId),c=n.readSync(o.dataId),l=n.readSync(s.dataId)[0],[d,p,h,f,m]=wa(i,r.shape,r.dtype,u,a.dtype,c,l);return[n.makeTensorInfo(p,r.dtype,d),n.makeTensorInfo([p[0]],a.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(e=>Number(e)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}const ef={kernelName:C["SparseFillEmptyRows"],backendName:"webgl",kernelFunc:Jh};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tf(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:o}=t;if(2!==r.shape.length)throw new Error("Input indices should be a matrix but received shape "+r.shape);if(1!==a.shape.length)throw new Error("Input shape should be a vector but received shape "+a.shape);if(1!==o.shape.length)throw new Error("Target shape should be a vector but received shape "+o.shape);const s=Array.from(n.readSync(a.dataId)),i=n.readSync(r.dataId),u=Array.from(n.readSync(o.dataId)),[c,l,d]=ka(i,r.shape,r.dtype,s,u);return[n.makeTensorInfo(l,r.dtype,c),n.makeTensorInfo([d.length],o.dtype,new Int32Array(d))]}const nf={kernelName:C["SparseReshape"],backendName:"webgl",kernelFunc:tf};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rf(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:o}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error("Indices should be a vector but received shape\n              "+a.shape);if(1!==o.shape.length)throw new Error("Segment ids should be a vector but received shape\n              "+o.shape);const s=n.readSync(r.dataId),i=n.readSync(a.dataId),u=n.readSync(o.dataId),[c,l]=ja(s,r.shape,r.dtype,i,u,!0);return n.makeTensorInfo(l,r.dtype,c)}const af={kernelName:C["SparseSegmentMean"],backendName:"webgl",kernelFunc:rf};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function of(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:o}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error("Indices should be a vector but received shape\n             "+a.shape);if(1!==o.shape.length)throw new Error("Segment ids should be a vector but received shape\n             "+o.shape);const s=n.readSync(r.dataId),i=n.readSync(a.dataId),u=n.readSync(o.dataId),[c,l]=ja(s,r.shape,r.dtype,i,u);return n.makeTensorInfo(l,r.dtype,c)}const sf={kernelName:C["SparseSegmentSum"],backendName:"webgl",kernelFunc:of};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uf(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:o,defaultValue:s}=t,{outputShape:i}=r,{sliceRank:u,numUpdates:c,strides:l,outputSize:d}=C["backend_util"].calculateShapes(o,a,i),p=!1,h=new Ih(c,u,a.shape.length,o.shape.length,l,[d,1],p),f=n.runWebGLProgram(h,[o,a,s],o.dtype),m=Jo({inputs:{x:f},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),m}const cf={kernelName:C["SparseToDense"],backendName:"webgl",kernelFunc:uf};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lf(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:o,axis:s}=r,i=C["util"].parseAxisParam(s,a.shape)[0],u=C["backend_util"].prepareSplitSize(a,o,i),c=a.shape.length,l=new Array(c).fill(0),d=a.shape.slice();return u.map(e=>{const t=[...d];t[i]=e;const r=Ai({inputs:{x:a},backend:n,attrs:{begin:l,size:t}});return l[i]+=e,r})}const df={kernelName:C["SplitV"],backendName:"webgl",kernelFunc:lf},pf="return sqrt(x);",hf=Wo({opSnippet:pf}),ff={kernelName:C["Sqrt"],backendName:"webgl",kernelFunc:hf},mf="return x * x;",bf=Wo({opSnippet:mf}),gf={kernelName:C["Square"],backendName:"webgl",kernelFunc:bf},yf="return (a - b) * (a - b);",xf=Uo({opSnippet:yf,packedOpSnippet:yf}),vf={kernelName:C["SquaredDifference"],backendName:"webgl",kernelFunc:xf};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Of({inputs:e,attrs:t,backend:n}){const{x:r}=e,a=Za+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,o=new Qa(r.shape,a);return n.runWebGLProgram(o,[r],r.dtype)}const wf={kernelName:C["Step"],backendName:"webgl",kernelFunc:Of};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kf{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=dn(n.length),o=dn(n.length);let s="";if(1===r)s="coords * strides + begin";else{let e=0;s=n.map((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`)).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${o} coords = getOutputCoords();\n        setOutput(getX(${s}));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jf(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:o,end:s,strides:i,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:p}=r,{nonStrided:h,$begin:f,$strides:m,size:b,newShape:g,outShape:y}=C["slice_util"].sliceInfo(a.shape,o,s,i,u,c,l,d,p),x=Jo({inputs:{x:a},backend:n,attrs:{shape:g}});let v;if(h){const e=Ai({inputs:{x:x},backend:n,attrs:{begin:f,size:b}});v=Jo({inputs:{x:e},backend:n,attrs:{shape:y}}),n.disposeIntermediateTensorInfo(e)}else if(y.some(e=>0===e))v=n.makeTensorInfo(y,a.dtype,[]);else{const e=n.shouldExecuteOnCPU([x]);if(e){const e=n.texData.get(x.dataId),t=e.values,r=Object(C["buffer"])(x.shape,x.dtype,t),a=Sa(y,r,m,f);v=n.makeTensorInfo(y,x.dtype,a.values)}else{const e=new kf(f,m,y);v=n.runWebGLProgram(e,[x],x.dtype)}}const O=Jo({inputs:{x:v},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),O}const Sf={kernelName:C["StridedSlice"],backendName:"webgl",kernelFunc:jf};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tf(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:o,leftPad:s,rightPad:i,padWidth:u,preserveShortSequences:c}=r,{data:l,dataSplits:d}=t,p=n.readSync(l.dataId),h=n.readSync(d.dataId),[f,m]=Ta(p,h,a,o,s,i,u,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}const If={kernelName:C["StringNGrams"],backendName:"webgl",kernelFunc:Tf};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nf(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:o,delimiter:s}=t;if("string"!==o.dtype)throw new Error("Input must be of datatype string");if(1!==o.shape.length)throw new Error("Input must be a vector, got shape: "+o.shape);if(0!==s.shape.length)throw new Error("Delimiter must be a scalar, got shape: "+s.shape);const i=n.readSync(o.dataId),u=n.readSync(s.dataId)[0],[c,l,d]=Ia(i,u,a),p=l.length;return[n.makeTensorInfo([p,2],"int32",c),n.makeTensorInfo([p],"string",l),n.makeTensorInfo([2],"int32",new Int32Array(d))]}const Cf={kernelName:C["StringSplit"],backendName:"webgl",kernelFunc:Nf};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $f(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:o}=t;if("string"!==o.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const s=n.readSync(o.dataId),i=Na(s,a);return n.makeTensorInfo(o.shape,"int32",i)}const Ef={kernelName:C["StringToHashBucketFast"],backendName:"webgl",kernelFunc:$f},Af="return tan(x);",Rf=Wo({opSnippet:Af}),_f={kernelName:C["Tan"],backendName:"webgl",kernelFunc:Rf},Ff="\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n",Df=Wo({opSnippet:Ff}),Mf={kernelName:C["Tanh"],backendName:"webgl",kernelFunc:Df};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Pf{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let o=0;o<n.length;o++)n[o]=e[o]*t[o];this.outputShape=n,this.rank=n.length;const r=dn(this.rank),a=Lf(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function Lf(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let a=0;a<e.length;a++)r.push(`imod(${n[a]}, ${e[a]})`);return r.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bf(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:o}=r;if("string"===a.dtype||a.shape.length>5){const e=n.readSync(a.dataId),t="string"===a.dtype?e.map(e=>C["util"].decodeString(e)):e,r=Object(C["buffer"])(a.shape,a.dtype,t),s=$a(r,o);return n.makeTensorInfo(s.shape,s.dtype,s.values)}const s=new Pf(a.shape,o),i=n.runWebGLProgram(s,[a],a.dtype);return i}const Vf={kernelName:C["Tile"],backendName:"webgl",kernelFunc:Bf};class zf{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class Wf{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uf(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function Gf(e){let t=1;while(t<e)t*=2;return t}function Hf(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:o,sorted:s}=r,i=Object(C["env"])().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=Object(C["env"])().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=a.shape,l=c[c.length-1];if(n.shouldExecuteOnCPU([a])||l<i||o>u){const e=n.readSync(a.dataId),[t,r]=Ea(e,c,a.dtype,o,s);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===o)return c[c.length-1]=0,[n.makeTensorInfo(c,a.dtype,[]),n.makeTensorInfo(c,"int32",[])];if(1===l)return[a,Gc({attrs:{shape:c,dtype:"int32",value:0},backend:n})];const d=n.texData.get(a.dataId),p=null!==d&&d.isPacked,h=p?n.unpackTensor(a):a,f=C["util"].sizeFromShape(c),m=f/l,b=Jo({inputs:{x:h},attrs:{shape:[m,l]},backend:n});p&&Uf(n,h);const g=Gf(o),y=Gf(l);let x=null;const v=()=>null===x?[b,b]:[b,x],O=(e,t,r)=>{const a=v(),o=new zf(r),s=null===x?1:0,i=[[l],[s],[Number.NEGATIVE_INFINITY],[e],[t]],u=x;x=n.runWebGLProgram(o,a,"int32",i),Uf(n,u)};for(let T=1;T<g;T*=2){const e=2*T;for(let t=T;t>=1;t/=2)O(e,t,[m,y])}for(let T=y;T>g;T/=2){const e=v(),t=new Wf([m,T/2]),r=null===x?1:0,a=[[l],[r],[g]],o=x;x=n.runWebGLProgram(t,e,"int32",a),Uf(n,o);const s=g/2,i=2*s;for(let n=s;n>=1;n/=2)O(i,n,x.shape)}let w=x;x=Ai({inputs:{x:x},backend:n,attrs:{begin:0,size:[m,o]}}),Uf(n,w);let k=bl({inputs:{x:b,indices:x},backend:n,attrs:{axis:1,batchDims:1}});Uf(n,b);const j=c.slice(0,-1);j.push(o),w=x,x=Jo({inputs:{x:x},attrs:{shape:j},backend:n}),Uf(n,w);const S=k;return k=Jo({inputs:{x:k},attrs:{shape:j},backend:n}),Uf(n,S),[k,x]}const qf={kernelName:C["TopK"],backendName:"webgl",kernelFunc:Hf};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kf{constructor(e,t,n,r,a,o){this.variableNames=["Image","Transforms"],this.outputShape=o;const s="nearest"===n?1:2;let i;switch(r){case"constant":i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4;break;default:i=1;break}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${i} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${s} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xf(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:o}=t,{interpolation:s,fillMode:i,fillValue:u,outputShape:c}=r,[l,d,p,h]=a.shape,[f,m]=null!=c?c:[d,p],b=[l,f,m,h],g=new Kf(d,p,s,i,u,b);return n.runWebGLProgram(g,[a,o],"float32")}const Yf={kernelName:C["Transform"],backendName:"webgl",kernelFunc:Xf};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qf(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:o}=t;Le(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const s=r.readSync(o.dataId),{outputValues:i,outputShape:u,indices:c}=Ra(s,a,o.shape,o.dtype);return[r.makeTensorInfo(u,o.dtype,i),r.makeTensorInfo([c.length],"int32",c)]}const Zf={kernelName:C["Unique"],backendName:"webgl",kernelFunc:Qf};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jf(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:o}=r;o<0&&(o+=a.shape.length);const s=a,i=s.shape.length,u=a.shape[o],c=new Array(i-1);let l=0;for(let m=0;m<i;m++)m!==o&&(c[l++]=s.shape[m]);const d=[],p=new Array(i).fill(0),h=s.shape.slice();h[o]=1;const f=new Array(u);for(let m=0;m<f.length;m++){p[o]=m;const e=Ai({inputs:{x:s},backend:n,attrs:{begin:p,size:h}}),t=Jo({inputs:{x:e},backend:n,attrs:{shape:c}});f[m]=t,d.push(e)}return d.forEach(e=>n.disposeIntermediateTensorInfo(e)),f}const em={kernelName:C["Unpack"],backendName:"webgl",kernelFunc:Jf};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tm{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,o=e.numSegments,s=o*Math.ceil(a/n);this.outputShape=[r,s];const i="0.0",u="sumValue",c=4*Math.floor(n/4),l=n%4,d="\n        sumValue += dot(values, segFilter);\n    ";let p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${o})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${o})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${c}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${c};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${d}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${d}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${d}\n        }\n        setOutput(${u});\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nm(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:o}=t,{numSegments:s}=r,i=a.shape.length,u=[];let c=0;const l=C["backend_util"].getAxesPermutation([c],i);let d=a;null!=l&&(d=ps({inputs:{x:a},backend:n,attrs:{perm:l}}),u.push(d),c=C["backend_util"].getInnerMostAxes(1,i)[0]);const p=C["backend_util"].segment_util.computeOutShape(d.shape,c,s),h=C["util"].sizeFromShape([d.shape[c]]),f=Jo({inputs:{x:d},backend:n,attrs:{shape:[-1,h]}});u.push(f);const m=Object(C["sumOutType"])(a.dtype),b=(e,t,r,a,o)=>{const s=e.shape[0],i=e.shape[1],c=C["backend_util"].segment_util.segOpComputeOptimalWindowSize(i,o),l={windowSize:c,inSize:i,batchSize:s,numSegments:o},d=new tm(l,t),p=n.compileAndRun(d,[e,r],a);if(u.push(p),p.shape[1]===o)return p;const h=zp({backend:n,attrs:{start:0,stop:o,step:1,dtype:"float32"}}),f=Bf({inputs:{x:h},backend:n,attrs:{reps:[i/c]}});u.push(h),u.push(f);const m=b(p,t,f,a,o);return m},g=b(f,"unsortedSegmentSum",o,m,s),y=Jo({inputs:{x:g},backend:n,attrs:{shape:p}});let x=y;if(null!=l){u.push(y);const e=C["backend_util"].getUndoAxesPermutation(l);x=ps({inputs:{x:x},backend:n,attrs:{perm:e}})}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),x}const rm={kernelName:C["UnsortedSegmentSum"],backendName:"webgl",kernelFunc:nm},am=[fd,gd,gs,vs,ks,Ts,Cs,Rs,Fs,Ms,Us,Hs,Xs,Zs,oi,ti,ui,fi,pi,yi,vi,wi,Ti,Fi,Mi,Hi,Xi,Ji,ru,Eo,pu,Su,Iu,xu,Eu,Ru,Cu,Du,Lu,zu,qu,Xu,Zu,sc,uc,nc,dc,fc,bc,vc,jc,Nc,Ec,_c,Dc,Lc,Wc,Hc,Kc,Qc,tl,al,ul,ll,hl,gl,Ol,Sl,Co,Il,uu,$l,Rl,Dl,Fo,Bl,Ul,Hl,Jl,Yl,rd,sd,ld,vd,Nd,Td,Ad,_d,Dd,jd,Pd,Bd,Ud,Kd,Zd,lp,Qo,hp,bp,xp,wp,Bi,Sp,Cp,Ep,Fp,Lp,Lo,Vp,Wp,zi,rp,Hp,eh,Yp,es,ah,ih,dh,fh,yh,vh,kh,Th,Ch,Ah,Fh,Ph,Vh,Uh,qh,Ri,up,Yh,Zh,ef,nf,af,sf,cf,df,ff,gf,vf,wf,Sf,If,Cf,Ef,sp,ds,_f,Mf,Vf,qf,Yf,hs,Zf,em,rm,Ip];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */for(const Tv of am)Object(C["registerKernel"])(Tv);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var om=n("f8bb"),sm=n("526c");
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class im{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(e=>this.getInput(e)),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce((e,t)=>(e[t]=this.getAttr(t),e),{}))}getInput(e){return Object(sm["e"])(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return Object(sm["e"])(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Object(om["f"])(this.node.rawAttrs,e,t);if(null!=n.s)return Object(om["i"])(this.node.rawAttrs,e,t);if(null!=n.b)return Object(om["c"])(this.node.rawAttrs,e,t);if(null!=n.shape)return Object(om["k"])(this.node.rawAttrs,e,t);if(null!=n.type)return Object(om["e"])(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Object(om["g"])(this.node.rawAttrs,e,t);if(null!=n.list.s)return Object(om["h"])(this.node.rawAttrs,e,t);if(null!=n.list.shape)return Object(om["j"])(this.node.rawAttrs,e,t);if(null!=n.list.b)return Object(om["b"])(this.node.rawAttrs,e,t);if(null!=n.list.type)return Object(om["d"])(this.node.rawAttrs,e,t)}return t}}var um=n("d303"),cm=n("9117"),lm=n("4850"),dm=n("4611"),pm=n("a5aa"),hm=n("c77c"),fm=n("011b"),mm=n("508f"),bm=n("a009"),gm=n("f0e5"),ym=n("09f4"),xm=n("c9f1"),vm=n("4184");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Om=(e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[cm["a"](Object(sm["d"])("a",e,t,n),Object(sm["d"])("b",e,t,n))];case"AddN":return[lm["a"](Object(sm["d"])("tensors",e,t,n))];case"FloorMod":case"Mod":return[dm["a"](Object(sm["d"])("a",e,t,n),Object(sm["d"])("b",e,t,n))];case"Mul":return[pm["a"](Object(sm["d"])("a",e,t,n),Object(sm["d"])("b",e,t,n))];case"RealDiv":case"Div":return[hm["a"](Object(sm["d"])("a",e,t,n),Object(sm["d"])("b",e,t,n))];case"DivNoNan":return[fm["a"](Object(sm["d"])("a",e,t,n),Object(sm["d"])("b",e,t,n))];case"FloorDiv":return[mm["a"](Object(sm["d"])("a",e,t,n),Object(sm["d"])("b",e,t,n))];case"Sub":return[bm["a"](Object(sm["d"])("a",e,t,n),Object(sm["d"])("b",e,t,n))];case"Minimum":return[gm["a"](Object(sm["d"])("a",e,t,n),Object(sm["d"])("b",e,t,n))];case"Maximum":return[ym["a"](Object(sm["d"])("a",e,t,n),Object(sm["d"])("b",e,t,n))];case"Pow":return[xm["a"](Object(sm["d"])("a",e,t,n),Object(sm["d"])("b",e,t,n))];case"SquaredDifference":return[vm["a"](Object(sm["d"])("a",e,t,n),Object(sm["d"])("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};var wm=n("8ae0"),km=n("a374"),jm=n("4615"),Sm=n("220f"),Tm=n("dc59"),Im=n("7e36"),Nm=n("6002"),Cm=n("d1a8"),$m=n("5960"),Em=n("0777"),Am=n("eff7"),Rm=n("c1a2"),_m=n("9e38"),Fm=n("8e05"),Dm=n("4f20"),Mm=n("1ba2"),Pm=n("d369"),Lm=n("1359"),Bm=n("46b1"),Vm=n("24b0"),zm=n("3bb7"),Wm=n("b500"),Um=n("d7b0"),Gm=n("917a"),Hm=n("08a9"),qm=n("b39e"),Km=n("ffb3"),Xm=n("6932"),Ym=n("1df6"),Qm=n("5dc4"),Zm=n("9ffd"),Jm=n("163a"),eb=n("93b2"),tb=n("8888"),nb=n("d30a"),rb=n("c08f"),ab=n("46a8"),ob=n("5f2a"),sb=n("f3ae"),ib=n("6f37"),ub=n("520f"),cb=n("6fef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const lb=(e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[wm["a"](Object(sm["d"])("x",e,t,n))];case"Acos":return[km["a"](Object(sm["d"])("x",e,t,n))];case"Acosh":return[jm["a"](Object(sm["d"])("x",e,t,n))];case"Asin":return[Sm["a"](Object(sm["d"])("x",e,t,n))];case"Asinh":return[Tm["a"](Object(sm["d"])("x",e,t,n))];case"Atan":return[Im["a"](Object(sm["d"])("x",e,t,n))];case"Atan2":return[Nm["a"](Object(sm["d"])("x",e,t,n),Object(sm["d"])("y",e,t,n))];case"Atanh":return[Cm["a"](Object(sm["d"])("x",e,t,n))];case"Ceil":return[$m["a"](Object(sm["d"])("x",e,t,n))];case"Complex":return[Em["a"](Object(sm["d"])("real",e,t,n),Object(sm["d"])("imag",e,t,n))];case"Cos":return[Am["a"](Object(sm["d"])("x",e,t,n))];case"Cosh":return[Rm["a"](Object(sm["d"])("x",e,t,n))];case"Elu":return[_m["a"](Object(sm["d"])("x",e,t,n))];case"Erf":return[Fm["a"](Object(sm["d"])("x",e,t,n))];case"Exp":return[Dm["a"](Object(sm["d"])("x",e,t,n))];case"Expm1":return[Mm["a"](Object(sm["d"])("x",e,t,n))];case"Floor":return[Pm["a"](Object(sm["d"])("x",e,t,n))];case"Log":return[Lm["a"](Object(sm["d"])("x",e,t,n))];case"Log1p":return[Bm["a"](Object(sm["d"])("x",e,t,n))];case"Imag":return[Vm["a"](Object(sm["d"])("x",e,t,n))];case"Neg":return[zm["a"](Object(sm["d"])("x",e,t,n))];case"Reciprocal":return[Wm["a"](Object(sm["d"])("x",e,t,n))];case"Real":return[Um["a"](Object(sm["d"])("x",e,t,n))];case"Relu":return[Gm["a"](Object(sm["d"])("x",e,t,n))];case"Round":return[Hm["a"](Object(sm["d"])("x",e,t,n))];case"Selu":return[qm["a"](Object(sm["d"])("x",e,t,n))];case"Sigmoid":return[Km["a"](Object(sm["d"])("x",e,t,n))];case"Sin":return[Xm["a"](Object(sm["d"])("x",e,t,n))];case"Sign":return[Ym["a"](Object(sm["d"])("x",e,t,n))];case"Sinh":return[Qm["a"](Object(sm["d"])("x",e,t,n))];case"Softplus":return[Zm["a"](Object(sm["d"])("x",e,t,n))];case"Sqrt":return[Jm["a"](Object(sm["d"])("x",e,t,n))];case"Square":return[eb["a"](Object(sm["d"])("x",e,t,n))];case"Tanh":return[tb["a"](Object(sm["d"])("x",e,t,n))];case"Tan":return[nb["a"](Object(sm["d"])("x",e,t,n))];case"ClipByValue":return[rb["a"](Object(sm["d"])("x",e,t,n),Object(sm["d"])("clipValueMin",e,t,n),Object(sm["d"])("clipValueMax",e,t,n))];case"Relu6":return[ab["a"](Object(sm["d"])("x",e,t,n))];case"Rsqrt":return[ob["a"](Object(sm["e"])(e.inputNames[0],t,n))];case"Prod":return[sb["a"](Object(sm["d"])("x",e,t,n),Object(sm["d"])("axes",e,t,n))];case"LeakyRelu":return[ib["a"](Object(sm["d"])("x",e,t,n),Object(sm["d"])("alpha",e,t,n))];case"Prelu":return[ub["a"](Object(sm["d"])("x",e,t,n),Object(sm["d"])("alpha",e,t,n))];case"IsNan":return[cb["a"](Object(sm["e"])(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function db(e,t,n=""){if("number"!==typeof e&&"number"!==typeof t){C["util"].assert(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let r=0;r<e.length;r++){const a=e[r],o=t[r];C["util"].assert(a<0||o<0||a===o,()=>n+` Shapes ${e} and ${t} must match`)}}}function pb(e){return"number"!==typeof e&&!e.some(e=>e<0)}function hb(e,t,n){let r=fb(e,n);const a=!pb(r);if(a&&0===t.length)throw new Error("Tried to calculate elements of an empty list with non-fully-defined elementShape: "+r);if(a&&t.forEach(e=>{r=fb(e.shape,r)}),!pb(r))throw new Error("Non-fully-defined elementShape: "+r);return r}function fb(e,t){if("number"===typeof e)return t;if("number"===typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const a=e[r],o=t[r];if(a>=0&&o>=0&&a!==o)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:o}return n}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mb{constructor(e,t,n,r,a,o,s){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=o,this.clearAfterRead=s,this.tensors=[],this.closed_=!1,this.idTensor=Object(C["scalar"])(0),Object(C["keep"])(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(e=>this.read(e))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),db(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Object(C["keep"])(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((e,n)=>this.write(e,t[n]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Object(C["tensor"])([],[0].concat(this.elementShape));const n=this.readMany(e);return db(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Object(C["stack"])(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Object(C["tensor"])([],[0].concat(this.elementShape));const t=[];for(let r=0;r<this.size();r++)t.push(r);const n=this.readMany(t);return db(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Object(C["concat"])(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Object(C["unstack"])(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map(e=>(n+=e,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===n?0:t.size/n,o=[];Object(C["tidy"])(()=>{t=Object(C["reshape"])(t,[1,n,a]);for(let n=0;n<e.length;++n){const s=0===n?0:r[n-1],i=[0,s,0],u=[1,e[n],a];o[n]=Object(C["reshape"])(Object(C["slice"])(t,i,u),this.elementShape)}return o});const s=[];for(let i=0;i<e.length;i++)s[i]=i;this.writeMany(s,o)}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bb{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach(e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);db(t,e.shape,"TensorList shape mismatch: "),Object(C["keep"])(e)}),this.idTensor=Object(C["scalar"])(0),this.maxNumElements=r,Object(C["keep"])(this.idTensor)}get id(){return this.idTensor.id}copy(){return new bb([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.id)||t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);db(e,this.elementShape,"TensorList shape mismatch: ");const r=hb(this.elementShape,this.tensors,e);return Object(C["tidy"])(()=>{const e=this.tensors.map(e=>Object(C["reshape"])(e,r));return Object(C["stack"])(e,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=hb(this.elementShape,this.tensors,e),r=this.tensors.pop();return db(r.shape,e,"TensorList shape mismatch: "),Object(C["reshape"])(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(db(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Object(C["keep"])(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error("TensorListResize expects size to be non-negative. Got: "+e);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);db(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=hb(this.elementShape,this.tensors,t);return Object(C["reshape"])(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);db(this.elementShape,t.shape,"TensorList shape mismatch: "),Object(C["keep"])(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);db(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=hb(this.elementShape,this.tensors,n);return 0===e.length?Object(C["tensor"])([],[0].concat(r)):Object(C["tidy"])(()=>{const t=e.map(e=>Object(C["reshape"])(this.tensors[e],r));return Object(C["stack"])(t,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);db(this.elementShape,t,"TensorList shape mismatch: ");const n=hb(this.elementShape,this.tensors,t);return 0===this.size()?Object(C["tensor"])([],[0].concat(n)):Object(C["tidy"])(()=>{const e=this.tensors.map(e=>Object(C["reshape"])(e,n));return Object(C["concat"])(e,0)})}}function gb(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: "+e.shape);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);const a=e.shape.slice(1);db(a,t,"TensorList shape mismatch: ");const o=Object(C["unstack"])(e);return new bb(o,t,r)}function yb(e,t,n){return new bb([],e,t,n)}function xb(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);const o=new bb([],n,e.dtype,r),s=Object(C["unstack"])(e,0);return t.forEach((e,t)=>{o.setItem(e,s[t])}),o}function vb(e,t,n){let r=0;const a=t.map(e=>(r+=e,r));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const o=e.shape.slice(1),s=fb(o,n),i=0===r?0:e.size/r,u=Object(C["tidy"])(()=>{const n=[];e=Object(C["reshape"])(e,[1,r,i]);for(let r=0;r<t.length;++r){const o=0===r?0:a[r-1],u=[0,o,0],c=[1,t[r],i];n[r]=Object(C["reshape"])(Object(C["slice"])(e,u,c),s)}return e.dispose(),n}),c=new bb([],n,e.dtype,t.length);for(let l=0;l<u.length;l++)c.setItem(l,u[l]);return c}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ob=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=Object(sm["d"])("thenBranch",e,t,n),a=Object(sm["d"])("elseBranch",e,t,n),o=Object(sm["d"])("cond",e,t,n),s=Object(sm["d"])("args",e,t,n),i=await o.data();return i[0]?n.functionMap[r].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=Object(sm["d"])("body",e,t,n),a=Object(sm["d"])("cond",e,t,n),o=Object(sm["d"])("args",e,t,n),s=await n.functionMap[a].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap),i=o.map(e=>e.id);let u=await s[0].data();s.forEach(e=>{e.kept||-1!==i.indexOf(e.id)||e.dispose()});let c=o;while(u[0]){const e=c;c=await n.functionMap[r].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);const t=c.map(e=>e.id);e.forEach(e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()});const o=await n.functionMap[a].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);u=await o[0].data(),o.forEach(e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()})}return c}case"LoopCond":{const r=Object(sm["d"])("pred",e,t,n);return[Object(sm["a"])(r)]}case"Switch":{const r=Object(sm["d"])("pred",e,t,n);let a=Object(sm["d"])("data",e,t,n);return a.kept||(a=Object(sm["a"])(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=e.inputNames.find(e=>void 0!==Object(sm["e"])(e,t,n));if(r){const e=Object(sm["e"])(r,t,n);return[Object(sm["a"])(e)]}return}case"Enter":{const r=Object(sm["d"])("frameName",e,t,n),a=Object(sm["d"])("tensor",e,t,n);return n.enterFrame(r),[Object(sm["a"])(a)]}case"Exit":{const r=Object(sm["d"])("tensor",e,t,n);return n.exitFrame(),[Object(sm["a"])(r)]}case"NextIteration":{const r=Object(sm["d"])("tensor",e,t,n);return n.nextIteration(),[Object(sm["a"])(r)]}case"TensorArrayV3":{const r=Object(sm["d"])("size",e,t,n),a=Object(sm["d"])("dtype",e,t,n),o=Object(sm["d"])("elementShape",e,t,n),s=Object(sm["d"])("dynamicSize",e,t,n),i=Object(sm["d"])("clearAfterRead",e,t,n),u=Object(sm["d"])("identicalElementShapes",e,t,n),c=Object(sm["d"])("name",e,t,n),l=new mb(c,a,r,o,u,s,i);return n.addTensorArray(l),[l.idTensor,Object(C["scalar"])(1)]}case"TensorArrayWriteV3":{const r=Object(sm["d"])("tensorArrayId",e,t,n),a=Object(sm["d"])("index",e,t,n),o=Object(sm["d"])("tensor",e,t,n),s=n.getTensorArray(r.id);return s.write(a,o),[s.idTensor]}case"TensorArrayReadV3":{const r=Object(sm["d"])("tensorArrayId",e,t,n),a=Object(sm["d"])("index",e,t,n),o=n.getTensorArray(r.id);return[o.read(a)]}case"TensorArrayGatherV3":{const r=Object(sm["d"])("tensorArrayId",e,t,n),a=Object(sm["d"])("indices",e,t,n),o=Object(sm["d"])("dtype",e,t,n),s=n.getTensorArray(r.id);return[s.gather(a,o)]}case"TensorArrayScatterV3":{const r=Object(sm["d"])("tensorArrayId",e,t,n),a=Object(sm["d"])("indices",e,t,n),o=Object(sm["d"])("tensor",e,t,n),s=n.getTensorArray(r.id);return s.scatter(a,o),[s.idTensor]}case"TensorArrayConcatV3":{const r=Object(sm["d"])("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),o=Object(sm["d"])("dtype",e,t,n);return[a.concat(o)]}case"TensorArraySplitV3":{const r=Object(sm["d"])("tensorArrayId",e,t,n),a=Object(sm["d"])("tensor",e,t,n),o=Object(sm["d"])("lengths",e,t,n),s=n.getTensorArray(r.id);return s.split(o,a),[s.idTensor]}case"TensorArraySizeV3":{const r=Object(sm["d"])("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return[Object(C["scalar"])(a.size(),"int32")]}case"TensorArrayCloseV3":{const r=Object(sm["d"])("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=Object(sm["d"])("tensorListId",e,t,n),a=Object(sm["d"])("index",e,t,n),o=Object(sm["d"])("tensor",e,t,n),s=n.getTensorList(r.id);return s.setItem(a,o),[s.idTensor]}case"TensorListGetItem":{const r=Object(sm["d"])("tensorListId",e,t,n),a=Object(sm["d"])("index",e,t,n),o=Object(sm["d"])("elementShape",e,t,n),s=Object(sm["d"])("elementDType",e,t,n),i=n.getTensorList(r.id);return[i.getItem(a,o,s)]}case"TensorListScatterV2":case"TensorListScatter":{const r=Object(sm["d"])("indices",e,t,n),a=Object(sm["d"])("tensor",e,t,n),o=Object(sm["d"])("elementShape",e,t,n),s=Object(sm["d"])("numElements",e,t,n),i=xb(a,r,o,s);return n.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=Object(sm["d"])("elementShape",e,t,n),a=Object(sm["d"])("elementDType",e,t,n);let o;o="TensorListReserve"===e.op?"numElements":"maxNumElements";const s=Object(sm["d"])(o,e,t,n),i=yb(r,a,s);return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const r=Object(sm["d"])("tensorListId",e,t,n),a=Object(sm["d"])("indices",e,t,n),o=Object(sm["d"])("elementShape",e,t,n),s=Object(sm["d"])("elementDType",e,t,n),i=n.getTensorList(r.id);return[i.gather(a,s,o)]}case"TensorListStack":{const r=Object(sm["d"])("tensorListId",e,t,n),a=Object(sm["d"])("elementShape",e,t,n),o=Object(sm["d"])("elementDType",e,t,n),s=Object(sm["d"])("numElements",e,t,n),i=n.getTensorList(r.id);return[i.stack(a,o,s)]}case"TensorListFromTensor":{const r=Object(sm["d"])("tensor",e,t,n),a=Object(sm["d"])("elementShape",e,t,n),o=Object(sm["d"])("elementDType",e,t,n),s=gb(r,a,o);return n.addTensorList(s),[s.idTensor]}case"TensorListConcat":{const r=Object(sm["d"])("tensorListId",e,t,n),a=n.getTensorList(r.id),o=Object(sm["d"])("dtype",e,t,n),s=Object(sm["d"])("elementShape",e,t,n);return[a.concat(o,s)]}case"TensorListPushBack":{const r=Object(sm["d"])("tensorListId",e,t,n),a=Object(sm["d"])("tensor",e,t,n),o=n.getTensorList(r.id);return o.pushBack(a),[o.idTensor]}case"TensorListPopBack":{const r=Object(sm["d"])("tensorListId",e,t,n),a=Object(sm["d"])("elementShape",e,t,n),o=Object(sm["d"])("elementDType",e,t,n),s=n.getTensorList(r.id);return[s.popBack(a,o)]}case"TensorListSplit":{const r=Object(sm["d"])("tensor",e,t,n),a=Object(sm["d"])("elementShape",e,t,n),o=Object(sm["d"])("lengths",e,t,n),s=vb(r,o,a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};var wb=n("7675"),kb=n("dd7e"),jb=n("132b"),Sb=n("cd1f"),Tb=n("838f"),Ib=n("1590"),Nb=n("9748"),Cb=n("9fe6"),$b=n("8bc9"),Eb=n("ba53"),Ab=n("53fd"),Rb=n("c170");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _b(e,t,n){const[r,a]=Object(sm["d"])("fusedOps",e,t,n),o="biasadd"===r,s=!o,i="prelu"===a,u="fusedbatchnorm"===r,c=Object(sm["d"])("numArgs",e,t,n);if(o){if(i&&2!==c)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&o&&1!==c)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const l=Object(sm["d"])("strides",e,t,n),d=Object(sm["c"])(e,t,n),p=Object(sm["d"])("dataFormat",e,t,n).toUpperCase(),h=Object(sm["d"])("dilations",e,t,n);let[f,m]=Object(sm["d"])("args",e,t,n);s&&(m=f,f=void 0);const b=Object(sm["d"])("leakyreluAlpha",e,t,n);return{stride:l,pad:d,dataFormat:p,dilations:h,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:b}}const Fb=(e,t,n)=>{switch(e.op){case"Conv1D":{const r=Object(sm["d"])("stride",e,t,n),a=Object(sm["d"])("pad",e,t,n),o=Object(sm["d"])("dataFormat",e,t,n).toUpperCase(),s=Object(sm["d"])("dilation",e,t,n);return[wb["a"](Object(sm["d"])("x",e,t,n),Object(sm["d"])("filter",e,t,n),r,a,o,s)]}case"Conv2D":{const r=Object(sm["d"])("strides",e,t,n),a=Object(sm["c"])(e,t,n),o=Object(sm["d"])("dataFormat",e,t,n).toUpperCase(),s=Object(sm["d"])("dilations",e,t,n);return[kb["a"](Object(sm["d"])("x",e,t,n),Object(sm["d"])("filter",e,t,n),[r[1],r[2]],a,o,[s[1],s[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:o,dilations:s,biasArg:i,preluArg:u,activationFunc:c,leakyreluAlpha:l}=_b(e,t,n);return[jb["qb"].conv2d({x:Object(sm["d"])("x",e,t,n),filter:Object(sm["d"])("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:o,dilations:[s[1],s[2]],bias:i,activation:c,preluActivationWeights:u,leakyreluAlpha:l})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:o,dilations:s,biasArg:i,preluArg:u,activationFunc:c,leakyreluAlpha:l}=_b(e,t,n);return[jb["qb"].depthwiseConv2d({x:Object(sm["d"])("x",e,t,n),filter:Object(sm["d"])("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:o,dilations:[s[1],s[2]],bias:i,activation:c,preluActivationWeights:u,leakyreluAlpha:l})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=Object(sm["d"])("outputShape",e,t,n),a=Object(sm["d"])("strides",e,t,n),o=Object(sm["c"])(e,t,n);return[Sb["a"](Object(sm["d"])("x",e,t,n),Object(sm["d"])("filter",e,t,n),r,[a[1],a[2]],o)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=Object(sm["d"])("strides",e,t,n),a=Object(sm["c"])(e,t,n),o=Object(sm["d"])("dilations",e,t,n),s=Object(sm["d"])("dataFormat",e,t,n).toUpperCase();return[Tb["a"](Object(sm["d"])("input",e,t,n),Object(sm["d"])("filter",e,t,n),[r[1],r[2]],a,s,[o[1],o[2]])]}case"Conv3D":{const r=Object(sm["d"])("strides",e,t,n),a=Object(sm["d"])("pad",e,t,n),o=Object(sm["d"])("dataFormat",e,t,n).toUpperCase(),s=Object(sm["d"])("dilations",e,t,n);return[Ib["a"](Object(sm["d"])("x",e,t,n),Object(sm["d"])("filter",e,t,n),[r[1],r[2],r[3]],a,o,[s[1],s[2],s[3]])]}case"AvgPool":{const r=Object(sm["d"])("strides",e,t,n),a=Object(sm["d"])("pad",e,t,n),o=Object(sm["d"])("kernelSize",e,t,n);return[Nb["a"](Object(sm["d"])("x",e,t,n),[o[1],o[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=Object(sm["d"])("strides",e,t,n),a=Object(sm["d"])("pad",e,t,n),o=Object(sm["d"])("kernelSize",e,t,n);return[Cb["a"](Object(sm["d"])("x",e,t,n),[o[1],o[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=Object(sm["d"])("strides",e,t,n),a=Object(sm["d"])("pad",e,t,n),o=Object(sm["d"])("kernelSize",e,t,n),s=Object(sm["d"])("includeBatchInIndex",e,t,n),{result:i,indexes:u}=$b["a"](Object(sm["d"])("x",e,t,n),[o[1],o[2]],[r[1],r[2]],a,s);return[i,u]}case"AvgPool3D":{const r=Object(sm["d"])("strides",e,t,n),a=Object(sm["d"])("pad",e,t,n),o=Object(sm["d"])("kernelSize",e,t,n);return[Eb["a"](Object(sm["d"])("x",e,t,n),[o[1],o[2],o[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=Object(sm["d"])("strides",e,t,n),a=Object(sm["d"])("pad",e,t,n),o=Object(sm["d"])("kernelSize",e,t,n);return[Ab["a"](Object(sm["d"])("x",e,t,n),[o[1],o[2],o[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=Object(sm["d"])("strides",e,t,n),a=Object(sm["d"])("pad",e,t,n),o=Object(sm["d"])("dilations",e,t,n),s=r[1],i=r[2],u=o[1],c=o[2];return[Rb["a"](Object(sm["d"])("x",e,t,n),Object(sm["d"])("filter",e,t,n),[s,i],a,[u,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};var Db=n("46b8"),Mb=n("5894"),Pb=n("3efc"),Lb=n("e22c"),Bb=n("c22a"),Vb=n("0db5"),zb=n("8629"),Wb=n("84d6"),Ub=n("7e6a"),Gb=n("5a2c"),Hb=n("a09b");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const qb=(e,t,n)=>{switch(e.op){case"Fill":{const r=Object(sm["d"])("shape",e,t,n),a=Object(sm["d"])("dtype",e,t,n),o=Object(sm["d"])("value",e,t,n);return[Db["a"](r,o,a)]}case"LinSpace":{const r=Object(sm["d"])("start",e,t,n),a=Object(sm["d"])("stop",e,t,n),o=Object(sm["d"])("num",e,t,n);return[Mb["a"](r,a,o)]}case"Multinomial":{const r=Object(sm["d"])("logits",e,t,n),a=Object(sm["d"])("numSamples",e,t,n),o=Object(sm["d"])("seed",e,t,n);return[Pb["a"](r,a,o)]}case"OneHot":{const r=Object(sm["d"])("indices",e,t,n),a=Object(sm["d"])("depth",e,t,n),o=Object(sm["d"])("onValue",e,t,n),s=Object(sm["d"])("offValue",e,t,n);return[Lb["a"](r,a,o,s)]}case"Ones":return[Bb["a"](Object(sm["d"])("shape",e,t,n),Object(sm["d"])("dtype",e,t,n))];case"OnesLike":return[Vb["a"](Object(sm["d"])("x",e,t,n))];case"RandomUniform":return[zb["a"](Object(sm["d"])("shape",e,t,n),Object(sm["d"])("minval",e,t,n),Object(sm["d"])("maxval",e,t,n),Object(sm["d"])("dtype",e,t,n))];case"Range":{const r=Object(sm["d"])("start",e,t,n),a=Object(sm["d"])("stop",e,t,n),o=Object(sm["d"])("step",e,t,n);return[Wb["a"](r,a,o,Object(sm["d"])("dtype",e,t,n))]}case"TruncatedNormal":{const r=Object(sm["d"])("shape",e,t,n),a=Object(sm["d"])("mean",e,t,n),o=Object(sm["d"])("stdDev",e,t,n),s=Object(sm["d"])("seed",e,t,n);return[Ub["a"](r,a,o,Object(sm["d"])("dtype",e,t,n),s)]}case"Zeros":return[Gb["a"](Object(sm["d"])("shape",e,t,n),Object(sm["d"])("dtype",e,t,n))];case"ZerosLike":return[Hb["a"](Object(sm["d"])("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};var Kb=n("deb3"),Xb=n("a780"),Yb=n("f74c");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Qb(e,t,n){const r=Object(sm["d"])("boxes",e,t,n),a=Object(sm["d"])("scores",e,t,n),o=Object(sm["d"])("maxOutputSize",e,t,n),s=Object(sm["d"])("iouThreshold",e,t,n),i=Object(sm["d"])("scoreThreshold",e,t,n),u=Object(sm["d"])("softNmsSigma",e,t,n);return{boxes:r,scores:a,maxOutputSize:o,iouThreshold:s,scoreThreshold:i,softNmsSigma:u}}const Zb=async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:o,iouThreshold:s,scoreThreshold:i,softNmsSigma:u}=Qb(e,t,n),c=await jb["xb"].nonMaxSuppressionWithScoreAsync(r,a,o,s,i,u);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:o,iouThreshold:s,scoreThreshold:i}=Qb(e,t,n),u=Object(sm["d"])("padToMaxOutputSize",e,t,n),c=await jb["xb"].nonMaxSuppressionPaddedAsync(r,a,o,s,i,u);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:o,iouThreshold:s,scoreThreshold:i}=Qb(e,t,n);return[await jb["xb"].nonMaxSuppressionAsync(r,a,o,s,i)]}case"Where":{const r=Kb["a"](Object(sm["d"])("condition",e,t,n),"bool"),a=[await Xb["a"](r)];return r.dispose(),a}case"ListDiff":return Yb["a"](Object(sm["d"])("x",e,t,n),Object(sm["d"])("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}};var Jb=n("5616"),eg=n("853e");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const tg=(e,t,n)=>{switch(e.op){case"TopKV2":{const r=Object(sm["d"])("x",e,t,n),a=Object(sm["d"])("k",e,t,n),o=Object(sm["d"])("sorted",e,t,n),s=Jb["a"](r,a,o);return[s.values,s.indices]}case"Unique":{const r=Object(sm["d"])("x",e,t,n),a=eg["a"](r);return[a.values,a.indices]}case"UniqueV2":{const r=Object(sm["d"])("x",e,t,n),a=Object(sm["d"])("axis",e,t,n),o=eg["a"](r,a);return[o.values,o.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};var ng=n("960f"),rg=n("015f");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const ag=(e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=Object(sm["d"])("default",e,t,n);return[Object(sm["e"])(e.name,t,n)||r];case"Placeholder":return[Object(sm["e"])(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const r=Object(sm["d"])("x",e,t,n);return[Object(sm["a"])(r)]}case"IdentityN":return Object(sm["d"])("x",e,t,n).map(e=>Object(sm["a"])(e));case"Snapshot":const a=Object(sm["d"])("x",e,t,n);return[Object(sm["a"])(a)];case"Shape":return[ng["a"](Object(sm["d"])("x",e,t,n).shape,"int32")];case"ShapeN":return Object(sm["d"])("x",e,t,n).map(e=>ng["a"](e.shape));case"Size":return[rg["a"](Object(sm["d"])("x",e,t,n).size,"int32")];case"Rank":return[rg["a"](Object(sm["d"])("x",e,t,n).rank,"int32")];case"NoOp":return[rg["a"](1)];case"Print":const o=Object(sm["d"])("x",e,t,n),s=Object(sm["d"])("data",e,t,n),i=Object(sm["d"])("message",e,t,n),u=Object(sm["d"])("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<s.length;e++)console.log(Array.prototype.slice.call(s[e].dataSync()).slice(0,u));return[o];default:throw TypeError(`Node type ${e.op} is not implemented`)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class og{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Object(C["scalar"])(0),this.tensorMap=new Map,Object(C["keep"])(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return rg["a"](this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),Object(C["tidy"])(()=>{const e=Object(C["unstack"])(t),r=n.length,a=e.length;C["util"].assert(r===a,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`);for(let t=0;t<r;t++){const r=n[t],a=e[t];Object(C["keep"])(a),this.tensorMap.set(r,a)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return Object(C["tidy"])(()=>{const e=[];for(let r=0;r<n.length;r++){const a=n[r],o=this.findWithDefault(a,t);e.push(o)}return Object(C["stack"])(e)})}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got `+e.dtype);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got `+t.dtype)}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sg=async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const a=Object(sm["d"])("keyDType",e,t,n),o=Object(sm["d"])("valueDType",e,t,n),s=new og(a,o);return r.addHashTable(e.name,s),[s.handle]}case"LookupTableImport":case"LookupTableImportV2":{const a=Object(sm["d"])("tableHandle",e,t,n,r),o=Object(sm["d"])("keys",e,t,n),s=Object(sm["d"])("values",e,t,n),i=r.getHashTableById(a.id);return[await i.import(o,s)]}case"LookupTableFind":case"LookupTableFindV2":{const a=Object(sm["d"])("tableHandle",e,t,n,r),o=Object(sm["d"])("keys",e,t,n),s=Object(sm["d"])("defaultValue",e,t,n),i=r.getHashTableById(a.id);return[await i.find(o,s)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=Object(sm["d"])("tableHandle",e,t,n,r),o=r.getHashTableById(a.id);return[o.tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},ig=(e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=Object(sm["d"])("images",e,t,n),a=Object(sm["d"])("size",e,t,n),o=Object(sm["d"])("alignCorners",e,t,n),s=Object(sm["d"])("halfPixelCenters",e,t,n);return[jb["xb"].resizeBilinear(r,[a[0],a[1]],o,s)]}case"ResizeNearestNeighbor":{const r=Object(sm["d"])("images",e,t,n),a=Object(sm["d"])("size",e,t,n),o=Object(sm["d"])("alignCorners",e,t,n),s=Object(sm["d"])("halfPixelCenters",e,t,n);return[jb["xb"].resizeNearestNeighbor(r,[a[0],a[1]],o,s)]}case"CropAndResize":{const r=Object(sm["d"])("image",e,t,n),a=Object(sm["d"])("boxes",e,t,n),o=Object(sm["d"])("boxInd",e,t,n),s=Object(sm["d"])("cropSize",e,t,n),i=Object(sm["d"])("method",e,t,n),u=Object(sm["d"])("extrapolationValue",e,t,n);return[jb["xb"].cropAndResize(r,a,o,s,i,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};var ug=n("b9b9"),cg=n("d4de"),lg=n("cef0"),dg=n("bb2d"),pg=n("e1fd"),hg=n("b21c"),fg=n("e333"),mg=n("ef00"),bg=n("f183"),gg=n("6791");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const yg=(e,t,n)=>{switch(e.op){case"Equal":return[ug["a"](Object(sm["d"])("a",e,t,n),Object(sm["d"])("b",e,t,n))];case"NotEqual":return[cg["a"](Object(sm["d"])("a",e,t,n),Object(sm["d"])("b",e,t,n))];case"Greater":return[lg["a"](Object(sm["d"])("a",e,t,n),Object(sm["d"])("b",e,t,n))];case"GreaterEqual":return[dg["a"](Object(sm["d"])("a",e,t,n),Object(sm["d"])("b",e,t,n))];case"Less":return[pg["a"](Object(sm["d"])("a",e,t,n),Object(sm["d"])("b",e,t,n))];case"LessEqual":return[hg["a"](Object(sm["d"])("a",e,t,n),Object(sm["d"])("b",e,t,n))];case"LogicalAnd":return[fg["a"](Object(sm["d"])("a",e,t,n),Object(sm["d"])("b",e,t,n))];case"LogicalNot":return[mg["a"](Object(sm["d"])("a",e,t,n))];case"LogicalOr":return[bg["a"](Object(sm["d"])("a",e,t,n),Object(sm["d"])("b",e,t,n))];case"Select":case"SelectV2":return[gg["a"](Object(sm["d"])("condition",e,t,n),Object(sm["d"])("a",e,t,n),Object(sm["d"])("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};var xg=n("487b"),vg=n("75ab"),Og=n("c912");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const wg=(e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[xg["a"](Object(sm["d"])("a",e,t,n),Object(sm["d"])("b",e,t,n),Object(sm["d"])("transposeA",e,t,n),Object(sm["d"])("transposeB",e,t,n))];case"Einsum":return[vg["a"](Object(sm["d"])("equation",e,t,n),...Object(sm["d"])("tensors",e,t,n))];case"Transpose":return[Og["a"](Object(sm["d"])("x",e,t,n),Object(sm["d"])("perm",e,t,n))];case"_FusedMatMul":const[r,a]=Object(sm["d"])("fusedOps",e,t,n),o="biasadd"===r,s="prelu"===a,i=Object(sm["d"])("numArgs",e,t,n),u=Object(sm["d"])("leakyreluAlpha",e,t,n);if(o){if(s&&2!==i)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!s&&1!==i)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,l]=Object(sm["d"])("args",e,t,n);return[jb["qb"].matMul({a:Object(sm["d"])("a",e,t,n),b:Object(sm["d"])("b",e,t,n),transposeA:Object(sm["d"])("transposeA",e,t,n),transposeB:Object(sm["d"])("transposeB",e,t,n),bias:c,activation:a,preluActivationWeights:l,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}};var kg=n("71db"),jg=n("e101"),Sg=n("5f87"),Tg=n("804a"),Ig=n("bc62");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Ng=(e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":return[kg["a"](Object(sm["d"])("x",e,t,n),Object(sm["d"])("mean",e,t,n),Object(sm["d"])("variance",e,t,n),Object(sm["d"])("offset",e,t,n),Object(sm["d"])("scale",e,t,n),Object(sm["d"])("epsilon",e,t,n))];case"FusedBatchNormV3":return[kg["a"](Object(sm["d"])("x",e,t,n),Object(sm["d"])("mean",e,t,n),Object(sm["d"])("variance",e,t,n),Object(sm["d"])("offset",e,t,n),Object(sm["d"])("scale",e,t,n),Object(sm["d"])("epsilon",e,t,n))];case"LRN":return[jg["a"](Object(sm["d"])("x",e,t,n),Object(sm["d"])("radius",e,t,n),Object(sm["d"])("bias",e,t,n),Object(sm["d"])("alpha",e,t,n),Object(sm["d"])("beta",e,t,n))];case"Softmax":return[Sg["a"](Object(sm["d"])("x",e,t,n))];case"LogSoftmax":return[Tg["a"](Object(sm["d"])("x",e,t,n))];case"SparseToDense":return[Ig["a"](Object(sm["d"])("sparseIndices",e,t,n),Object(sm["d"])("outputShape",e,t,n),Object(sm["d"])("sparseValues",e,t,n),Object(sm["d"])("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};var Cg=n("c021"),$g=n("122e"),Eg=n("ae6d"),Ag=n("e053"),Rg=n("df81"),_g=n("4516"),Fg=n("e89f"),Dg=n("db49"),Mg=n("1e68"),Pg=n("04c4"),Lg=n("2f2c");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Bg=(e,t,n)=>{switch(e.op){case"Max":{const r=Object(sm["d"])("axis",e,t,n),a=Object(sm["d"])("keepDims",e,t,n);return[Cg["a"](Object(sm["d"])("x",e,t,n),r,a)]}case"Mean":{const r=Object(sm["d"])("axis",e,t,n),a=Object(sm["d"])("keepDims",e,t,n);return[$g["a"](Object(sm["d"])("x",e,t,n),r,a)]}case"Min":{const r=Object(sm["d"])("axis",e,t,n),a=Object(sm["d"])("keepDims",e,t,n);return[Eg["a"](Object(sm["d"])("x",e,t,n),r,a)]}case"Sum":{const r=Object(sm["d"])("axis",e,t,n),a=Object(sm["d"])("keepDims",e,t,n);return[Ag["a"](Object(sm["d"])("x",e,t,n),r,a)]}case"All":{const r=Object(sm["d"])("axis",e,t,n),a=Object(sm["d"])("keepDims",e,t,n);return[Rg["a"](Object(sm["d"])("x",e,t,n),r,a)]}case"Any":{const r=Object(sm["d"])("axis",e,t,n),a=Object(sm["d"])("keepDims",e,t,n);return[_g["a"](Object(sm["d"])("x",e,t,n),r,a)]}case"ArgMax":{const r=Object(sm["d"])("axis",e,t,n);return[Fg["a"](Object(sm["d"])("x",e,t,n),r)]}case"ArgMin":{const r=Object(sm["d"])("axis",e,t,n);return[Dg["a"](Object(sm["d"])("x",e,t,n),r)]}case"Prod":{const r=Object(sm["d"])("axis",e,t,n),a=Object(sm["d"])("keepDims",e,t,n);return[sb["a"](Object(sm["d"])("x",e,t,n),r,a)]}case"Cumsum":{const r=Object(sm["d"])("axis",e,t,n),a=Object(sm["d"])("exclusive",e,t,n),o=Object(sm["d"])("reverse",e,t,n);return[Mg["a"](Object(sm["d"])("x",e,t,n),r,a,o)]}case"Bincount":const r=Object(sm["d"])("x",e,t,n),a=Object(sm["d"])("weights",e,t,n),o=Object(sm["d"])("size",e,t,n);return[Pg["a"](r,a,o)];case"DenseBincount":{const r=Object(sm["d"])("x",e,t,n),a=Object(sm["d"])("weights",e,t,n),o=Object(sm["d"])("size",e,t,n),s=Object(sm["d"])("binaryOutput",e,t,n);return[Lg["a"](r,a,o,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};var Vg=n("649e"),zg=n("91a3"),Wg=n("d08e"),Ug=n("6d3c"),Gg=n("de1a"),Hg=n("d1f4"),qg=n("35c9"),Kg=n("d54d"),Xg=n("3a44"),Yg=n("8d71"),Qg=n("45bb"),Zg=n("8bfa"),Jg=n("ba40");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const ey=(e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=Object(sm["d"])("n",e,t,n),a=Object(sm["d"])("axis",e,t,n);let o=Object(sm["d"])("tensors",e,t,n);return o=o.slice(0,r),[Vg["a"](o,a)]}case"Gather":{const r=Object(sm["d"])("x",e,t,n),a=Object(sm["d"])("indices",e,t,n);return[zg["a"](r,Kb["a"](a,"int32"),0)]}case"GatherV2":{const r=Object(sm["d"])("axis",e,t,n),a=Object(sm["d"])("batchDims",e,t,n),o=Object(sm["d"])("x",e,t,n),s=Object(sm["d"])("indices",e,t,n);return[zg["a"](o,Kb["a"](s,"int32"),r,a)]}case"Reverse":{const r=Object(sm["d"])("dims",e,t,n),a=[];for(let e=0;e<r.length;e++)r[e]&&a.push(e);const o=Object(sm["d"])("x",e,t,n);return[Wg["a"](o,a)]}case"ReverseV2":{const r=Object(sm["d"])("axis",e,t,n),a=Object(sm["d"])("x",e,t,n);return[Wg["a"](a,r)]}case"Slice":{const r=Object(sm["d"])("begin",e,t,n),a=Object(sm["d"])("size",e,t,n);return[Ug["a"](Object(sm["d"])("x",e,t,n),r,a)]}case"StridedSlice":{const r=Object(sm["d"])("begin",e,t,n),a=Object(sm["d"])("end",e,t,n),o=Object(sm["d"])("strides",e,t,n),s=Object(sm["d"])("beginMask",e,t,n),i=Object(sm["d"])("endMask",e,t,n),u=Object(sm["d"])("ellipsisMask",e,t,n),c=Object(sm["d"])("newAxisMask",e,t,n),l=Object(sm["d"])("shrinkAxisMask",e,t,n),d=Object(sm["d"])("x",e,t,n);return[Gg["a"](d,r,a,o,s,i,u,c,l)]}case"Pack":return Object(C["tidy"])(()=>{const r=Object(sm["d"])("axis",e,t,n),a=Object(sm["d"])("tensors",e,t,n),o=a[0].shape,s=Hg["a"](a[0]).shape,i=a.map(e=>{const t=C["util"].arraysEqual(e.shape,o);if(!t&&!C["util"].arraysEqual(Hg["a"](e).shape,s))throw new Error("the input tensors shape does not match");return t?e:qg["a"](e,o)});return[Kg["a"](i,r)]});case"Unpack":{const r=Object(sm["d"])("axis",e,t,n),a=Object(sm["d"])("tensor",e,t,n);return Xg["a"](a,r)}case"Tile":{const r=Object(sm["d"])("reps",e,t,n);return[Yg["a"](Object(sm["d"])("x",e,t,n),r)]}case"Split":case"SplitV":{const r=Object(sm["d"])("axis",e,t,n),a=Object(sm["d"])("numOrSizeSplits",e,t,n),o=Object(sm["d"])("x",e,t,n);return Qg["a"](o,a,r)}case"ScatterNd":{const r=Object(sm["d"])("indices",e,t,n),a=Object(sm["d"])("values",e,t,n),o=Object(sm["d"])("shape",e,t,n);return[Zg["a"](r,a,o)]}case"GatherNd":{const r=Object(sm["d"])("x",e,t,n),a=Object(sm["d"])("indices",e,t,n);return[Jg["a"](r,a)]}case"SparseToDense":{const r=Object(sm["d"])("sparseIndices",e,t,n),a=Object(sm["d"])("outputShape",e,t,n),o=Object(sm["d"])("sparseValues",e,t,n),s=Object(sm["d"])("defaultValue",e,t,n);return[Ig["a"](r,o,a,o.dtype===s.dtype?s:Kb["a"](s,o.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},ty=(e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:a,emptyRowIndicator:o,reverseIndexMap:s}=jb["md"].sparseFillEmptyRows(Object(sm["d"])("indices",e,t,n),Object(sm["d"])("values",e,t,n),Object(sm["d"])("denseShape",e,t,n),Object(sm["d"])("defaultValue",e,t,n));return[r,a,o,s]}case"SparseReshape":{const{outputIndices:r,outputShape:a}=jb["md"].sparseReshape(Object(sm["d"])("inputIndices",e,t,n),Object(sm["d"])("inputShape",e,t,n),Object(sm["d"])("newShape",e,t,n));return[r,a]}case"SparseSegmentMean":{const r=jb["md"].sparseSegmentMean(Object(sm["d"])("data",e,t,n),Object(sm["d"])("indices",e,t,n),Object(sm["d"])("segmentIds",e,t,n));return[r]}case"SparseSegmentSum":{const r=jb["md"].sparseSegmentSum(Object(sm["d"])("data",e,t,n),Object(sm["d"])("indices",e,t,n),Object(sm["d"])("segmentIds",e,t,n));return[r]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};var ny=n("1ab7"),ry=n("4c7a"),ay=n("b61d"),oy=n("69dc");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const sy=(e,t,n)=>{switch(e.op){case"FFT":return[ny["a"](Object(sm["d"])("x",e,t,n))];case"IFFT":return[ry["a"](Object(sm["d"])("x",e,t,n))];case"RFFT":return[ay["a"](Object(sm["d"])("x",e,t,n))];case"IRFFT":return[oy["a"](Object(sm["d"])("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},iy=(e,t,n)=>{switch(e.op){case"StringNGrams":{const{nGrams:r,nGramsSplits:a}=jb["xd"].stringNGrams(Object(sm["d"])("data",e,t,n),Object(sm["d"])("dataSplits",e,t,n),Object(sm["d"])("separator",e,t,n),Object(sm["d"])("nGramWidths",e,t,n),Object(sm["d"])("leftPad",e,t,n),Object(sm["d"])("rightPad",e,t,n),Object(sm["d"])("padWidth",e,t,n),Object(sm["d"])("preserveShortSequences",e,t,n));return[r,a]}case"StringSplit":{const{indices:r,values:a,shape:o}=jb["xd"].stringSplit(Object(sm["d"])("input",e,t,n),Object(sm["d"])("delimiter",e,t,n),Object(sm["d"])("skipEmpty",e,t,n));return[r,a,o]}case"StringToHashBucketFast":{const r=jb["xd"].stringToHashBucketFast(Object(sm["d"])("input",e,t,n),Object(sm["d"])("numBuckets",e,t,n));return[r]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};var uy=n("dae8"),cy=n("93db"),ly=n("0eb5"),dy=n("7580"),py=n("3b28"),hy=n("364e"),fy=n("48db");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const my=(e,t,n)=>{switch(e.op){case"Cast":return[Kb["a"](Object(sm["d"])("x",e,t,n),Object(sm["d"])("dtype",e,t,n))];case"ExpandDims":{const r=Object(sm["d"])("axis",e,t,n);return[uy["a"](Object(sm["d"])("x",e,t,n),r)]}case"Squeeze":{const r=Object(sm["d"])("axis",e,t,n);return[Hg["a"](Object(sm["d"])("x",e,t,n),r)]}case"Reshape":return[qg["a"](Object(sm["d"])("x",e,t,n),Object(sm["d"])("shape",e,t,n))];case"MirrorPad":return[cy["a"](Object(sm["d"])("x",e,t,n),Object(sm["d"])("padding",e,t,n),Object(sm["d"])("mode",e,t,n))];case"PadV2":case"Pad":return[ly["a"](Object(sm["d"])("x",e,t,n),Object(sm["d"])("padding",e,t,n),Object(sm["d"])("constantValue",e,t,n))];case"SpaceToBatchND":{const r=Object(sm["d"])("blockShape",e,t,n),a=Object(sm["d"])("paddings",e,t,n);return[dy["a"](Object(sm["d"])("x",e,t,n),r,a)]}case"BatchToSpaceND":{const r=Object(sm["d"])("blockShape",e,t,n),a=Object(sm["d"])("crops",e,t,n);return[py["a"](Object(sm["d"])("x",e,t,n),r,a)]}case"DepthToSpace":{const r=Object(sm["d"])("blockSize",e,t,n),a=Object(sm["d"])("dataFormat",e,t,n).toUpperCase();return[hy["a"](Object(sm["d"])("x",e,t,n),r,a)]}case"BroadcastTo":return[fy["a"](Object(sm["d"])("x",e,t,n),Object(sm["d"])("shape",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function by(e,t,n,r){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return C["tidy"](()=>Om(e,t,n));case"basic_math":return C["tidy"](()=>lb(e,t,n));case"control":return Ob(e,t,n);case"convolution":return C["tidy"](()=>Fb(e,t,n));case"creation":return C["tidy"](()=>qb(e,t,n));case"dynamic":return Zb(e,t,n);case"evaluation":return C["tidy"](()=>tg(e,t,n));case"image":return C["tidy"](()=>ig(e,t,n));case"graph":return C["tidy"](()=>ag(e,t,n));case"logical":return C["tidy"](()=>yg(e,t,n));case"matrices":return C["tidy"](()=>wg(e,t,n));case"normalization":return C["tidy"](()=>Ng(e,t,n));case"reduction":return C["tidy"](()=>Bg(e,t,n));case"slice_join":return C["tidy"](()=>ey(e,t,n));case"sparse":return C["tidy"](()=>ty(e,t,n));case"spectral":return C["tidy"](()=>sy(e,t,n));case"string":return C["tidy"](()=>iy(e,t,n));case"transformation":return C["tidy"](()=>my(e,t,n));case"hash_table":return sg(e,t,n,r);case"custom":const a=Object(um["a"])(e.op);if(a&&a.customExecutor)return a.customExecutor(new im(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return C["util"].isPromise(a)?a.then(e=>[].concat(e)):[].concat(a)}class gy{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yy(e,t,n,r){const a=new Set,o=[];let s=null,i=null;const u=new Set,c=Object.keys(e).map(e=>Object(sm["g"])(e)[0]);let l=[];null!=r&&(l=r.map(e=>Object(sm["g"])(e.name)[0]));const d=[...t];while(d.length>0){const e=d.pop();(ky(e)||jy(e)||Sy(e))&&null==s&&(s=e,i=s.children.map(e=>e.name).filter(e=>a.has(e))),a.add(e.name),null==n[e.name]&&(-1===c.indexOf(e.name)&&-1===l.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach(e=>{u.has(e.name)||(u.add(e.name),d.push(e))}):o.push(e.name)))}return{inputs:e,outputs:t,usedNodes:a,missingInputs:o,dynamicNode:s,syncInputs:i}}function xy(e,t,n){const{usedNodes:r,inputs:a}=n,o=[],s=Object.keys(a).map(e=>Object(sm["g"])(e)[0]).map(t=>e.nodes[t]),i=e.initNodes;s.forEach(e=>{r.has(e.name)&&o.push(e)}),e.weights.forEach(e=>{r.has(e.name)&&o.push(e)}),null!=i&&i.forEach(e=>{r.has(e.name)&&o.push(e)});const u=new Set,c=[];while(o.length>0){const e=o.pop();u.add(e.name),t[e.name]||c.push(e),e.children.forEach(e=>{!u.has(e.name)&&r.has(e.name)&&e.inputs.every(e=>u.has(e.name))&&o.push(e)})}return c}const vy=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],Oy=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],wy=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function ky(e){return vy.indexOf(e.op)>=0}function jy(e){return Oy.indexOf(e.op)>=0}function Sy(e){return wy.indexOf(e.op)>=0}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ty{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach(t=>{this._functionExecutorMap[t]=new Ty(e.functions[t],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(t=>e[t].map(e=>e.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams["shape"]?e.attrParams["shape"].value:void 0,dtype:e.attrParams["dtype"]?e.attrParams["dtype"].value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams["shape"]?e.attrParams["shape"].value:void 0,dtype:e.attrParams["dtype"]?e.attrParams["dtype"].value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){const n=e.map(e=>e.name).sort(),r=t.map(e=>e.name).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=yy(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:o}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${o}]`);if(r.length>0){const n=t.map(e=>e.name),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return xy(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map(e=>this.graph.nodes[Object(sm["g"])(e)[0]]),a=t.map(e=>Object(sm["g"])(e)[0]);let o=a.map(e=>this.graph.nodes[e]);0===o.length&&(o=this._outputs);const s=this.getCompilationKey(r,o);let i=this.compiledMap.get(s);null==i&&(i=this.compile(e,o),this.compiledMap.set(s,i));const u={},c={};return Object(C["tidy"])(()=>{const n=new gy(this.weightMap,u,c,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach(t=>{const[n,a]=Object(sm["g"])(t),o=[];o[a]=e[t],r[n]=o});const o=this.getFrozenTensorIds(r),s={};for(let e=0;e<i.length;e++){const t=i[e];if(!r[t.name]){const e=by(t,r,n,this._resourceManager);if(C["util"].isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,o,a,s)}}return null==this.parent&&n.dispose(o),t.map(e=>Object(sm["e"])(e,r,n))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(t=>e[t]).map(e=>e.map(e=>e.id)));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,o,s){"control"!==t.category&&-1===o.indexOf(e)&&(n[e].forEach(e=>{null!=e&&(s[e.id]=(s[e.id]||0)+t.children.length)}),t.inputs.forEach(e=>{if("control"!==e.category){const t=Object(sm["f"])(e.name,n,r);null!=t&&t.forEach(e=>{if(e&&!e.kept&&!a.has(e.id)){const t=s[e.id];1===t?(e.dispose(),delete s[e.id]):null!=t&&s[e.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,r={},a={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));const o=new gy(this.weightMap,r,a,this.functionExecutorMap),s=await this.executeWithControlFlow(e,o,t,n),i=t.map(e=>Object(sm["e"])(e,s,o)),u=i.map(e=>e.id),c=Object.keys(e).map(t=>e[t].id),l=new Set([...u,...c,...this.weightIds]);return Object.keys(s).forEach(e=>{const t=s[e];t.forEach(e=>{!e||e.kept||e.isDisposed||l.has(e.id)||e.dispose()})}),null==this.parent&&o.dispose(l),i}async executeFunctionAsync(e,t,n){const r=e.reduce((e,t,n)=>(e[this.inputs[n].name]=t,e),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const a=Object.keys(e),o=a.map(e=>this.graph.nodes[Object(sm["g"])(e)[0]]),s=n.map(e=>Object(sm["g"])(e)[0]);let i=s.map(e=>this.graph.nodes[e]);0===i.length&&(i=this._outputs);const{usedNodes:u,missingInputs:c,dynamicNode:l,syncInputs:d}=yy(e,i,this.weightMap,this._initNodes),p=[...o,...this.graph.weights,...this._initNodes||[]].map(e=>({node:e,contexts:t.currentContext})),h=Object.assign({},this.weightMap);Object.keys(e).forEach(t=>{const[n,r]=Object(sm["g"])(t),a=[];a[r]=e[t],h[n]=a});const f={},m=this.getFrozenTensorIds(h),b={};while(p.length>0){const e=this.processStack(o,p,t,h,b,m,s,f,u);await Promise.all(e)}null!=l||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const g=i.filter(e=>!ky(e)&&!Object(sm["e"])(e.name,h,t)).map(e=>e.name);if(g.length>0){let e="";throw null!=l&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${g}] from the provided inputs [${a}]. Consider providing the following inputs: [${c}]. ${e}`)}return h}processStack(e,t,n,r,a,o,s,i,u){const c=[];while(t.length>0){const e=t.pop();n.currentContext=e.contexts;let l="";if("Enter"===e.node.op&&Object(sm["d"])("isConstant",e.node,r,n)&&([l]=Object(sm["b"])(e.node.name,n)),null==r[e.node.name]){const d=by(e.node,r,n,this._resourceManager);l||([l]=Object(sm["b"])(e.node.name,n));const p=n.currentContext;C["util"].isPromise(d)?c.push(d.then(c=>(r[l]=c,n.currentContext=p,this.checkTensorForDisposal(l,e.node,r,n,o,s,i),this.processChildNodes(e.node,t,n,r,a,u),c))):(r[l]=d,this.checkTensorForDisposal(l,e.node,r,n,o,s,i),this.processChildNodes(e.node,t,n,r,a,u))}else this.processChildNodes(e.node,t,n,r,a,u)}return c}processChildNodes(e,t,n,r,a,o){e.children.forEach(e=>{const[s]=Object(sm["b"])(e.name,n);!a[s]&&o.has(e.name)&&("Merge"===e.op?e.inputNames.some(e=>!!Object(sm["e"])(e,r,n))&&(a[s]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every(e=>!!Object(sm["e"])(e,r,n))&&(a[s]=!0,t.push({contexts:n.currentContext,node:e})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(e=>e.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const n=e[t],[r]=Object(sm["g"])(t),a=this.graph.nodes[r];if(a.attrParams["shape"]&&a.attrParams["shape"].value){const e=a.attrParams["shape"].value,t=e.length===n.shape.length&&n.shape.every((t,n)=>-1===e[n]||e[n]===t);C["util"].assert(t,()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`)}a.attrParams["dtype"]&&a.attrParams["dtype"].value&&C["util"].assert(n.dtype===a.attrParams["dtype"].value,()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams["dtype"].value}, but was ${n.dtype}`)})}mapInputs(e){const t={};for(const n in e)if(null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]){const r=this._signature.inputs[n];t[r.name]=e[n]}else t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter(e=>{const[t]=Object(sm["g"])(e);return null==this.graph.nodes[t]});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(e=>{if(null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]){const t=this._signature.outputs[e];return t.name}return e},{})}checkOutputs(e){e.forEach(e=>{const[t]=Object(sm["g"])(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)})}}class Iy{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ny="?tfjs-format=file",Cy="model.json";class $y{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new Iy}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=C["io"].browserHTTPRequest(e,this.loadOptions);else{const t=C["io"].getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(C["io"].browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=C["io"].decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Ty(om["a"].Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=om["a"].Instance.transformGraph(e.modelInitializer);this.initializer=new Ty(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"===typeof e){const t=C["io"].getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof C["Tensor"])&&!Array.isArray(e))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,r)=>(t[n]=e[r],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function Ey(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}${Cy}${Ny}`);const n=new $y(e,t);return await n.load(),n}
/** @license See the LICENSE file. */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
    * @license
    * Copyright 2021 Google LLC. All Rights Reserved.
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    * http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    * =============================================================================
    */
var Ay=function(e,t){return(Ay=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};function Ry(e,t){function n(){this.constructor=e}Ay(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}var _y=function(){return(_y=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)};function Fy(e,t,n,r){return new(n||(n=Promise))((function(a,o){function s(e){try{u(r.next(e))}catch(e){o(e)}}function i(e){try{u(r.throw(e))}catch(e){o(e)}}function u(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,i)}u((r=r.apply(e,t||[])).next())}))}function Dy(e,t){var n,r,a,o,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function i(o){return function(i){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(a=2&o[0]?r.return:o[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,o[1])).done)return a;switch(r=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,r=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!(a=(a=s.trys).length>0&&a[a.length-1])&&(6===o[0]||2===o[0])){s=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){s.label=o[1];break}if(6===o[0]&&s.label<a[1]){s.label=a[1],a=o;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(o);break}a[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(e){o=[6,e],r=0}finally{n=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,i])}}}function My(e){var t=e.shape[2],n=Object(C["argMax"])(e,2),r=Object(C["reshape"])(n,[-1]);return Object(C["oneHot"])(r,t)}function Py(e,t){return Object(C["mul"])(e,t)}function Ly(e,t){return Object(C["tidy"])((function(){return Object(C["cast"])(Object(C["greater"])(e,Object(C["scalar"])(t)),"int32")}))}function By(e,t){var n=t.shape,r=n[0],a=n[1],o=n[2];return Object(C["tidy"])((function(){var n=My(t),s=Object(C["expandDims"])(Object(C["range"])(0,o,1,"int32"),1),i=Object(C["cast"])(Object(C["matMul"])(n,s),"int32"),u=Object(C["reshape"])(i,[r,a]),c=Object(C["add"])(u,Object(C["scalar"])(1,"int32"));return Object(C["sub"])(Py(c,e),Object(C["scalar"])(1,"int32"))}))}function Vy(e){var t=e.shape,n=t[0],r=t[1],a=t[2];return Object(C["tidy"])((function(){var t=My(e),o=Object(C["expandDims"])(Object(C["range"])(0,a,1,"int32"),1),s=Object(C["cast"])(Object(C["matMul"])(t,o),"int32");return Object(C["reshape"])(s,[n,r])}))}var zy=function(){function e(e,t){this.model=e,this.outputStride=t;var n=this.model.inputs[0].shape;C["util"].assert(-1===n[1]&&-1===n[2],(function(){return"Input shape ["+n[1]+", "+n[2]+"] must both be equal to or -1"}))}return e.prototype.predict=function(e){var t=this;return Object(C["tidy"])((function(){var n=t.preprocessInput(Object(C["cast"])(e,"float32")),r=Object(C["expandDims"])(n,0),a=t.model.predict(r).map((function(e){return Object(C["squeeze"])(e,[0])})),o=t.nameOutputResults(a);return{heatmapScores:Object(C["sigmoid"])(o.heatmap),offsets:o.offsets,displacementFwd:o.displacementFwd,displacementBwd:o.displacementBwd,segmentation:o.segmentation,partHeatmaps:o.partHeatmaps,longOffsets:o.longOffsets,partOffsets:o.partOffsets}}))},e.prototype.dispose=function(){this.model.dispose()},e}(),Wy=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return Ry(t,e),t.prototype.preprocessInput=function(e){return Object(C["tidy"])((function(){return Object(C["sub"])(Object(C["div"])(e,127.5),1)}))},t.prototype.nameOutputResults=function(e){return{offsets:e[0],segmentation:e[1],partHeatmaps:e[2],longOffsets:e[3],heatmap:e[4],displacementFwd:e[5],displacementBwd:e[6],partOffsets:e[7]}},t}(zy),Uy=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],Gy=Uy.length,Hy=Uy.reduce((function(e,t,n){return e[t]=n,e}),{}),qy=[["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]],Ky=[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]];qy.map((function(e){var t=e[0],n=e[1];return[Hy[t],Hy[n]]}));function Xy(e,t,n){var r=e[0],a=e[1],o=t[0],s=t[1],i=n.top,u=n.bottom;return[s/(n.left+n.right+a),o/(i+u+r)]}function Yy(e,t,n,r){return{y:r.get(e,t,n),x:r.get(e,t,n+Gy)}}function Qy(e,t,n){var r=Yy(e.heatmapY,e.heatmapX,e.id,n),a=r.y,o=r.x;return{x:e.heatmapX*t+o,y:e.heatmapY*t+a}}function Zy(e,t,n){return e<t?t:e>n?n:e}function Jy(e,t,n,r){var a=n-e,o=r-t;return a*a+o*o}function ex(e,t){return{x:e.x+t.x,y:e.y+t.y}}function tx(e,t,n){void 0===n&&(n=.3);for(var r=0,a=0,o=0;o<e.length;o++)t.keypoints[o].score>n&&(a+=1,r+=Math.pow(e[o].x-t.keypoints[o].position.x,2)+Math.pow(e[o].y-t.keypoints[o].position.y,2));return 0===a?r=1/0:r/=a,r}function nx(e,t,n,r){var a=t[0],o=t[1],s=n[0],i=n[1],u=Math.round(((a+e.y+1)*i-1)/r);return{x:Math.round(((o+e.x+1)*s-1)/r),y:u}}function rx(e,t,n,r,a,o,s){for(var i=s[0],u=s[1],c=n(e),l=c.y*r+c.x,d=a[Gy*(2*l)+t],p=a[Gy*(2*l+1)+t],h=e.y+d,f=e.x+p,m=0;m<o;m++){h=Math.min(h,i-1);var b=n({x:f=Math.min(f,u-1),y:h}),g=b.y*r+b.x;h+=d=a[Gy*(2*g)+t],f+=p=a[Gy*(2*g+1)+t]}return{x:f,y:h}}function ax(e,t,n,r,a,o,s,i,u,c){for(var l=a[0],d=a[1],p=o[0],h=o[1],f=i[0],m=i[1],b=[],g=function(e){return nx(e,[l,d],[p,h],u)},y=0;y<r;y++){var x=rx(e,y,g,s,t,c,[f,m]);b.push(x)}for(var v=-1,O=1/0,w=0;w<n.length;w++){var k=tx(b,n[w]);k<O&&(v=w,O=k)}return v}function ox(e,t){var n=e[0],r=e[1];return[Math.round((r-1)/t+1),Math.round((n-1)/t+1)]}function sx(e,t,n,r,a,o,s,i,u,c){var l=s[0],d=s[1];void 0===c&&(c=5);for(var p=n.map((function(e){return new Uint8Array(r*a).fill(0)})),h=i.top,f=i.left,m=Xy([r,a],[l,d],i),b=m[0],g=m[1],y=ox([l,d],o)[0],x=0;x<r;x+=1)for(var v=0;v<a;v+=1){var O=x*a+v;if(1===e[O]){var w=ax({x:v,y:x},t,n,c,[h,f],[b,g],y,[r,a],o,u);w>=0&&(p[w][O]=1)}}return p}function ix(e,t,n,r,a,o,s,i,u,c,l){var d=i[0],p=i[1];void 0===l&&(l=5);for(var h=r.map((function(e){return new Int32Array(a*o).fill(-1)})),f=u.top,m=u.left,b=Xy([a,o],[d,p],u),g=b[0],y=b[1],x=ox([d,p],s)[0],v=0;v<a;v+=1)for(var O=0;O<o;O+=1){var w=v*o+O;if(1===e[w]){var k=ax({x:O,y:v},t,r,l,[f,m],[g,y],x,[a,o],s,c);k>=0&&(h[k][w]=n[w])}}return h}function ux(e,t,n,r,a,o,s,i,u,c,l){for(var d=s[0],p=s[1],h=e.shape,f=h[0],m=h[1],b=t.shape.slice(0,2),g=b[0],y=b[1],x=Object(C["reshape"])(t,[g,y,2,Gy]),v=new Float32Array(l*Gy*3).fill(0),O=0;O<n.length;O++)for(var w=O*Gy*3,k=n[O],j=0;j<Gy;j++){var S=k.keypoints[j],T=w+3*j;v[T]=S.score,v[T+1]=S.position.y,v[T+2]=S.position.x}var I=Xy([r,a],[d,p],i),N=I[0],$=I[1],E=Object(C["tensor"])(v,[l,Gy,3]),A=i.top,R=i.left,_={variableNames:["segmentation","longOffsets","poses"],outputShape:[f,m],userCode:"\n    int convertToPositionInOutput(int pos, int pad, float scale, int stride) {\n      return round(((float(pos + pad) + 1.0) * scale - 1.0) / float(stride));\n    }\n\n    float convertToPositionInOutputFloat(\n        int pos, int pad, float scale, int stride) {\n      return ((float(pos + pad) + 1.0) * scale - 1.0) / float(stride);\n    }\n\n    float dist(float x1, float y1, float x2, float y2) {\n      return pow(x1 - x2, 2.0) + pow(y1 - y2, 2.0);\n    }\n\n    float sampleLongOffsets(float h, float w, int d, int k) {\n      float fh = fract(h);\n      float fw = fract(w);\n      int clH = int(ceil(h));\n      int clW = int(ceil(w));\n      int flH = int(floor(h));\n      int flW = int(floor(w));\n      float o11 = getLongOffsets(flH, flW, d, k);\n      float o12 = getLongOffsets(flH, clW, d, k);\n      float o21 = getLongOffsets(clH, flW, d, k);\n      float o22 = getLongOffsets(clH, clW, d, k);\n      float o1 = mix(o11, o12, fw);\n      float o2 = mix(o21, o22, fw);\n      return mix(o1, o2, fh);\n    }\n\n    int findNearestPose(int h, int w) {\n      float prob = getSegmentation(h, w);\n      if (prob < 1.0) {\n        return -1;\n      }\n\n      // Done(Tyler): convert from output space h/w to strided space.\n      float stridedH = convertToPositionInOutputFloat(\n        h, "+A+", "+$+", "+o+");\n      float stridedW = convertToPositionInOutputFloat(\n        w, "+R+", "+N+", "+o+");\n\n      float minDist = 1000000.0;\n      int iMin = -1;\n      for (int i = 0; i < "+l+"; i++) {\n        float curDistSum = 0.0;\n        int numKpt = 0;\n        for (int k = 0; k < "+Gy+"; k++) {\n          float dy = sampleLongOffsets(stridedH, stridedW, 0, k);\n          float dx = sampleLongOffsets(stridedH, stridedW, 1, k);\n\n          float y = float(h) + dy;\n          float x = float(w) + dx;\n\n          for (int s = 0; s < "+u+"; s++) {\n            int yRounded = round(min(y, float("+(r-1)+")));\n            int xRounded = round(min(x, float("+(a-1)+")));\n\n            float yStrided = convertToPositionInOutputFloat(\n              yRounded, "+A+", "+$+", "+o+");\n            float xStrided = convertToPositionInOutputFloat(\n              xRounded, "+R+", "+N+", "+o+");\n\n            float dy = sampleLongOffsets(yStrided, xStrided, 0, k);\n            float dx = sampleLongOffsets(yStrided, xStrided, 1, k);\n\n            y = y + dy;\n            x = x + dx;\n          }\n\n          float poseScore = getPoses(i, k, 0);\n          float poseY = getPoses(i, k, 1);\n          float poseX = getPoses(i, k, 2);\n          if (poseScore > "+c+") {\n            numKpt = numKpt + 1;\n            curDistSum = curDistSum + dist(x, y, poseX, poseY);\n          }\n        }\n        if (numKpt > 0 && curDistSum / float(numKpt) < minDist) {\n          minDist = curDistSum / float(numKpt);\n          iMin = i;\n        }\n      }\n      return iMin;\n    }\n\n    void main() {\n        ivec2 coords = getOutputCoords();\n        int nearestPose = findNearestPose(coords[0], coords[1]);\n        setOutput(float(nearestPose));\n      }\n  "};return Object(C["backend"])().compileAndRun(_,[e,x,E])}function cx(e,t){return Object(C["tidy"])((function(){return Object(C["cast"])(Object(C["equal"])(e,Object(C["scalar"])(t)),"int32")}))}function lx(e,t,n){return Object(C["tidy"])((function(){return Object(C["sub"])(Object(C["mul"])(Object(C["cast"])(Object(C["equal"])(e,Object(C["scalar"])(n)),"int32"),Object(C["add"])(t,1)),1)}))}function dx(){return"webgl"===Object(C["getBackend"])()}function px(e,t,n,r,a,o,s,i,u,c,l,d){var p=s[0],h=s[1];return void 0===u&&(u=.2),void 0===c&&(c=8),void 0===l&&(l=.3),void 0===d&&(d=10),Fy(this,void 0,void 0,(function(){var s,f,m,b,g;return Dy(this,(function(y){switch(y.label){case 0:return s=n.filter((function(e){return e.score>=u})),dx()?(m=Object(C["tidy"])((function(){var n=ux(e,t,s,r,a,o,[p,h],i,c,l,d),u=Object(C["engine"])().makeTensorFromDataId(n.dataId,n.shape,n.dtype);return s.map((function(e,t){return cx(u,t)}))})),[4,Promise.all(m.map((function(e){return e.data()})))]):[3,2];case 1:return f=y.sent(),m.forEach((function(e){return e.dispose()})),[3,5];case 2:return[4,e.data()];case 3:return b=y.sent(),[4,t.data()];case 4:g=y.sent(),f=sx(b,g,s,r,a,o,[p,h],i,c),y.label=5;case 5:return[2,f.map((function(e,t){return{data:e,pose:s[t],width:a,height:r}}))]}}))}))}function hx(e,t,n,r,a,o,s,i,u,c,l,d,p){var h=i[0],f=i[1];return void 0===c&&(c=.2),void 0===l&&(l=8),void 0===d&&(d=.3),void 0===p&&(p=10),Fy(this,void 0,void 0,(function(){var i,m,b,g,y,x;return Dy(this,(function(v){switch(v.label){case 0:return i=r.filter((function(e){return e.score>=c})),dx()?(b=Object(C["tidy"])((function(){var r=ux(e,t,i,a,o,s,[h,f],u,l,d,p),c=Object(C["engine"])().makeTensorFromDataId(r.dataId,r.shape,r.dtype);return i.map((function(e,t){return lx(c,n,t)}))})),[4,Promise.all(b.map((function(e){return e.data()})))]):[3,2];case 1:return m=v.sent(),b.forEach((function(e){return e.dispose()})),[3,6];case 2:return[4,e.data()];case 3:return g=v.sent(),[4,t.data()];case 4:return y=v.sent(),[4,n.data()];case 5:x=v.sent(),m=ix(g,y,x,i,a,o,s,[h,f],u,l),v.label=6;case 6:return[2,m.map((function(e,t){return{pose:i[t],data:e,height:a,width:o}}))]}}))}))}function fx(e){return Math.floor(e/2)}var mx=function(){function e(e,t){this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}return e.prototype.enqueue=function(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)},e.prototype.dequeue=function(){var e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e},e.prototype.empty=function(){return-1===this.numberOfElements},e.prototype.size=function(){return this.numberOfElements+1},e.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},e.prototype.max=function(){return this.priorityQueue[0]},e.prototype.swim=function(e){for(;e>0&&this.less(fx(e),e);)this.exchange(e,fx(e)),e=fx(e)},e.prototype.sink=function(e){for(;2*e<=this.numberOfElements;){var t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}},e.prototype.getValueAt=function(e){return this.getElementValue(this.priorityQueue[e])},e.prototype.less=function(e,t){return this.getValueAt(e)<this.getValueAt(t)},e.prototype.exchange=function(e,t){var n=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=n},e}();function bx(e,t,n,r,a,o){for(var s=o.shape,i=s[0],u=s[1],c=!0,l=Math.max(n-a,0),d=Math.min(n+a+1,i),p=l;p<d;++p){for(var h=Math.max(r-a,0),f=Math.min(r+a+1,u),m=h;m<f;++m)if(o.get(p,m,e)>t){c=!1;break}if(!c)break}return c}function gx(e,t,n){for(var r=n.shape,a=r[0],o=r[1],s=r[2],i=new mx(a*o*s,(function(e){return e.score})),u=0;u<a;++u)for(var c=0;c<o;++c)for(var l=0;l<s;++l){var d=n.get(u,c,l);d<e||bx(l,d,u,c,t,n)&&i.enqueue({score:d,part:{heatmapY:u,heatmapX:c,id:l}})}return i}var yx=Ky.map((function(e){var t=e[0],n=e[1];return[Hy[t],Hy[n]]})),xx=yx.map((function(e){return e[1]})),vx=yx.map((function(e){return e[0]}));function Ox(e,t,n){var r=n.shape[2]/2;return{y:n.get(t.y,t.x,e),x:n.get(t.y,t.x,r+e)}}function wx(e,t,n,r){return{y:Zy(Math.round(e.y/t),0,n-1),x:Zy(Math.round(e.x/t),0,r-1)}}function kx(e,t,n,r,a,o,s,i){void 0===i&&(i=2);for(var u=r.shape,c=u[0],l=u[1],d=Ox(e,wx(t.position,o,c,l),s),p=ex(t.position,d),h=0;h<i;h++){var f=wx(p,o,c,l),m=Yy(f.y,f.x,n,a);p=ex({x:f.x*o,y:f.y*o},{x:m.x,y:m.y})}var b=wx(p,o,c,l),g=r.get(b.y,b.x,n);return{position:p,part:Uy[n],score:g}}function jx(e,t,n,r,a,o){var s=t.shape[2],i=xx.length,u=new Array(s),c=e.part,l=e.score,d=Qy(c,r,n);u[c.id]={score:l,part:Uy[c.id],position:d};for(var p=i-1;p>=0;--p){var h=xx[p],f=vx[p];u[h]&&!u[f]&&(u[f]=kx(p,u[h],f,t,n,r,o))}for(p=0;p<i;++p)h=vx[p],f=xx[p],u[h]&&!u[f]&&(u[f]=kx(p,u[h],f,t,n,r,a));return u}function Sx(e,t,n,r){var a=n.x,o=n.y;return e.some((function(e){var n=e.keypoints[r].position;return Jy(o,a,n.y,n.x)<=t}))}function Tx(e,t,n){return n.reduce((function(n,r,a){var o=r.position,s=r.score;return Sx(e,t,o,a)||(n+=s),n}),0)/n.length}var Ix=1;function Nx(e,t,n,r,a,o,s,i){void 0===s&&(s=.5),void 0===i&&(i=20);for(var u=[],c=gx(s,Ix,e),l=i*i;u.length<o&&!c.empty();){var d=c.dequeue();if(!Sx(u,l,Qy(d.part,a,t),d.part.id)){var p=jx(d,e,t,a,n,r),h=Tx(u,l,p);u.push({keypoints:p,score:h})}}return u}var Cx,$x=[-123.15,-115.9,-103.06],Ex=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return Ry(t,e),t.prototype.preprocessInput=function(e){return Object(C["add"])(e,$x)},t.prototype.nameOutputResults=function(e){var t=e[0],n=e[1],r=e[2],a=e[3],o=e[4],s=e[5];return{offsets:o,segmentation:e[6],partHeatmaps:s,longOffsets:a,heatmap:r,displacementFwd:n,displacementBwd:t,partOffsets:e[7]}},t}(zy),Ax="https://storage.googleapis.com/tfjs-models/savedmodel/bodypix/resnet50/",Rx="https://storage.googleapis.com/tfjs-models/savedmodel/bodypix/mobilenet/";function _x(e,t){var n="model-stride"+e+".json";return 4===t?Ax+"float/"+n:Ax+"quant"+t+"/"+n}function Fx(e,t,n){var r={1:"100",.75:"075",.5:"050"},a="model-stride"+e+".json";return 4===n?Rx+"float/"+r[t]+"/"+a:Rx+"quant"+n+"/"+r[t]+"/"+a}function Dx(e){if("offsetHeight"in e&&0!==e.offsetHeight&&"offsetWidth"in e&&0!==e.offsetWidth)return[e.offsetHeight,e.offsetWidth];if(null!=e.height&&null!=e.width)return[e.height,e.width];throw new Error("HTMLImageElement must have height and width attributes set.")}function Mx(e){return e.hasAttribute("height")&&e.hasAttribute("width")?[e.height,e.width]:[e.videoHeight,e.videoWidth]}function Px(e){if("undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof OffscreenCanvas&&e instanceof OffscreenCanvas||"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)return Dx(e);if("undefined"!=typeof ImageData&&e instanceof ImageData)return[e.height,e.width];if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)return Mx(e);if(e instanceof C["Tensor"])return[e.shape[0],e.shape[1]];throw new Error("error: Unknown input type: "+e+".")}function Lx(e,t){return(e-1)%t==0}function Bx(e,t){return Lx(e,t)?e:Math.floor(e/t)*t+1}var Vx={low:"low",medium:"medium",high:"high",full:"full"},zx=((Cx={})[Vx.low]=.25,Cx[Vx.medium]=.5,Cx[Vx.high]=.75,Cx[Vx.full]=1,Cx),Wx=.1,Ux=2;function Gx(e){if("string"==typeof e){var t=zx[e];return C["util"].assert("number"==typeof t,(function(){return"string value of inputResolution must be one of "+Object.values(Vx).join(",")+" but was "+e+"."})),t}return C["util"].assert("number"==typeof e&&e<=Ux&&e>=Wx,(function(){return"inputResolution must be a string or number between "+Wx+" and "+Ux+", but was "+e})),e}function Hx(e,t,n){var r=n[0],a=n[1],o=Gx(e);return[Bx(r*o,t),Bx(a*o,t)]}function qx(e){return e instanceof C["Tensor"]?e:C["browser"].fromPixels(e)}function Kx(e,t,n,r,a){var o=t[0],s=t[1],i=n[0],u=n[1],c=r[0],l=c[0],d=c[1],p=r[1],h=p[0],f=p[1];return void 0===a&&(a=!1),Object(C["tidy"])((function(){var t=C["image"].resizeBilinear(e,[i,u],!0);return a&&(t=Object(C["sigmoid"])(t)),Xx(t,[o,s],[[l,d],[h,f]])}))}function Xx(e,t,n){var r=t[0],a=t[1],o=n[0],s=o[0],i=o[1],u=n[1],c=u[0],l=u[1];return Object(C["tidy"])((function(){var t=Object(C["expandDims"])(e);return Object(C["squeeze"])(C["image"].cropAndResize(t,[[s/(r+s+i-1),c/(a+c+l-1),(s+r-1)/(r+s+i-1),(c+a-1)/(a+c+l-1)]],[0],[r,a]),[0])}))}function Yx(e,t){var n=t[0],r=t[1],a=Px(e),o=a[0],s=a[1],i=r/n,u=[0,0,0,0],c=u[0],l=u[1],d=u[2],p=u[3];return s/o<i?(c=0,l=0,d=Math.round(.5*(i*o-s)),p=Math.round(.5*(i*o-s))):(c=Math.round(.5*(1/i*s-o)),l=Math.round(.5*(1/i*s-o)),d=0,p=0),{resized:Object(C["tidy"])((function(){var t=qx(e);return t=Object(C["pad3d"])(t,[[c,l],[d,p],[0,0]]),C["image"].resizeBilinear(t,[n,r])})),padding:{top:c,left:d,right:p,bottom:l}}}function Qx(e){return Fy(this,void 0,void 0,(function(){return Dy(this,(function(t){return[2,Promise.all(e.map((function(e){return e.buffer()})))]}))}))}function Zx(e,t,n,r,a){return void 0===r&&(r=0),void 0===a&&(a=0),{score:e.score,keypoints:e.keypoints.map((function(e){var o=e.score,s=e.part,i=e.position;return{score:o,part:s,position:{x:i.x*n+a,y:i.y*t+r}}}))}}function Jx(e,t,n,r,a){return void 0===r&&(r=0),void 0===a&&(a=0),1===n&&1===t&&0===r&&0===a?e:e.map((function(e){return Zx(e,t,n,r,a)}))}function ev(e,t){return{score:e.score,keypoints:e.keypoints.map((function(e){var n=e.score,r=e.part,a=e.position;return{score:n,part:r,position:{x:t-1-a.x,y:a.y}}}))}}function tv(e,t){return t<=0?e:e.map((function(e){return ev(e,t)}))}function nv(e,t,n,r,a){var o=t[0],s=t[1],i=n[0],u=n[1],c=Jx(e,(o+r.top+r.bottom)/i,(s+r.left+r.right)/u,-r.top,-r.left);return a?tv(c,s):c}var rv=!0,av=!1,ov={architecture:"MobileNetV1",outputStride:16,quantBytes:4,multiplier:.75},sv=["MobileNetV1","ResNet50"],iv={MobileNetV1:[8,16,32],ResNet50:[32,16]},uv={MobileNetV1:[.5,.75,1],ResNet50:[1]},cv=[1,2,4];function lv(e){if(null==(e=e||ov).architecture&&(e.architecture="MobileNetV1"),sv.indexOf(e.architecture)<0)throw new Error("Invalid architecture "+e.architecture+". Should be one of "+sv);if(null==e.outputStride&&(e.outputStride=16),iv[e.architecture].indexOf(e.outputStride)<0)throw new Error("Invalid outputStride "+e.outputStride+". Should be one of "+iv[e.architecture]+" for architecture "+e.architecture+".");if(null==e.multiplier&&(e.multiplier=1),uv[e.architecture].indexOf(e.multiplier)<0)throw new Error("Invalid multiplier "+e.multiplier+". Should be one of "+uv[e.architecture]+" for architecture "+e.architecture+".");if(null==e.quantBytes&&(e.quantBytes=4),cv.indexOf(e.quantBytes)<0)throw new Error("Invalid quantBytes "+e.quantBytes+". Should be one of "+cv+" for architecture "+e.architecture+".");return e}var dv={flipHorizontal:!1,internalResolution:"medium",segmentationThreshold:.7,maxDetections:10,scoreThreshold:.4,nmsRadius:20},pv={flipHorizontal:!1,internalResolution:"medium",segmentationThreshold:.7,maxDetections:10,scoreThreshold:.4,nmsRadius:20,minKeypointScore:.3,refineSteps:10};function hv(e){var t=e.segmentationThreshold,n=e.maxDetections,r=e.scoreThreshold,a=e.nmsRadius;if(t<0||t>1)throw new Error("segmentationThreshold "+t+". Should be in range [0.0, 1.0]");if(n<=0)throw new Error("Invalid maxDetections "+n+". Should be > 0");if(r<0||r>1)throw new Error("Invalid scoreThreshold "+r+". Should be in range [0.0, 1.0]");if(a<=0)throw new Error("Invalid nmsRadius "+a+".")}function fv(e){var t=e.segmentationThreshold,n=e.maxDetections,r=e.scoreThreshold,a=e.nmsRadius,o=e.minKeypointScore,s=e.refineSteps;if(t<0||t>1)throw new Error("segmentationThreshold "+t+". Should be in range [0.0, 1.0]");if(n<=0)throw new Error("Invalid maxDetections "+n+". Should be > 0");if(r<0||r>1)throw new Error("Invalid scoreThreshold "+r+". Should be in range [0.0, 1.0]");if(a<=0)throw new Error("Invalid nmsRadius "+a+".");if(o<0||o>1)throw new Error("Invalid minKeypointScore "+o+".Should be in range [0.0, 1.0]");if(s<=0||s>20)throw new Error("Invalid refineSteps "+s+".Should be in range [1, 20]")}var mv=function(){function e(e){this.baseModel=e}return e.prototype.predictForPersonSegmentation=function(e){var t=this.baseModel.predict(e);return{segmentLogits:t.segmentation,heatmapScores:t.heatmapScores,offsets:t.offsets,displacementFwd:t.displacementFwd,displacementBwd:t.displacementBwd}},e.prototype.predictForPersonSegmentationAndPart=function(e){var t=this.baseModel.predict(e);return{segmentLogits:t.segmentation,partHeatmapLogits:t.partHeatmaps,heatmapScores:t.heatmapScores,offsets:t.offsets,displacementFwd:t.displacementFwd,displacementBwd:t.displacementBwd}},e.prototype.predictForMultiPersonInstanceSegmentationAndPart=function(e){var t=this.baseModel.predict(e);return{segmentLogits:t.segmentation,longOffsets:t.longOffsets,heatmapScores:t.heatmapScores,offsets:t.offsets,displacementFwd:t.displacementFwd,displacementBwd:t.displacementBwd,partHeatmaps:t.partHeatmaps}},e.prototype.segmentPersonActivation=function(e,t,n){var r=this;void 0===n&&(n=.5);var a=Px(e),o=a[0],s=a[1],i=Hx(t,this.baseModel.outputStride,[o,s]),u=Yx(e,i),c=u.resized,l=u.padding,d=Object(C["tidy"])((function(){var e=r.predictForPersonSegmentation(c),t=e.segmentLogits,a=e.heatmapScores,i=e.offsets,u=e.displacementFwd,d=e.displacementBwd,p=c.shape,h=p[0],f=p[1],m=Kx(t,[o,s],[h,f],[[l.top,l.bottom],[l.left,l.right]],rv);return{segmentation:Ly(Object(C["squeeze"])(m),n),heatmapScores:a,offsets:i,displacementFwd:u,displacementBwd:d}})),p=d.segmentation,h=d.heatmapScores,f=d.offsets,m=d.displacementFwd,b=d.displacementBwd;return c.dispose(),{segmentation:p,heatmapScores:h,offsets:f,displacementFwd:m,displacementBwd:b,padding:l,internalResolutionHeightAndWidth:i}},e.prototype.segmentPerson=function(e,t){return void 0===t&&(t=dv),Fy(this,void 0,void 0,(function(){var n,r,a,o,s,i,u,c,l,d,p,h,f,m,b,g,y,x;return Dy(this,(function(v){switch(v.label){case 0:return hv(t=_y(_y({},dv),t)),n=this.segmentPersonActivation(e,t.internalResolution,t.segmentationThreshold),r=n.segmentation,a=n.heatmapScores,o=n.offsets,s=n.displacementFwd,i=n.displacementBwd,u=n.padding,c=n.internalResolutionHeightAndWidth,l=r.shape,d=l[0],p=l[1],[4,r.data()];case 1:return h=v.sent(),r.dispose(),[4,Qx([a,o,s,i])];case 2:return f=v.sent(),m=f[0],b=f[1],g=f[2],y=f[3],x=nv(x=Nx(m,b,g,y,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[d,p],c,u,av),a.dispose(),o.dispose(),s.dispose(),i.dispose(),[2,{height:d,width:p,data:h,allPoses:x}]}}))}))},e.prototype.segmentMultiPerson=function(e,t){return void 0===t&&(t=pv),Fy(this,void 0,void 0,(function(){var n,r,a,o,s,i,u,c,l,d,p,h,f,m,b,g,y,x,v,O,w,k=this;return Dy(this,(function(j){switch(j.label){case 0:return fv(t=_y(_y({},pv),t)),n=Px(e),r=n[0],a=n[1],o=Hx(t.internalResolution,this.baseModel.outputStride,[r,a]),s=Yx(e,o),i=s.resized,u=s.padding,c=Object(C["tidy"])((function(){var e,n=k.predictForMultiPersonInstanceSegmentationAndPart(i),s=n.segmentLogits,c=n.longOffsets,l=n.heatmapScores,d=n.offsets,p=n.displacementFwd,h=n.displacementBwd,f=Kx(s,[r,a],o,[[u.top,u.bottom],[u.left,u.right]],rv);return e=c,{segmentation:Ly(Object(C["squeeze"])(f),t.segmentationThreshold),longOffsets:e,heatmapScoresRaw:l,offsetsRaw:d,displacementFwdRaw:p,displacementBwdRaw:h}})),l=c.segmentation,d=c.longOffsets,p=c.heatmapScoresRaw,h=c.offsetsRaw,f=c.displacementFwdRaw,m=c.displacementBwdRaw,[4,Qx([p,h,f,m])];case 1:return b=j.sent(),g=b[0],y=b[1],x=b[2],v=b[3],O=nv(O=Nx(g,y,x,v,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[r,a],o,u,av),[4,px(l,d,O,r,a,this.baseModel.outputStride,o,u,t.scoreThreshold,t.refineSteps,t.minKeypointScore,t.maxDetections)];case 2:return w=j.sent(),i.dispose(),l.dispose(),d.dispose(),p.dispose(),h.dispose(),f.dispose(),m.dispose(),[2,w]}}))}))},e.prototype.segmentPersonPartsActivation=function(e,t,n){var r=this;void 0===n&&(n=.5);var a=Px(e),o=a[0],s=a[1],i=Hx(t,this.baseModel.outputStride,[o,s]),u=Yx(e,i),c=u.resized,l=u.padding,d=Object(C["tidy"])((function(){var e=r.predictForPersonSegmentationAndPart(c),t=e.segmentLogits,a=e.partHeatmapLogits,i=e.heatmapScores,u=e.offsets,d=e.displacementFwd,p=e.displacementBwd,h=c.shape,f=h[0],m=h[1],b=Kx(t,[o,s],[f,m],[[l.top,l.bottom],[l.left,l.right]],rv),g=Kx(a,[o,s],[f,m],[[l.top,l.bottom],[l.left,l.right]],rv);return{partSegmentation:By(Ly(Object(C["squeeze"])(b),n),g),heatmapScores:i,offsets:u,displacementFwd:d,displacementBwd:p}})),p=d.partSegmentation,h=d.heatmapScores,f=d.offsets,m=d.displacementFwd,b=d.displacementBwd;return c.dispose(),{partSegmentation:p,heatmapScores:h,offsets:f,displacementFwd:m,displacementBwd:b,padding:l,internalResolutionHeightAndWidth:i}},e.prototype.segmentPersonParts=function(e,t){return void 0===t&&(t=dv),Fy(this,void 0,void 0,(function(){var n,r,a,o,s,i,u,c,l,d,p,h,f,m,b,g,y,x;return Dy(this,(function(v){switch(v.label){case 0:return hv(t=_y(_y({},dv),t)),n=this.segmentPersonPartsActivation(e,t.internalResolution,t.segmentationThreshold),r=n.partSegmentation,a=n.heatmapScores,o=n.offsets,s=n.displacementFwd,i=n.displacementBwd,u=n.padding,c=n.internalResolutionHeightAndWidth,l=r.shape,d=l[0],p=l[1],[4,r.data()];case 1:return h=v.sent(),r.dispose(),[4,Qx([a,o,s,i])];case 2:return f=v.sent(),m=f[0],b=f[1],g=f[2],y=f[3],x=nv(x=Nx(m,b,g,y,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[d,p],c,u,av),a.dispose(),o.dispose(),s.dispose(),i.dispose(),[2,{height:d,width:p,data:h,allPoses:x}]}}))}))},e.prototype.segmentMultiPersonParts=function(e,t){return void 0===t&&(t=pv),Fy(this,void 0,void 0,(function(){var n,r,a,o,s,i,u,c,l,d,p,h,f,m,b,g,y,x,v,O,w,k,j=this;return Dy(this,(function(S){switch(S.label){case 0:return fv(t=_y(_y({},pv),t)),n=Px(e),r=n[0],a=n[1],o=Hx(t.internalResolution,this.baseModel.outputStride,[r,a]),s=Yx(e,o),i=s.resized,u=s.padding,c=Object(C["tidy"])((function(){var e=j.predictForMultiPersonInstanceSegmentationAndPart(i),n=e.segmentLogits,s=e.longOffsets,c=e.heatmapScores,l=e.offsets,d=e.displacementFwd,p=e.displacementBwd,h=e.partHeatmaps,f=Kx(n,[r,a],o,[[u.top,u.bottom],[u.left,u.right]],rv),m=Kx(h,[r,a],o,[[u.top,u.bottom],[u.left,u.right]],rv),b=s;return{segmentation:Ly(Object(C["squeeze"])(f),t.segmentationThreshold),longOffsets:b,heatmapScoresRaw:c,offsetsRaw:l,displacementFwdRaw:d,displacementBwdRaw:p,partSegmentation:Vy(m)}})),l=c.segmentation,d=c.longOffsets,p=c.heatmapScoresRaw,h=c.offsetsRaw,f=c.displacementFwdRaw,m=c.displacementBwdRaw,b=c.partSegmentation,[4,Qx([p,h,f,m])];case 1:return g=S.sent(),y=g[0],x=g[1],v=g[2],O=g[3],w=nv(w=Nx(y,x,v,O,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[r,a],o,u,av),[4,hx(l,d,b,w,r,a,this.baseModel.outputStride,o,u,t.scoreThreshold,t.refineSteps,t.minKeypointScore,t.maxDetections)];case 2:return k=S.sent(),i.dispose(),l.dispose(),d.dispose(),p.dispose(),h.dispose(),f.dispose(),m.dispose(),b.dispose(),[2,k]}}))}))},e.prototype.dispose=function(){this.baseModel.dispose()},e}();function bv(e){return Fy(this,void 0,void 0,(function(){var t,n,r,a,o,s;return Dy(this,(function(i){switch(i.label){case 0:if(t=e.outputStride,n=e.quantBytes,r=e.multiplier,null==C)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this\n        model.");return a=Fx(t,r,n),[4,Ey(e.modelUrl||a)];case 1:return o=i.sent(),s=new Wy(o,t),[2,new mv(s)]}}))}))}function gv(e){return Fy(this,void 0,void 0,(function(){var t,n,r,a,o;return Dy(this,(function(s){switch(s.label){case 0:if(t=e.outputStride,n=e.quantBytes,null==C)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this\n        model.");return r=_x(t,n),[4,Ey(e.modelUrl||r)];case 1:return a=s.sent(),o=new Ex(a,t),[2,new mv(o)]}}))}))}function yv(e){return void 0===e&&(e=ov),Fy(this,void 0,void 0,(function(){return Dy(this,(function(t){return"ResNet50"===(e=lv(e)).architecture?[2,gv(e)]:"MobileNetV1"===e.architecture?[2,bv(e)]:[2,null]}))}))}function xv(e,t,n,r,a){if(void 0===t&&(t={r:0,g:0,b:0,a:0}),void 0===n&&(n={r:0,g:0,b:0,a:255}),void 0===r&&(r=!1),void 0===a&&(a=[1]),Array.isArray(e)&&0===e.length)return null;var o,s=(o=Array.isArray(e)?e:[e])[0],i=s.width,u=s.height,c=new Uint8ClampedArray(i*u*4);function l(e,t,n,r,a,o){void 0===o&&(o={r:0,g:255,b:255,a:255});for(var s=-a;s<=a;s++)for(var i=-a;i<=a;i++)if(0!==s&&0!==i){var u=(t+s)*r+(n+i);e[4*u+0]=o.r,e[4*u+1]=o.g,e[4*u+2]=o.b,e[4*u+3]=o.a}}function d(e,t,n,r,a,o){void 0===a&&(a=[1]),void 0===o&&(o=1);for(var s=0,i=-o;i<=o;i++)for(var u=function(o){if(0!==i&&0!==o){var u=(t+i)*r+(n+o);a.some((function(t){return t===e[u]}))||(s+=1)}},c=-o;c<=o;c++)u(c);return s>0}for(var p=0;p<u;p+=1)for(var h=function(e){var s=p*i+e;c[4*s+0]=n.r,c[4*s+1]=n.g,c[4*s+2]=n.b,c[4*s+3]=n.a;for(var h=function(n){if(a.some((function(e){return e===o[n].data[s]}))){c[4*s]=t.r,c[4*s+1]=t.g,c[4*s+2]=t.b,c[4*s+3]=t.a;var h=d(o[n].data,p,e,i,a);r&&p-1>=0&&p+1<u&&e-1>=0&&e+1<i&&h&&l(c,p,e,i,1)}},f=0;f<o.length;f++)h(f)},f=0;f<i;f+=1)h(f);return new ImageData(c,i,u)}var vv,Ov={r:0,g:0,b:0,a:0},wv={r:0,g:0,b:0,a:255},kv=function(){return I(void 0,void 0,void 0,(function(){return N(this,(function(e){switch(e.label){case 0:return[4,yv({architecture:"MobileNetV1",outputStride:16,multiplier:.75,quantBytes:2})];case 1:return vv=e.sent(),console.log("[Video Processor] Model loaded"),[2]}}))}))},jv=function(e){return I(void 0,void 0,void 0,(function(){var t;return N(this,(function(n){switch(n.label){case 0:return[4,vv.segmentPerson(e,{internalResolution:"full",segmentationThreshold:.7,scoreThreshold:.3,nmsRadius:20})];case 1:return t=n.sent(),[2,xv(t,Ov,wv)]}}))}))},Sv=function(e){return I(void 0,void 0,void 0,(function(){return N(this,(function(t){switch(t.label){case 0:return[4,vv.segmentPerson(e,{internalResolution:"full",segmentationThreshold:.7,scoreThreshold:.3,nmsRadius:20})];case 1:return[2,t.sent()]}}))}))};kv(),p(Object.keys(t).reduce((function(e,n){return"__esModule"==n||(e[n]=t[n]),e}),{}))},"62e4":function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},"649e":function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("6ad5"),i=n("f0a9"),u=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t=0){Object(s["b"])(e.length>=1,()=>"Pass at least one tensor to concat");const n=Object(o["b"])(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach(e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)}),1===n.length)return Object(i["a"])(n[0]);const u=n,c={axis:t};return r["a"].runKernel(a["B"],u,c)}const l=Object(u["b"])({concat_:c})},"673d":function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}]},6791:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("48db"),i=n("526f"),u=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t,n){const u=Object(o["a"])(t,"a","where"),c=Object(o["a"])(n,"b","where"),l=Object(o["a"])(e,"condition","where","bool"),d=Object(i["a"])(Object(i["a"])(l.shape,u.shape),c.shape),p=Object(s["a"])(l,d),h=Object(s["a"])(u,d),f=Object(s["a"])(c,d),m={condition:p,t:h,e:f};return r["a"].runKernel(a["zc"],m)}const l=Object(u["b"])({where_:c})},6932:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(o["a"])(e,"x","sin"),n={x:t};return r["a"].runKernel(a["Dc"],n)}const u=Object(s["b"])({sin_:i})},"69dc":function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var r=n("0777"),a=n("649e"),o=n("24b0"),s=n("a5aa"),i=n("54ef"),u=n("d7b0"),c=n("35c9"),l=n("d08e"),d=n("015f"),p=n("6d3c"),h=n("4c7a");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function f(e){const t=e.shape[e.shape.length-1],n=e.size/t;let i;if(t<=2){const r=Object(c["a"])(e,[n,t]);i=Object(h["a"])(r)}else{const f=[n,2*(t-1)],m=Object(c["a"])(Object(u["a"])(e),[n,t]),b=Object(c["a"])(Object(o["a"])(e),[n,t]),g=Object(l["a"])(Object(p["a"])(m,[0,1],[n,t-2]),1),y=Object(s["a"])(Object(l["a"])(Object(p["a"])(b,[0,1],[n,t-2]),1),Object(d["a"])(-1)),x=Object(a["a"])([m,g],1),v=Object(a["a"])([b,y],1),O=Object(c["a"])(Object(r["a"])(x,v),[f[0],f[1]]);i=Object(h["a"])(O)}if(i=Object(u["a"])(i),3===e.rank&&0!==e.shape[0]){const t=i,n=e.shape[0];i=Object(c["a"])(i,[n,i.shape[0]/n,i.shape[1]]),t.dispose()}return i}const m=Object(i["b"])({irfft_:f})},"6ad5":function(e,t,n){"use strict";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function r(e){let t=e.length,n=0;while(t>0)n=Math.random()*t|0,t--,i(e,t,n)}function a(e,t){if(e.length!==t.length)throw new Error("Array sizes must match to be shuffled together First array length was "+e.length+"Second array length was "+t.length);let n=e.length,r=0;while(n>0)r=Math.random()*n|0,n--,i(e,n,r),i(t,n,r)}function o(e,t,n){return Math.max(e,Math.min(t,n))}function s(e){return e%2===0?e:e+1}function i(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function u(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function c(e,t){const n=Math.random();return t*n+(1-n)*e}function l(e,t){let n=0;for(let r=0;r<e.length;r++){const a=Number(e[r])-Number(t[r]);n+=a*a}return n}function d(e,t){if(!e)throw new Error("string"===typeof t?t:t())}function p(e,t,n=""){d(g(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function h(e){d(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function f(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||A(e)&&!n)for(let r=0;r<e.length;++r)f(e[r],t,n);else t.push(e);return t}function m(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function b(e){return 0===e.length}function g(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function y(e){return e%1===0}function x(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function v(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function O(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return r(t),t}function w(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function k(e,t=(e=>0),n){return new Promise((r,a)=>{let o=0;const s=()=>{if(e())return void r();o++;const i=t(o);null!=n&&o>=n?a():setTimeout(s,i)};s()})}function j(e,t){let n=1,r=-1;for(let o=0;o<e.length;++o)if(e[o]>=0)n*=e[o];else if(-1===e[o]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${o}`);r=o}else if(e[o]<0)throw Error(`Shapes can not be < 0. Found ${e[o]} at dim ${o}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function S(e,t){const n=t.length;return e=null==e?t.map((e,t)=>t):[].concat(e),d(e.every(e=>e>=-n&&e<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis `+e),d(e.every(e=>y(e)),()=>"All values in axis param must be integers but got axis "+e),e.map(e=>e<0?n+e:e)}function T(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,o=null==t||a?null:S(t,e).sort();let s=0;for(let i=0;i<e.length;++i){if(null!=o){if(o[s]===i&&1!==e[i])throw new Error(`Can't squeeze axis ${i} since its dim '${e[i]}' is not 1`);(null==o[s]||o[s]>i)&&1===e[i]&&(n.push(e[i]),r.push(i)),o[s]<=i&&s++}1!==e[i]&&(n.push(e[i]),r.push(i))}return{newShape:n,keptDims:r}}function I(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error("Unknown data type "+e);n=new Uint8Array(t)}return n}function N(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type "+e);n=new Array(t)}return n}function C(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function $(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function E(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function A(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function R(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype "+e)}function _(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}function F(e){return"string"===typeof e||e instanceof String}function D(e){return"boolean"===typeof e}function M(e){return"number"===typeof e}function P(e){return Array.isArray(e)?P(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":M(e)?"float32":F(e)?"string":D(e)?"bool":"float32"}function L(e){return!!(e&&e.constructor&&e.call&&e.apply)}function B(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function V(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function z(e,t,n,r=!1){const a=new Array;if(1===t.length){const o=t[0]*(r?2:1);for(let t=0;t<o;t++)a[t]=n[e+t]}else{const o=t[0],s=t.slice(1),i=s.reduce((e,t)=>e*t)*(r?2:1);for(let t=0;t<o;t++)a[t]=z(e+t*i,s,n,r)}return a}function W(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce((e,t)=>e*t)*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return z(0,e,t,n)}function U(e,t){const n=G(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function G(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type "+t)}function H(e,t){const n=e.reduce((e,t)=>e*t,1);if(null==t||"float32"===t)return W(e,new Float32Array(n));if("int32"===t)return W(e,new Int32Array(n));if("bool"===t)return W(e,new Uint8Array(n));throw new Error("Unknown data type "+t)}function q(e){e.forEach(t=>{d(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function K(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let a=0;a<e.length-1;++a)r+=n[a]*e[a];return r}function X(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let a=0;a<r.length-1;++a)r[a]=Math.floor(e/n[a]),e-=r[a]*n[a];return r[r.length-1]=e,r}function Y(e){return e&&e.then&&"function"===typeof e.then}n.d(t,"M",(function(){return r})),n.d(t,"N",(function(){return a})),n.d(t,"i",(function(){return o})),n.d(t,"H",(function(){return s})),n.d(t,"S",(function(){return i})),n.d(t,"R",(function(){return u})),n.d(t,"J",(function(){return c})),n.d(t,"l",(function(){return l})),n.d(t,"b",(function(){return d})),n.d(t,"e",(function(){return p})),n.d(t,"d",(function(){return h})),n.d(t,"m",(function(){return f})),n.d(t,"O",(function(){return m})),n.d(t,"y",(function(){return b})),n.d(t,"a",(function(){return g})),n.d(t,"v",(function(){return y})),n.d(t,"T",(function(){return x})),n.d(t,"P",(function(){return v})),n.d(t,"k",(function(){return O})),n.d(t,"L",(function(){return w})),n.d(t,"K",(function(){return k})),n.d(t,"s",(function(){return j})),n.d(t,"I",(function(){return S})),n.d(t,"Q",(function(){return T})),n.d(t,"o",(function(){return I})),n.d(t,"n",(function(){return N})),n.d(t,"h",(function(){return C})),n.d(t,"B",(function(){return $})),n.d(t,"p",(function(){return E})),n.d(t,"A",(function(){return A})),n.d(t,"g",(function(){return R})),n.d(t,"f",(function(){return _})),n.d(t,"z",(function(){return F})),n.d(t,"t",(function(){return D})),n.d(t,"w",(function(){return M})),n.d(t,"r",(function(){return P})),n.d(t,"u",(function(){return L})),n.d(t,"G",(function(){return B})),n.d(t,"j",(function(){return V})),n.d(t,"U",(function(){return W})),n.d(t,"D",(function(){return U})),n.d(t,"F",(function(){return G})),n.d(t,"E",(function(){return H})),n.d(t,"c",(function(){return q})),n.d(t,"C",(function(){return K})),n.d(t,"q",(function(){return X})),n.d(t,"x",(function(){return Y}))},"6ae2":function(e,t,n){"use strict";n.d(t,"b",(function(){return O})),n.d(t,"a",(function(){return w}));var r=n("8b87"),a=n("b333"),o=n("f490"),s=n("c05b"),i=n("73b8"),u=n("eb7e"),c=n("6ad5");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class l{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new p)}profileKernel(e,t,n){let r;const o=()=>{r=n()};let s;const i=u["now"]();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(o);else{o();for(const e of r)e.dataSync();s=Promise.resolve({kernelMs:u["now"]()-i})}if(Object(a["c"])().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let a=0;a<r.length;a++){const t=r[a];t.data().then(n=>{d(n,t.dtype,e)})}const c={kernelName:e,outputs:r,inputs:t,timeMs:s.then(e=>e.kernelMs),extraInfo:s.then(e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():"")};return c}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:o}=e;n.forEach(e=>{Promise.all([e.data(),r,o]).then(n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])})})}}function d(e,t,n){if("float32"!==t)return!1;for(let r=0;r<e.length;r++){const t=e[r];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}class p{logKernelProfile(e,t,n,r,a,o){const s="number"===typeof r?c["L"](r+"ms",9):r["error"],i=c["L"](e,25),u=t.rank,l=t.size,d=c["L"](t.shape.toString(),14);let p="";for(const c in a){const e=a[c];if(null!=e){const n=e.shape||t.shape,r=n.length;p+=`${c}: ${r}D ${r>0?n:""} `}}console.log(`%c${i}\t%c${s}\t%c${u}D ${d}\t%c${l}\t%c${p}\t%c${o}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h(e,t,n){const r={},a={};for(let u=0;u<t.length;u++)r[t[u].id]=!0;for(let u=0;u<e.length;u++){const n=e[u],o=n.inputs;for(const e in o){const s=o[e];let i=!1;for(let e=0;e<t.length;e++)if(r[s.id]){n.outputs.forEach(e=>r[e.id]=!0),i=!0,a[n.id]=!0;break}if(i)break}}const o={};o[n.id]=!0;const s={};for(let u=e.length-1;u>=0;u--){const t=e[u],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(o[t.outputs[e].id]){for(const e in n)o[n[e].id]=!0,s[t.id]=!0;break}}const i=[];for(let u=0;u<e.length;u++){const t=e[u];if(a[t.id]&&s[t.id]){const e={};for(const a in t.inputs){const n=t.inputs[a];r[n.id]&&(e[a]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,i.push(n)}}return i}function f(e,t,n,r){for(let a=t.length-1;a>=0;a--){const o=t[a],s=[];if(o.outputs.forEach(t=>{const n=e[t.id];null!=n?s.push(n):s.push(null)}),null==o.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const i=o.gradient(s);for(const t in o.inputs){if(!(t in i))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(i)}.`);const a=n(()=>i[t]());if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const s=o.inputs[t];if(!c["a"](a.shape,s.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${s.shape}'`);if(null==e[s.id])e[s.id]=a;else{const t=e[s.id];e[s.id]=r(t,a),t.dispose()}}}}var m=n("34d7"),b=n("76c2");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function g(e){return null!=e.kernelName}class y{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class x{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new y}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],r=await this.initializeBackend(n).success;if(r)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(e+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e),r=n?await t:t;if(!r)return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new l(this.backendInstance),!0}setupRegisteredKernels(){const e=Object(i["d"])(this.backendName);e.forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){const t=Object(i["d"])(e);t.forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof r["b"]||"function"!==typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then(n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0)).catch(n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(n){return console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(e+" backend not found in registry");this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),o=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,o),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!==typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!==typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(r){throw t(),r}}nextTensorId(){return x.nextTensorId++}nextVariableId(){return x.nextVariableId++}clone(e){const t=w.runKernel(s["rb"],{x:e}),n={x:e},r=e=>({x:()=>{const t="float32",n={x:e},r={dtype:t};return w.runKernel(s["w"],n,r)}}),a=[];return this.addTapeNode(this.state.activeScope.name,n,[t],r,a,{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;const r=null!=Object(i["c"])(e,this.backendName);if(!r)throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach(e=>{a+="complex64"===e.dtype?3:1});const o=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],s=r-t-a-o;if(s>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${s} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,o=this.state.numTensors;let s,u;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=g(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(g(e)){const{kernelName:t,inputs:a,attrs:o}=e;null==this.backendName&&this.backend;const l=Object(i["c"])(t,this.backendName);c["b"](null!=l,()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`),s=()=>{const e=this.backend.numDataIds();u=l.kernelFunc({inputs:a,attrs:o,backend:this.backend});const s=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,s);const i=s.map(e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)});if(r){const e=this.getTensorsForGradient(t,a,i);n=this.saveTensorsForBackwardMode(e)}return i}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map(e=>this.keep(this.clone(e))))};s=()=>{const e=this.backend.numDataIds();u=this.tidy(()=>t(this.backend,a));const n=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:d,attrs:p}=e,h=g(e)?null:e.backwardsFunc;let f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(l,d,()=>s()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs):t=s()}),r&&this.addTapeNode(l,d,t,h,n,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-o,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map(e=>null!=d[e]?d[e].shape:null),outputShapes:t.map(e=>e.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map(e=>this.keep(this.clone(e)));return t}getTensorsForGradient(e,t,n){const r=Object(i["b"])(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let o;r.saveAllInputs?(c["b"](Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),o=Object.keys(t).map(e=>t[e])):o=e.map(e=>t[e]);const s=n.filter((e,t)=>a[t]);return o.concat(s)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&c["z"](e[0])&&(a=e.map(e=>u["encodeString"](e)));const o=r.write(a,t,n),s=new m["a"](t,n,o,this.nextTensorId());if(this.trackTensor(s,r),"string"===n){const e=this.state.tensorInfo.get(o),t=Object(c["f"])(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return s}makeTensorFromDataId(e,t,n,r){n=n||"float32";const a=new m["a"](t,n,e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new m["c"](e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*c["g"](e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof m["c"]||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*c["g"](e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,o){const s={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},u=Object(i["b"])(e);null!=u&&(r=u.gradFunc),null!=r&&(s.gradient=e=>(e=e.map((e,t)=>{if(null==e){const e=n[t],r=c["F"](e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e}),r(e.length>1?e:e[0],a,o))),this.state.activeTape.push(s)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Object(b["getTensorsInContainer"])(e),n=new Set(t.map(e=>e.id));for(let a=0;a<this.state.activeScope.track.length;a++){const e=this.state.activeScope.track[a];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(e=>{e.kept||e.scopeId!==r.id||this.track(e)})}gradients(e,t,n,r=!1){if(c["b"](t.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));c["b"](a instanceof m["a"],()=>"The result y returned by f() must be a tensor.");const o=h(this.state.activeTape,t,a);if(!r&&0===o.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const e={};e[a.id]=null==n?v(a.shape):n,f(e,o,e=>this.tidy(e),k);const r=t.map(t=>e[t.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(e=>{for(const t of e.saved)t.dispose()}),this.state.activeTape=null),{value:a,grads:r}})}customGrad(e){return c["b"](c["u"](e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{let n;c["b"](t.every(e=>e instanceof m["a"]),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const r={};t.forEach((e,t)=>{r[t]=e});const a=(r,a)=>(n=e(...t,a),c["b"](n.value instanceof m["a"],()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),c["b"](c["u"](n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),o=(e,r)=>{const a=n.gradFunc(e,r),o=Array.isArray(a)?a:[a];c["b"](o.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),c["b"](o.every(e=>e instanceof m["a"]),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const s={};return o.forEach((e,t)=>{s[t]=()=>e}),s};return this.runKernelFunc({forwardFunc:a,backwardsFunc:o,inputs:r})}}readSync(e){const t=this.state.tensorInfo.get(e);return t.backend.readSync(e)}read(e){const t=this.state.tensorInfo.get(e);return t.backend.read(e)}async time(e){const t=Object(u["now"])(),n=await this.backend.time(e);return n.wallMs=Object(u["now"])()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new y;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function v(e){const t=Object(c["D"])(Object(c["O"])(e),"float32");return w.makeTensor(t,e,"float32")}function O(){const e=Object(o["b"])();if(null==e._tfengine){const t=new a["b"](e);e._tfengine=new x(t)}return Object(a["d"])(e._tfengine.ENV),Object(m["f"])(()=>e._tfengine),e._tfengine}x.nextTensorId=0,x.nextVariableId=0;const w=O();function k(e,t){const n={a:e,b:t};return w.runKernel(s["d"],n)}},"6d3c":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t,n){const s=Object(o["a"])(e,"x","slice","string_or_numeric");if(0===s.rank)throw new Error("Slicing scalar is not possible");const i={x:s},u={begin:t,size:n};return r["a"].runKernel(a["Fc"],i,u)}const u=Object(s["b"])({slice_:i})},"6e83":function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}]},"6f37":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t=.2){const n=Object(o["a"])(e,"x","leakyRelu"),s={x:n},i={alpha:t};return r["a"].runKernel(a["yb"],s,i)}const u=Object(s["b"])({leakyRelu_:i})},"6fef":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(o["a"])(e,"x","isNaN"),n={x:t};return r["a"].runKernel(a["vb"],n)}const u=Object(s["b"])({isNaN_:i})},"71db":function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("6ad5"),i=n("35c9");function u(e){let t;return t=0===e.rank||1===e.rank?Object(i["a"])(e,[1,1,1,e.size]):2===e.rank?Object(i["a"])(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Object(i["a"])(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}var c=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l(e,t,n,c,l,d){null==d&&(d=.001);const p=Object(o["a"])(e,"x","batchNorm"),h=Object(o["a"])(t,"mean","batchNorm"),f=Object(o["a"])(n,"variance","batchNorm");let m,b;null!=l&&(m=Object(o["a"])(l,"scale","batchNorm")),null!=c&&(b=Object(o["a"])(c,"offset","batchNorm")),s["b"](h.rank===f.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),s["b"](null==b||h.rank===b.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),s["b"](null==m||h.rank===m.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const g=u(p),y={x:g,scale:m,offset:b,mean:h,variance:f},x={varianceEpsilon:d},v=r["a"].runKernel(a["jb"],y,x);return Object(i["a"])(v,p.shape)}const d=Object(c["b"])({batchNorm_:l})},"73b8":function(e,t,n){"use strict";n.d(t,"c",(function(){return i})),n.d(t,"b",(function(){return u})),n.d(t,"d",(function(){return c})),n.d(t,"f",(function(){return l})),n.d(t,"e",(function(){return d})),n.d(t,"h",(function(){return p})),n.d(t,"g",(function(){return h})),n.d(t,"a",(function(){return f}));var r=n("b333"),a=n("f490");
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a["a"])("kernelRegistry",()=>new Map),s=Object(a["a"])("gradRegistry",()=>new Map);function i(e,t){const n=m(e,t);return o.get(n)}function u(e){return s.get(e)}function c(e){const t=o.entries(),n=[];while(1){const{done:r,value:a}=t.next();if(r)break;const[o,s]=a,[i]=o.split("_");i===e&&n.push(s)}return n}function l(e){const{kernelName:t,backendName:n}=e,r=m(t,n);o.has(r)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),o.set(r,e)}function d(e){const{kernelName:t}=e;s.has(t)&&Object(r["c"])().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),s.set(t,e)}function p(e,t){const n=m(e,t);if(!o.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);o.delete(n)}function h(e){if(!s.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);s.delete(e)}function f(e,t){const n=c(e);n.forEach(e=>{const n=Object.assign({},e,{backendName:t});l(n)})}function m(e,t){return`${t}_${e}`}},"73d3":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),o=n("6ad5"),s=n("54ef"),i=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t,n,s,u,c="NHWC",l){o["b"](e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let d=e,p=t,h=!1;3===t.rank&&(h=!0,p=Object(i["a"])(t,[1,t.shape[0],t.shape[1],t.shape[2]]),d=[1,e[0],e[1],e[2]]),o["b"](4===d.length,()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+d.length+"."),o["b"](4===p.rank,()=>"Error in conv2dDerInput: dy must be rank 4, but got rank "+p.rank),o["b"](4===n.rank,()=>"Error in conv2dDerInput: filter must be rank 4, but got rank "+n.rank);const f="NHWC"===c?d[3]:d[1],m="NHWC"===c?p.shape[3]:p.shape[1];o["b"](f===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${f}) must match input depth for filter ${n.shape[2]}.`),o["b"](m===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${m}) must match output depth for filter ${n.shape[3]}.`),null!=l&&o["b"](o["v"](u),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${l} but got pad ${u}.`);const b={dy:p,filter:n},g={strides:s,pad:u,dataFormat:c,dimRoundingMode:l,inputShape:d},y=r["a"].runKernel(a["E"],b,g);return h?Object(i["a"])(y,[y.shape[1],y.shape[2],y.shape[3]]):y}const c=Object(s["b"])({conv2DBackpropInput_:u})},7568:function(e,t,n){"use strict";
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function r(e,t=!1){console.log(e.toString(t))}n.d(t,"a",(function(){return r}))},7580:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("6ad5"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t,n){const i=Object(o["a"])(e,"x","spaceToBatchND");s["b"](i.rank>=1+t.length,()=>`input rank ${i.rank} should be > than [blockShape] ${t.length}`),s["b"](n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),s["b"](i.shape.reduce((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]===0:e,!0),()=>`input spatial dimensions ${i.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);const u={x:i},c={blockShape:t,paddings:n};return r["a"].runKernel(a["Ic"],u,c)}const c=Object(i["b"])({spaceToBatchND_:u})},"75ab":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,...t){const n=t.map((e,t)=>Object(o["a"])(e,"tensors"+t,"einsum")),s={equation:e};return r["a"].runKernel(a["V"],n,s)}const u=Object(s["b"])({einsum_:i})},7675:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("a3f7"),a=n("6ad5"),o=n("dd7e"),s=n("b818"),i=n("54ef"),u=n("35c9");function c(e,t,n,i,c="NWC",l=1,d){const p=Object(r["a"])(e,"x","conv1d"),h=Object(r["a"])(t,"filter","conv1d");let f=p,m=!1;2===p.rank&&(m=!0,f=Object(u["a"])(p,[1,p.shape[0],p.shape[1]])),a["b"](3===f.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${f.rank}.`),a["b"](3===h.rank,()=>"Error in conv1d: filter must be rank 3, but got rank "+h.rank+"."),null!=d&&a["b"](a["v"](i),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${d} but got pad ${i}.`),a["b"](f.shape[2]===h.shape[1],()=>`Error in conv1d: depth of input (${f.shape[2]}) must match input depth for filter ${h.shape[1]}.`),a["b"](s["h"](n,l),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${l}'`),a["b"]("NWC"===c,()=>`Error in conv1d: got dataFormat of ${c} but only NWC is currently supported.`);const b=Object(u["a"])(h,[1,h.shape[0],h.shape[1],h.shape[2]]),g=Object(u["a"])(f,[f.shape[0],1,f.shape[1],f.shape[2]]),y=[1,n],x=[1,l],v="NHWC",O=Object(o["a"])(g,b,y,i,v,x,d);return m?Object(u["a"])(O,[O.shape[2],O.shape[3]]):Object(u["a"])(O,[O.shape[0],O.shape[2],O.shape[3]])}const l=Object(i["b"])({conv1d_:c})},"76c2":function(e,t,n){"use strict";n.r(t),n.d(t,"makeTypesMatch",(function(){return s})),n.d(t,"assertTypesMatch",(function(){return i})),n.d(t,"isTensorInList",(function(){return u})),n.d(t,"getTensorsInContainer",(function(){return c}));var r=n("34d7"),a=n("23bf"),o=n("6ad5");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(e,t){if(e.dtype===t.dtype)return[e,t];const n=Object(a["c"])(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function i(e,t){Object(o["b"])(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function u(e,t){return t.some(t=>t.id===e.id)}function c(e){const t=[],n=new Set;return l(e,t,n),t}function l(e,t,n){if(null==e)return;if(e instanceof r["a"])return void t.push(e);if(!d(e))return;const a=e;for(const r in a){const e=a[r];n.has(e)||(n.add(e),l(e,t,n))}}function d(e){return Array.isArray(e)||"object"===typeof e}},"7aec":function(e,t,n){(function(e){var r;(function(e,a,o){function s(e){var t=this;function n(e,t){var n,r,a,o,s,i=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,o=-32;o<u;++o)t&&(r^=t.charCodeAt((o+32)%t.length)),0===o&&(s=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,o>=0&&(s=s+1640531527|0,n=i[127&o]^=r+s,a=0==n?a+1:0);for(a>=128&&(i[127&(t&&t.length||0)]=-1),a=127,o=512;o>0;--o)r=i[a+34&127],n=i[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,i[a]=r^n;e.w=s,e.X=i,e.i=a}t.next=function(){var e,n,r=t.w,a=t.X,o=t.i;return t.w=r=r+1640531527|0,n=a[o+34&127],e=a[o=o+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[o]=n^e,t.i=o,n+(r^r>>>16)|0},n(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},a.int32=n.next,a.quick=a,r&&(r.X&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n("07d6")&&n("3c35")?(r=function(){return u}.call(t,n,t,a),void 0===r||(a.exports=r)):this.xor4096=u})(0,e,n("07d6"))}).call(this,n("62e4")(e))},"7e36":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(o["a"])(e,"x","atan"),n={x:t};return r["a"].runKernel(a["l"],n)}const u=Object(s["b"])({atan_:i})},"7e6a":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("043e"),a=n("54ef"),o=n("d4e4");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(e,t=0,n=1,a,s){if(null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const i=new o["a"](t,n,a,!0,s),u=Object(r["a"])(e,a);for(let r=0;r<u.values.length;r++)u.values[r]=i.nextValue();return u.toTensor()}const i=Object(a["b"])({truncatedNormal_:s})},"7ed6":function(e,t,n){"use strict";
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function r(){return"undefined"!==typeof navigator&&null!=navigator}function a(e){if(e||r()){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function o(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}n.r(t),n.d(t,"isMobile",(function(){return a})),n.d(t,"isBrowser",(function(){return o}))},"804a":function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n("538e"),a=n("a3f7"),o=n("deb3"),s=n("4f20"),i=n("1359"),u=n("c021"),c=n("a5aa"),l=n("54ef"),d=n("a009"),p=n("e053");
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function h(e,t=-1){const n=Object(a["a"])(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const l=Object(r["a"])((e,n)=>{const r=!0,a=Object(u["a"])(e,t,!0),l=Object(d["a"])(e,a),h=Object(d["a"])(Object(o["a"])(l,"float32"),Object(i["a"])(Object(p["a"])(Object(s["a"])(l),t,r)));n([h]);const f=(e,n)=>{const[r]=n,a=!0,o=Object(s["a"])(r);return Object(d["a"])(e,Object(c["a"])(Object(p["a"])(e,t,a),o))};return{value:h,gradFunc:f}});return l(n)}const f=Object(l["b"])({logSoftmax_:h})},8389:function(e,t,n){"use strict";
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function r(e,t,n){const r=a(e,t,n),o=r<0?-(r+1):r;e.splice(o,0,t)}function a(e,t,n){return s(e,t,n||o)}function o(e,t){return e>t?1:e<t?-1:0}function s(e,t,n){let r=0,a=e.length,o=0,s=!1;while(r<a){o=r+(a-r>>>1);const i=n(t,e[o]);i>0?r=o+1:(a=o,s=!i)}return s?r:-r-1}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i(e,t,n,r,a){return l(e,t,n,r,a,0)}function u(e,t,n,r,a,o){return l(e,t,n,r,a,0,!1,o,!0)}function c(e,t,n,r,a,o){return l(e,t,n,r,a,o,!0)}function l(e,t,n,a,o,s,i=!1,u=!1,c=!1){const l=[];for(let r=0;r<t.length;r++)t[r]>o&&l.push({score:t[r],boxIndex:r,suppressBeginIndex:0});l.sort(h);const f=s>0?-.5/s:0,m=[],b=[];while(m.length<n&&l.length>0){const t=l.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=t;if(n<o)break;let u=!1;for(let r=m.length-1;r>=i;--r){const n=d(e,s,m[r]);if(n>=a){u=!0;break}if(t.score=t.score*p(a,f,n),t.score<=o)break}t.suppressBeginIndex=m.length,u||(t.score===n?(m.push(s),b.push(t.score)):t.score>o&&r(l,t,h))}const g=m.length,y=n-g;u&&y>0&&(m.push(...new Array(y).fill(0)),b.push(...new Array(y).fill(0)));const x={selectedIndices:m};return i&&(x["selectedScores"]=b),c&&(x["validOutputs"]=g),x}function d(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),o=Math.min(r[0],r[2]),s=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),c=Math.min(a[0],a[2]),l=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),p=Math.max(a[1],a[3]),h=(i-o)*(u-s),f=(d-c)*(p-l);if(h<=0||f<=0)return 0;const m=Math.max(o,c),b=Math.max(s,l),g=Math.min(i,d),y=Math.min(u,p),x=Math.max(g-m,0)*Math.max(y-b,0);return x/(h+f-x)}function p(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function h(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return u})),n.d(t,"c",(function(){return c}))},"838f":function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("6ad5"),i=n("54ef"),u=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t,n,i,c="NHWC",l=[1,1],d){const p=Object(o["a"])(e,"x","depthwiseConv2d"),h=Object(o["a"])(t,"filter","depthwiseConv2d");let f=p,m=!1;3===p.rank&&(m=!0,f=Object(u["a"])(p,[1,p.shape[0],p.shape[1],p.shape[2]])),s["b"](4===f.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`),s["b"](4===h.rank,()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+h.rank+"."),s["b"](f.shape[3]===h.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`),null!=d&&s["b"](s["v"](i),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${d} but got pad ${i}.`);const b={x:f,filter:h},g={strides:n,pad:i,dataFormat:c,dilations:l,dimRoundingMode:d},y=r["a"].runKernel(a["O"],b,g);return m?Object(u["a"])(y,[y.shape[1],y.shape[2],y.shape[3]]):y}const l=Object(i["b"])({depthwiseConv2d_:c})},"84d6":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("6ae2"),a=n("c05b");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(e,t,n=1,o="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:o};return r["a"].runKernel(a["jc"],{},s)}},"853e":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("6ad5"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t=0){const n=Object(o["a"])(e,"x","unique","string_or_numeric");Object(s["b"])(n.rank>0,()=>"The input tensor must be at least 1D");const i={x:n},u={axis:t},[c,l]=r["a"].runKernel(a["fd"],i,u);return{values:c,indices:l}}const c=Object(i["b"])({unique_:u})},8629:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("043e"),a=n("54ef"),o=n("d4e4");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(e,t=0,n=1,a="float32",s){const i=Object(r["a"])(e,a),u=new o["c"](t,n,null,s);for(let r=0;r<i.values.length;r++)i.values[r]=u.nextValue();return i.toTensor()}const i=Object(a["b"])({randomUniform_:s})},8888:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(o["a"])(e,"x","tanh"),n={x:t};return r["a"].runKernel(a["ad"],n)}const u=Object(s["b"])({tanh_:i})},"89ed":function(e,t,n){(function(e){var r;(function(e,a,o){function s(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n("07d6")&&n("3c35")?(r=function(){return u}.call(t,n,t,a),void 0===r||(a.exports=r)):this.tychei=u})(0,e,n("07d6"))}).call(this,n("62e4")(e))},"8ae0":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(o["a"])(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return r["a"].runKernel(a["A"],e)}{const e={x:t};return r["a"].runKernel(a["a"],e)}}const u=Object(s["b"])({abs_:i})},"8b87":function(e,t,n){"use strict";n.d(t,"a",(function(){return o})),n.d(t,"b",(function(){return s}));
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=1e-7,a=1e-4;class o{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class s{refCount(e){return i("refCount")}incRef(e){return i("incRef")}timerAvailable(){return!0}time(e){return i("time")}read(e){return i("read")}readSync(e){return i("readSync")}numDataIds(){return i("numDataIds")}disposeData(e,t){return i("disposeData")}write(e,t,n){return i("write")}move(e,t,n,r,a){return i("move")}memory(){return i("memory")}floatPrecision(){return i("floatPrecision")}epsilon(){return 32===this.floatPrecision()?r:a}dispose(){return i("dispose")}}function i(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},"8bc9":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t,n,s,i=!1){const u=Object(o["a"])(e,"x","maxPoolWithArgmax"),c={x:u},l={filterSize:t,strides:n,pad:s,includeBatchInIndex:i},d=r["a"].runKernel(a["Nb"],c,l);return{result:d[0],indexes:d[1]}}const u=Object(s["b"])({maxPoolWithArgmax_:i})},"8bfa":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef"),i=n("a34f");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t,n){const s=Object(o["a"])(e,"indices","scatterND","int32"),u=Object(o["a"])(t,"updates","scatterND");i["validateInput"](u,s,n);const c={indices:s,updates:u},l={shape:n};return r["a"].runKernel(a["yc"],c,l)}const c=Object(s["b"])({scatterND_:u})},"8d71":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("6ad5"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t){const n=Object(o["a"])(e,"x","tile","string_or_numeric");s["b"](n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);const i={x:n},u={reps:t};return r["a"].runKernel(a["bd"],i,u)}const c=Object(i["b"])({tile_:u})},"8e05":function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("6ad5"),i=n("deb3"),u=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e){let t=Object(o["a"])(e,"x","erf");s["b"]("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=Object(i["a"])(t,"float32"));const n={x:t};return r["a"].runKernel(a["Z"],n)}const l=Object(u["b"])({erf_:c})},9117:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),o=n("76c2"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t){let n=Object(s["a"])(e,"a","add"),i=Object(s["a"])(t,"b","add");[n,i]=Object(o["makeTypesMatch"])(n,i);const u={a:n,b:i};return r["a"].runKernel(a["d"],u)}const c=Object(i["b"])({add_:u})},9152:function(e,t){
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
t.read=function(e,t,n,r,a){var o,s,i=8*a-r-1,u=(1<<i)-1,c=u>>1,l=-7,d=n?a-1:0,p=n?-1:1,h=e[t+d];for(d+=p,o=h&(1<<-l)-1,h>>=-l,l+=i;l>0;o=256*o+e[t+d],d+=p,l-=8);for(s=o&(1<<-l)-1,o>>=-l,l+=r;l>0;s=256*s+e[t+d],d+=p,l-=8);if(0===o)o=1-c;else{if(o===u)return s?NaN:1/0*(h?-1:1);s+=Math.pow(2,r),o-=c}return(h?-1:1)*s*Math.pow(2,o-r)},t.write=function(e,t,n,r,a,o){var s,i,u,c=8*o-a-1,l=(1<<c)-1,d=l>>1,p=23===a?Math.pow(2,-24)-Math.pow(2,-77):0,h=r?0:o-1,f=r?1:-1,m=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(i=isNaN(t)?1:0,s=l):(s=Math.floor(Math.log(t)/Math.LN2),t*(u=Math.pow(2,-s))<1&&(s--,u*=2),t+=s+d>=1?p/u:p*Math.pow(2,1-d),t*u>=2&&(s++,u/=2),s+d>=l?(i=0,s=l):s+d>=1?(i=(t*u-1)*Math.pow(2,a),s+=d):(i=t*Math.pow(2,d-1)*Math.pow(2,a),s=0));a>=8;e[n+h]=255&i,h+=f,i/=256,a-=8);for(s=s<<a|i,c+=a;c>0;e[n+h]=255&s,h+=f,s/=256,c-=8);e[n+h-f]|=128*m}},"917a":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(o["a"])(e,"x","relu"),n={x:t};return r["a"].runKernel(a["nc"],n)}const u=Object(s["b"])({relu_:i})},"91a3":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t,n=0,s=0){const i=Object(o["a"])(e,"x","gather"),u=Object(o["a"])(t,"indices","gather","int32"),c={x:i,indices:u},l={axis:n,batchDims:s};return r["a"].runKernel(a["nb"],c,l)}const u=Object(s["b"])({gather_:i})},"93b2":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(e){const t=Object(a["a"])(e,"x","square"),n={};return r["a"].runKernel("Square",{x:t},n)}const i=Object(o["b"])({square_:s})},"93db":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("6ad5"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t,n){s["b"]("reflect"===n||"symmetric"===n,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const i=Object(o["a"])(e,"x","mirrorPad");if(0===i.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");s["b"](t.length===i.rank,()=>`Padding doesn't match input. Must be ${i.rank}. Got ${t.length}.`);const u="reflect"===n?1:0;for(let r=0;r<i.rank;r++)s["b"](2===t[r].length,()=>"Invalid number of paddings. Must be length of 2 each."),s["b"](t[r][0]>=0&&t[r][0]<=i.shape[r]-u&&t[r][1]>=0&&t[r][1]<=i.shape[r]-u,()=>`Padding in dimension ${r} cannot be greater than or equal to ${i.shape[r]-u} or less than 0 for input of shape `+i.shape);const c={paddings:t,mode:n},l={x:i};return r["a"].runKernel(a["Sb"],l,c)}const c=Object(i["b"])({mirrorPad_:u})},9489:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}]},"960f":function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n("a3f7"),a=n("6ad5"),o=n("5959");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(e,t){Object(a["d"])(e);const n=Object(r["c"])(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");const s=null;return Object(o["a"])(e,s,n,t)}},9748:function(e,t,n){"use strict";n.d(t,"a",(function(){return p}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("6ad5"),i=n("deb3"),u=n("b818"),c=n("54ef"),l=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function d(e,t,n,c,d){const p=Object(o["a"])(e,"x","avgPool","float32"),h=1;s["b"](u["h"](n,h),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${h}'`);let f=p,m=!1;3===p.rank&&(m=!0,f=Object(l["a"])(p,[1,p.shape[0],p.shape[1],p.shape[2]])),s["b"](4===f.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${f.rank}.`),null!=d&&s["b"](s["v"](c),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${d} but got pad ${c}.`);const b={x:f},g={filterSize:t,strides:n,pad:c,dimRoundingMode:d};let y=r["a"].runKernel(a["o"],b,g);return y=Object(i["a"])(y,p.dtype),m?Object(l["a"])(y,[y.shape[1],y.shape[2],y.shape[3]]):y}const p=Object(c["b"])({avgPool_:d})},9847:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},"9e38":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(o["a"])(e,"x","elu"),n={x:t};return r["a"].runKernel(a["W"],n)}const u=Object(s["b"])({elu_:i})},"9e7b":function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}]},"9fe6":function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("6ad5"),i=n("b818"),u=n("54ef"),c=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function l(e,t,n,u,l){const d=Object(o["a"])(e,"x","maxPool"),p=1;let h=d,f=!1;3===d.rank&&(f=!0,h=Object(c["a"])(d,[1,d.shape[0],d.shape[1],d.shape[2]])),s["b"](4===h.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${h.rank}.`),s["b"](i["h"](n,p),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${p}'`),null!=l&&s["b"](s["v"](u),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${l} but got pad ${u}.`);const m={x:h},b={filterSize:t,strides:n,pad:u,dimRoundingMode:l},g=r["a"].runKernel(a["Jb"],m,b);return f?Object(c["a"])(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const d=Object(u["b"])({maxPool_:l})},"9ffd":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(o["a"])(e,"x","softplus"),n={x:t};return r["a"].runKernel(a["Hc"],n)}const u=Object(s["b"])({softplus_:i})},a009:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),o=n("76c2"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t){let n=Object(s["a"])(e,"a","sub"),i=Object(s["a"])(t,"b","sub");[n,i]=Object(o["makeTypesMatch"])(n,i);const u={a:n,b:i};return r["a"].runKernel(a["Xc"],u)}const c=Object(i["b"])({sub_:u})},a09b:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(o["a"])(e,"x","zerosLike"),n={x:t};return r["a"].runKernel(a["id"],n)}const u=Object(s["b"])({zerosLike_:i})},a34f:function(e,t,n){"use strict";n.r(t),n.d(t,"validateUpdateShape",(function(){return a})),n.d(t,"validateInput",(function(){return o})),n.d(t,"calculateShapes",(function(){return s}));var r=n("6ad5");function a(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,o="Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: "+n.shape+`, indices.shape: ${t.shape}, shape: ${e}`+`, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(o+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(o+" Output shape length < "+(r+(n.rank-a)));if(n.rank!==a+e.length-r)throw new Error(o+" update.rank != "+(a+e.length-r));for(let s=0;s<a;++s)if(n.shape[s]!==t.shape[s])throw new Error(o+` updates.shape[${s}] (${n.shape[s]}) != indices.shape[${s}] (${t.shape[s]}).`);for(let s=0;s<n.rank-a;++s)if(n.shape[s+a]!==e[s+r])throw new Error(o+` updates.shape[${s+a}] (${n.shape[s+a]}) != shape[${s+a}] (${e[s+a]})`)}function o(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: "+t.dtype);if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+n);if(0===n.length){if(0===t.size)throw new Error("Indices specified for empty output. indices shape: "+t.shape);if(0===e.size)throw new Error("Updates specified for empty output. updates shape: "+e.shape)}a(n,t,e)}function s(e,t,n){const a=t.shape.length,o=a>1?t.shape[a-1]:1,s=n.length;let i=1;for(let r=o;r<s;++r)i*=n[r];const u=o<1?1:o,c=Object(r["O"])(t.shape)/u,l=[...Object(r["j"])(n.slice(0,o)),1],d=Object(r["O"])(n);return{sliceRank:o,numUpdates:c,sliceSize:i,strides:l,outputSize:d}}},a374:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(o["a"])(e,"x","acos"),n={x:t};return r["a"].runKernel(a["b"],n)}const u=Object(s["b"])({acos_:i})},a3f7:function(e,t,n){"use strict";n.d(t,"c",(function(){return u})),n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return p}));var r=n("6ae2"),a=n("b333"),o=n("34d7"),s=n("6ad5"),i=n("eb7e");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t){let n=e;if(Object(s["A"])(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];while(Array.isArray(n)||Object(s["A"])(n)&&"string"!==t)r.push(n.length),n=n[0];return Array.isArray(e)&&Object(a["c"])().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&c(e,r,[]),r}function c(e,t,n){if(n=n||[],!Array.isArray(e)&&!Object(s["A"])(e))return void Object(s["b"])(0===t.length,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);Object(s["b"])(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),Object(s["b"])(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);const r=t.slice(1);for(let a=0;a<e.length;++a)c(e[a],r,n.concat(a))}function l(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function d(e,t,n,a="numeric"){if(e instanceof o["a"])return l(a,e.dtype,t,n),e;let c=Object(s["r"])(e);if("string"!==c&&["bool","int32","float32"].indexOf(a)>=0&&(c=a),l(a,c,t,n),null==e||!Object(s["A"])(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const d=u(e,c);Object(s["A"])(e)||Array.isArray(e)||(e=[e]);const p=!0,h="string"!==c?Object(i["toTypedArray"])(e,c):Object(s["m"])(e,[],p);return r["a"].makeTensor(h,d,c)}function p(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);const a=e;return a.map((e,a)=>d(e,`${t}[${a}]`,n,r))}},a49d:function(e,t,n){var r;(function(a,o){var s,i=this,u=256,c=6,l=52,d="random",p=o.pow(u,c),h=o.pow(2,l),f=2*h,m=u-1;function b(e,t,n){var r=[];t=1==t?{entropy:!0}:t||{};var s=v(x(t.entropy?[e,w(a)]:null==e?O():e,3),r),i=new g(r),l=function(){var e=i.g(c),t=p,n=0;while(e<h)e=(e+n)*u,t*=u,n=i.g(1);while(e>=f)e/=2,t/=2,n>>>=1;return(e+n)/t};return l.int32=function(){return 0|i.g(4)},l.quick=function(){return i.g(4)/4294967296},l.double=l,v(w(i.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&y(r,i),e.state=function(){return y(i,{})}),n?(o[d]=e,t):e})(l,s,"global"in t?t.global:this==o,t.state)}function g(e){var t,n=e.length,r=this,a=0,o=r.i=r.j=0,s=r.S=[];n||(e=[n++]);while(a<u)s[a]=a++;for(a=0;a<u;a++)s[a]=s[o=m&o+e[a%n]+(t=s[a])],s[o]=t;(r.g=function(e){var t,n=0,a=r.i,o=r.j,s=r.S;while(e--)t=s[a=m&a+1],n=n*u+s[m&(s[a]=s[o=m&o+t])+(s[o]=t)];return r.i=a,r.j=o,n})(u)}function y(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function x(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(x(e[n],t-1))}catch(o){}return r.length?r:"string"==a?e:e+"\0"}function v(e,t){var n,r=e+"",a=0;while(a<r.length)t[m&a]=m&(n^=19*t[m&a])+r.charCodeAt(a++);return w(t)}function O(){try{var e;return s&&(e=s.randomBytes)?e=e(u):(e=new Uint8Array(u),(i.crypto||i.msCrypto).getRandomValues(e)),w(e)}catch(r){var t=i.navigator,n=t&&t.plugins;return[+new Date,i,n,i.screen,w(a)]}}function w(e){return String.fromCharCode.apply(0,e)}if(o["seed"+d]=b,v(o.random(),a),e.exports){e.exports=b;try{s=n(2)}catch(k){}}else r=function(){return b}.call(t,n,t,e),void 0===r||(e.exports=r)})([],Math)},a49e:function(e,t,n){(function(e){var r;(function(e,a,o){function s(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n("07d6")&&n("3c35")?(r=function(){return u}.call(t,n,t,a),void 0===r||(a.exports=r)):this.xorwow=u})(0,e,n("07d6"))}).call(this,n("62e4")(e))},a5aa:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),o=n("76c2"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t){let n=Object(s["a"])(e,"a","mul"),i=Object(s["a"])(t,"b","mul");[n,i]=Object(o["makeTypesMatch"])(n,i);const u={a:n,b:i};return r["a"].runKernel(a["Vb"],u)}const c=Object(i["b"])({mul_:u})},a780:function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n("0280"),a=n("a3f7");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
async function o(e){const t=Object(a["a"])(e,"condition","whereAsync","bool"),n=await t.data(),o=Object(r["a"])(t.shape,n);return e!==t&&t.dispose(),o}const s=o},a80f:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},ae6d:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t=null,n=!1){const s=Object(o["a"])(e,"x","min"),i={x:s},u={axis:t,keepDims:n};return r["a"].runKernel(a["Qb"],i,u)}const u=Object(s["b"])({min_:i})},aeab:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},b21c:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),o=n("76c2"),s=n("a3f7"),i=n("526f"),u=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t){let n=Object(s["a"])(e,"a","lessEqual","string_or_numeric"),u=Object(s["a"])(t,"b","lessEqual","string_or_numeric");[n,u]=Object(o["makeTypesMatch"])(n,u),Object(i["a"])(n.shape,u.shape);const c={a:n,b:u};return r["a"].runKernel(a["Ab"],c)}const l=Object(u["b"])({lessEqual_:c})},b333:function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"c",(function(){return c})),n.d(t,"a",(function(){return l})),n.d(t,"d",(function(){return d}));var r=n("6ad5");
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a="tfjsflags";class o{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=s,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Object(r["x"])(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(a in e){const t=e[a].split(",");t.forEach(e=>{const[t,n]=e.split(":");this.urlFlags[t]=u(t,n)})}}}function s(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>(i(t,n[0],n[1]),n.join("="))),t}function i(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function u(e,t){if(t=t.toLowerCase(),"true"===t||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}function c(){return l}let l=null;function d(e){l=e}},b39e:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(o["a"])(e,"x","selu"),n={x:t};return r["a"].runKernel(a["Ac"],n)}const u=Object(s["b"])({selu_:i})},b500:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(o["a"])(e,"x","reciprocal"),n={x:t};return r["a"].runKernel(a["mc"],n)}const u=Object(s["b"])({reciprocal_:i})},b61d:function(e,t,n){"use strict";n.d(t,"a",(function(){return b}));var r=n("6ad5"),a=n("0777"),o=n("649e"),s=n("24b0"),i=n("54ef"),u=n("d7b0"),c=n("35c9"),l=n("6d3c"),d=n("45bb"),p=n("5a2c"),h=n("a09b"),f=n("1ab7");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function m(e,t){Object(r["b"])("float32"===e.dtype,()=>"The dtype for rfft() must be real value but got "+e.dtype);let n=e.shape[e.shape.length-1];const i=e.size/n;let m;if(null!=t&&t<n){const r=e.shape.map(e=>0),a=e.shape.map(e=>e);a[e.shape.length-1]=t,m=Object(l["a"])(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map(e=>e);r[e.shape.length-1]=t-n,m=Object(o["a"])([e,Object(p["a"])(r)],e.shape.length-1),n=t}else m=e;const b=Object(h["a"])(m),g=Object(c["a"])(Object(a["a"])(m,b),[i,n]),y=Object(f["a"])(g),x=Math.floor(n/2)+1,v=Object(u["a"])(y),O=Object(s["a"])(y),w=Object(d["a"])(v,[x,n-x],v.shape.length-1),k=Object(d["a"])(O,[x,n-x],O.shape.length-1),j=m.shape.slice();return j[m.shape.length-1]=x,Object(c["a"])(Object(a["a"])(w[0],k[0]),j)}const b=Object(i["b"])({rfft_:m})},b639:function(e,t,n){"use strict";(function(e){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
var r=n("1fb5"),a=n("9152"),o=n("e3db");function s(){try{var e=new Uint8Array(1);return e.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===e.foo()&&"function"===typeof e.subarray&&0===e.subarray(1,1).byteLength}catch(t){return!1}}function i(){return c.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function u(e,t){if(i()<t)throw new RangeError("Invalid typed array length");return c.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(t),e.__proto__=c.prototype):(null===e&&(e=new c(t)),e.length=t),e}function c(e,t,n){if(!c.TYPED_ARRAY_SUPPORT&&!(this instanceof c))return new c(e,t,n);if("number"===typeof e){if("string"===typeof t)throw new Error("If encoding is specified then the first argument must be a string");return h(this,e)}return l(this,e,t,n)}function l(e,t,n,r){if("number"===typeof t)throw new TypeError('"value" argument must not be a number');return"undefined"!==typeof ArrayBuffer&&t instanceof ArrayBuffer?b(e,t,n,r):"string"===typeof t?f(e,t,n):g(e,t)}function d(e){if("number"!==typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function p(e,t,n,r){return d(t),t<=0?u(e,t):void 0!==n?"string"===typeof r?u(e,t).fill(n,r):u(e,t).fill(n):u(e,t)}function h(e,t){if(d(t),e=u(e,t<0?0:0|y(t)),!c.TYPED_ARRAY_SUPPORT)for(var n=0;n<t;++n)e[n]=0;return e}function f(e,t,n){if("string"===typeof n&&""!==n||(n="utf8"),!c.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var r=0|v(t,n);e=u(e,r);var a=e.write(t,n);return a!==r&&(e=e.slice(0,a)),e}function m(e,t){var n=t.length<0?0:0|y(t.length);e=u(e,n);for(var r=0;r<n;r+=1)e[r]=255&t[r];return e}function b(e,t,n,r){if(t.byteLength,n<0||t.byteLength<n)throw new RangeError("'offset' is out of bounds");if(t.byteLength<n+(r||0))throw new RangeError("'length' is out of bounds");return t=void 0===n&&void 0===r?new Uint8Array(t):void 0===r?new Uint8Array(t,n):new Uint8Array(t,n,r),c.TYPED_ARRAY_SUPPORT?(e=t,e.__proto__=c.prototype):e=m(e,t),e}function g(e,t){if(c.isBuffer(t)){var n=0|y(t.length);return e=u(e,n),0===e.length?e:(t.copy(e,0,0,n),e)}if(t){if("undefined"!==typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return"number"!==typeof t.length||te(t.length)?u(e,0):m(e,t);if("Buffer"===t.type&&o(t.data))return m(e,t.data)}throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}function y(e){if(e>=i())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+i().toString(16)+" bytes");return 0|e}function x(e){return+e!=e&&(e=0),c.alloc(+e)}function v(e,t){if(c.isBuffer(e))return e.length;if("undefined"!==typeof ArrayBuffer&&"function"===typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!==typeof e&&(e=""+e);var n=e.length;if(0===n)return 0;for(var r=!1;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return Y(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return J(e).length;default:if(r)return Y(e).length;t=(""+t).toLowerCase(),r=!0}}function O(e,t,n){var r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if(n>>>=0,t>>>=0,n<=t)return"";e||(e="utf8");while(1)switch(e){case"hex":return M(this,t,n);case"utf8":case"utf-8":return A(this,t,n);case"ascii":return F(this,t,n);case"latin1":case"binary":return D(this,t,n);case"base64":return E(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return P(this,t,n);default:if(r)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0}}function w(e,t,n){var r=e[t];e[t]=e[n],e[n]=r}function k(e,t,n,r,a){if(0===e.length)return-1;if("string"===typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=a?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(a)return-1;n=e.length-1}else if(n<0){if(!a)return-1;n=0}if("string"===typeof t&&(t=c.from(t,r)),c.isBuffer(t))return 0===t.length?-1:j(e,t,n,r,a);if("number"===typeof t)return t&=255,c.TYPED_ARRAY_SUPPORT&&"function"===typeof Uint8Array.prototype.indexOf?a?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):j(e,[t],n,r,a);throw new TypeError("val must be string, number or Buffer")}function j(e,t,n,r,a){var o,s=1,i=e.length,u=t.length;if(void 0!==r&&(r=String(r).toLowerCase(),"ucs2"===r||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(e.length<2||t.length<2)return-1;s=2,i/=2,u/=2,n/=2}function c(e,t){return 1===s?e[t]:e.readUInt16BE(t*s)}if(a){var l=-1;for(o=n;o<i;o++)if(c(e,o)===c(t,-1===l?0:o-l)){if(-1===l&&(l=o),o-l+1===u)return l*s}else-1!==l&&(o-=o-l),l=-1}else for(n+u>i&&(n=i-u),o=n;o>=0;o--){for(var d=!0,p=0;p<u;p++)if(c(e,o+p)!==c(t,p)){d=!1;break}if(d)return o}return-1}function S(e,t,n,r){n=Number(n)||0;var a=e.length-n;r?(r=Number(r),r>a&&(r=a)):r=a;var o=t.length;if(o%2!==0)throw new TypeError("Invalid hex string");r>o/2&&(r=o/2);for(var s=0;s<r;++s){var i=parseInt(t.substr(2*s,2),16);if(isNaN(i))return s;e[n+s]=i}return s}function T(e,t,n,r){return ee(Y(t,e.length-n),e,n,r)}function I(e,t,n,r){return ee(Q(t),e,n,r)}function N(e,t,n,r){return I(e,t,n,r)}function C(e,t,n,r){return ee(J(t),e,n,r)}function $(e,t,n,r){return ee(Z(t,e.length-n),e,n,r)}function E(e,t,n){return 0===t&&n===e.length?r.fromByteArray(e):r.fromByteArray(e.slice(t,n))}function A(e,t,n){n=Math.min(e.length,n);var r=[],a=t;while(a<n){var o,s,i,u,c=e[a],l=null,d=c>239?4:c>223?3:c>191?2:1;if(a+d<=n)switch(d){case 1:c<128&&(l=c);break;case 2:o=e[a+1],128===(192&o)&&(u=(31&c)<<6|63&o,u>127&&(l=u));break;case 3:o=e[a+1],s=e[a+2],128===(192&o)&&128===(192&s)&&(u=(15&c)<<12|(63&o)<<6|63&s,u>2047&&(u<55296||u>57343)&&(l=u));break;case 4:o=e[a+1],s=e[a+2],i=e[a+3],128===(192&o)&&128===(192&s)&&128===(192&i)&&(u=(15&c)<<18|(63&o)<<12|(63&s)<<6|63&i,u>65535&&u<1114112&&(l=u))}null===l?(l=65533,d=1):l>65535&&(l-=65536,r.push(l>>>10&1023|55296),l=56320|1023&l),r.push(l),a+=d}return _(r)}t.Buffer=c,t.SlowBuffer=x,t.INSPECT_MAX_BYTES=50,c.TYPED_ARRAY_SUPPORT=void 0!==e.TYPED_ARRAY_SUPPORT?e.TYPED_ARRAY_SUPPORT:s(),t.kMaxLength=i(),c.poolSize=8192,c._augment=function(e){return e.__proto__=c.prototype,e},c.from=function(e,t,n){return l(null,e,t,n)},c.TYPED_ARRAY_SUPPORT&&(c.prototype.__proto__=Uint8Array.prototype,c.__proto__=Uint8Array,"undefined"!==typeof Symbol&&Symbol.species&&c[Symbol.species]===c&&Object.defineProperty(c,Symbol.species,{value:null,configurable:!0})),c.alloc=function(e,t,n){return p(null,e,t,n)},c.allocUnsafe=function(e){return h(null,e)},c.allocUnsafeSlow=function(e){return h(null,e)},c.isBuffer=function(e){return!(null==e||!e._isBuffer)},c.compare=function(e,t){if(!c.isBuffer(e)||!c.isBuffer(t))throw new TypeError("Arguments must be Buffers");if(e===t)return 0;for(var n=e.length,r=t.length,a=0,o=Math.min(n,r);a<o;++a)if(e[a]!==t[a]){n=e[a],r=t[a];break}return n<r?-1:r<n?1:0},c.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},c.concat=function(e,t){if(!o(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return c.alloc(0);var n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;var r=c.allocUnsafe(t),a=0;for(n=0;n<e.length;++n){var s=e[n];if(!c.isBuffer(s))throw new TypeError('"list" argument must be an Array of Buffers');s.copy(r,a),a+=s.length}return r},c.byteLength=v,c.prototype._isBuffer=!0,c.prototype.swap16=function(){var e=this.length;if(e%2!==0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)w(this,t,t+1);return this},c.prototype.swap32=function(){var e=this.length;if(e%4!==0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)w(this,t,t+3),w(this,t+1,t+2);return this},c.prototype.swap64=function(){var e=this.length;if(e%8!==0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)w(this,t,t+7),w(this,t+1,t+6),w(this,t+2,t+5),w(this,t+3,t+4);return this},c.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?A(this,0,e):O.apply(this,arguments)},c.prototype.equals=function(e){if(!c.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===c.compare(this,e)},c.prototype.inspect=function(){var e="",n=t.INSPECT_MAX_BYTES;return this.length>0&&(e=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(e+=" ... ")),"<Buffer "+e+">"},c.prototype.compare=function(e,t,n,r,a){if(!c.isBuffer(e))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===a&&(a=this.length),t<0||n>e.length||r<0||a>this.length)throw new RangeError("out of range index");if(r>=a&&t>=n)return 0;if(r>=a)return-1;if(t>=n)return 1;if(t>>>=0,n>>>=0,r>>>=0,a>>>=0,this===e)return 0;for(var o=a-r,s=n-t,i=Math.min(o,s),u=this.slice(r,a),l=e.slice(t,n),d=0;d<i;++d)if(u[d]!==l[d]){o=u[d],s=l[d];break}return o<s?-1:s<o?1:0},c.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},c.prototype.indexOf=function(e,t,n){return k(this,e,t,n,!0)},c.prototype.lastIndexOf=function(e,t,n){return k(this,e,t,n,!1)},c.prototype.write=function(e,t,n,r){if(void 0===t)r="utf8",n=this.length,t=0;else if(void 0===n&&"string"===typeof t)r=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t|=0,isFinite(n)?(n|=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var a=this.length-t;if((void 0===n||n>a)&&(n=a),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var o=!1;;)switch(r){case"hex":return S(this,e,t,n);case"utf8":case"utf-8":return T(this,e,t,n);case"ascii":return I(this,e,t,n);case"latin1":case"binary":return N(this,e,t,n);case"base64":return C(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return $(this,e,t,n);default:if(o)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),o=!0}},c.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var R=4096;function _(e){var t=e.length;if(t<=R)return String.fromCharCode.apply(String,e);var n="",r=0;while(r<t)n+=String.fromCharCode.apply(String,e.slice(r,r+=R));return n}function F(e,t,n){var r="";n=Math.min(e.length,n);for(var a=t;a<n;++a)r+=String.fromCharCode(127&e[a]);return r}function D(e,t,n){var r="";n=Math.min(e.length,n);for(var a=t;a<n;++a)r+=String.fromCharCode(e[a]);return r}function M(e,t,n){var r=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>r)&&(n=r);for(var a="",o=t;o<n;++o)a+=X(e[o]);return a}function P(e,t,n){for(var r=e.slice(t,n),a="",o=0;o<r.length;o+=2)a+=String.fromCharCode(r[o]+256*r[o+1]);return a}function L(e,t,n){if(e%1!==0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function B(e,t,n,r,a,o){if(!c.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>a||t<o)throw new RangeError('"value" argument is out of bounds');if(n+r>e.length)throw new RangeError("Index out of range")}function V(e,t,n,r){t<0&&(t=65535+t+1);for(var a=0,o=Math.min(e.length-n,2);a<o;++a)e[n+a]=(t&255<<8*(r?a:1-a))>>>8*(r?a:1-a)}function z(e,t,n,r){t<0&&(t=4294967295+t+1);for(var a=0,o=Math.min(e.length-n,4);a<o;++a)e[n+a]=t>>>8*(r?a:3-a)&255}function W(e,t,n,r,a,o){if(n+r>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function U(e,t,n,r,o){return o||W(e,t,n,4,34028234663852886e22,-34028234663852886e22),a.write(e,t,n,r,23,4),n+4}function G(e,t,n,r,o){return o||W(e,t,n,8,17976931348623157e292,-17976931348623157e292),a.write(e,t,n,r,52,8),n+8}c.prototype.slice=function(e,t){var n,r=this.length;if(e=~~e,t=void 0===t?r:~~t,e<0?(e+=r,e<0&&(e=0)):e>r&&(e=r),t<0?(t+=r,t<0&&(t=0)):t>r&&(t=r),t<e&&(t=e),c.TYPED_ARRAY_SUPPORT)n=this.subarray(e,t),n.__proto__=c.prototype;else{var a=t-e;n=new c(a,void 0);for(var o=0;o<a;++o)n[o]=this[o+e]}return n},c.prototype.readUIntLE=function(e,t,n){e|=0,t|=0,n||L(e,t,this.length);var r=this[e],a=1,o=0;while(++o<t&&(a*=256))r+=this[e+o]*a;return r},c.prototype.readUIntBE=function(e,t,n){e|=0,t|=0,n||L(e,t,this.length);var r=this[e+--t],a=1;while(t>0&&(a*=256))r+=this[e+--t]*a;return r},c.prototype.readUInt8=function(e,t){return t||L(e,1,this.length),this[e]},c.prototype.readUInt16LE=function(e,t){return t||L(e,2,this.length),this[e]|this[e+1]<<8},c.prototype.readUInt16BE=function(e,t){return t||L(e,2,this.length),this[e]<<8|this[e+1]},c.prototype.readUInt32LE=function(e,t){return t||L(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},c.prototype.readUInt32BE=function(e,t){return t||L(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},c.prototype.readIntLE=function(e,t,n){e|=0,t|=0,n||L(e,t,this.length);var r=this[e],a=1,o=0;while(++o<t&&(a*=256))r+=this[e+o]*a;return a*=128,r>=a&&(r-=Math.pow(2,8*t)),r},c.prototype.readIntBE=function(e,t,n){e|=0,t|=0,n||L(e,t,this.length);var r=t,a=1,o=this[e+--r];while(r>0&&(a*=256))o+=this[e+--r]*a;return a*=128,o>=a&&(o-=Math.pow(2,8*t)),o},c.prototype.readInt8=function(e,t){return t||L(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},c.prototype.readInt16LE=function(e,t){t||L(e,2,this.length);var n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},c.prototype.readInt16BE=function(e,t){t||L(e,2,this.length);var n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},c.prototype.readInt32LE=function(e,t){return t||L(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},c.prototype.readInt32BE=function(e,t){return t||L(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},c.prototype.readFloatLE=function(e,t){return t||L(e,4,this.length),a.read(this,e,!0,23,4)},c.prototype.readFloatBE=function(e,t){return t||L(e,4,this.length),a.read(this,e,!1,23,4)},c.prototype.readDoubleLE=function(e,t){return t||L(e,8,this.length),a.read(this,e,!0,52,8)},c.prototype.readDoubleBE=function(e,t){return t||L(e,8,this.length),a.read(this,e,!1,52,8)},c.prototype.writeUIntLE=function(e,t,n,r){if(e=+e,t|=0,n|=0,!r){var a=Math.pow(2,8*n)-1;B(this,e,t,n,a,0)}var o=1,s=0;this[t]=255&e;while(++s<n&&(o*=256))this[t+s]=e/o&255;return t+n},c.prototype.writeUIntBE=function(e,t,n,r){if(e=+e,t|=0,n|=0,!r){var a=Math.pow(2,8*n)-1;B(this,e,t,n,a,0)}var o=n-1,s=1;this[t+o]=255&e;while(--o>=0&&(s*=256))this[t+o]=e/s&255;return t+n},c.prototype.writeUInt8=function(e,t,n){return e=+e,t|=0,n||B(this,e,t,1,255,0),c.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},c.prototype.writeUInt16LE=function(e,t,n){return e=+e,t|=0,n||B(this,e,t,2,65535,0),c.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):V(this,e,t,!0),t+2},c.prototype.writeUInt16BE=function(e,t,n){return e=+e,t|=0,n||B(this,e,t,2,65535,0),c.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):V(this,e,t,!1),t+2},c.prototype.writeUInt32LE=function(e,t,n){return e=+e,t|=0,n||B(this,e,t,4,4294967295,0),c.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):z(this,e,t,!0),t+4},c.prototype.writeUInt32BE=function(e,t,n){return e=+e,t|=0,n||B(this,e,t,4,4294967295,0),c.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):z(this,e,t,!1),t+4},c.prototype.writeIntLE=function(e,t,n,r){if(e=+e,t|=0,!r){var a=Math.pow(2,8*n-1);B(this,e,t,n,a-1,-a)}var o=0,s=1,i=0;this[t]=255&e;while(++o<n&&(s*=256))e<0&&0===i&&0!==this[t+o-1]&&(i=1),this[t+o]=(e/s>>0)-i&255;return t+n},c.prototype.writeIntBE=function(e,t,n,r){if(e=+e,t|=0,!r){var a=Math.pow(2,8*n-1);B(this,e,t,n,a-1,-a)}var o=n-1,s=1,i=0;this[t+o]=255&e;while(--o>=0&&(s*=256))e<0&&0===i&&0!==this[t+o+1]&&(i=1),this[t+o]=(e/s>>0)-i&255;return t+n},c.prototype.writeInt8=function(e,t,n){return e=+e,t|=0,n||B(this,e,t,1,127,-128),c.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},c.prototype.writeInt16LE=function(e,t,n){return e=+e,t|=0,n||B(this,e,t,2,32767,-32768),c.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):V(this,e,t,!0),t+2},c.prototype.writeInt16BE=function(e,t,n){return e=+e,t|=0,n||B(this,e,t,2,32767,-32768),c.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):V(this,e,t,!1),t+2},c.prototype.writeInt32LE=function(e,t,n){return e=+e,t|=0,n||B(this,e,t,4,2147483647,-2147483648),c.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):z(this,e,t,!0),t+4},c.prototype.writeInt32BE=function(e,t,n){return e=+e,t|=0,n||B(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),c.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):z(this,e,t,!1),t+4},c.prototype.writeFloatLE=function(e,t,n){return U(this,e,t,!0,n)},c.prototype.writeFloatBE=function(e,t,n){return U(this,e,t,!1,n)},c.prototype.writeDoubleLE=function(e,t,n){return G(this,e,t,!0,n)},c.prototype.writeDoubleBE=function(e,t,n){return G(this,e,t,!1,n)},c.prototype.copy=function(e,t,n,r){if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);var a,o=r-n;if(this===e&&n<t&&t<r)for(a=o-1;a>=0;--a)e[a+t]=this[a+n];else if(o<1e3||!c.TYPED_ARRAY_SUPPORT)for(a=0;a<o;++a)e[a+t]=this[a+n];else Uint8Array.prototype.set.call(e,this.subarray(n,n+o),t);return o},c.prototype.fill=function(e,t,n,r){if("string"===typeof e){if("string"===typeof t?(r=t,t=0,n=this.length):"string"===typeof n&&(r=n,n=this.length),1===e.length){var a=e.charCodeAt(0);a<256&&(e=a)}if(void 0!==r&&"string"!==typeof r)throw new TypeError("encoding must be a string");if("string"===typeof r&&!c.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else"number"===typeof e&&(e&=255);if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;var o;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"===typeof e)for(o=t;o<n;++o)this[o]=e;else{var s=c.isBuffer(e)?e:Y(new c(e,r).toString()),i=s.length;for(o=0;o<n-t;++o)this[o+t]=s[o%i]}return this};var H=/[^+\/0-9A-Za-z-_]/g;function q(e){if(e=K(e).replace(H,""),e.length<2)return"";while(e.length%4!==0)e+="=";return e}function K(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}function X(e){return e<16?"0"+e.toString(16):e.toString(16)}function Y(e,t){var n;t=t||1/0;for(var r=e.length,a=null,o=[],s=0;s<r;++s){if(n=e.charCodeAt(s),n>55295&&n<57344){if(!a){if(n>56319){(t-=3)>-1&&o.push(239,191,189);continue}if(s+1===r){(t-=3)>-1&&o.push(239,191,189);continue}a=n;continue}if(n<56320){(t-=3)>-1&&o.push(239,191,189),a=n;continue}n=65536+(a-55296<<10|n-56320)}else a&&(t-=3)>-1&&o.push(239,191,189);if(a=null,n<128){if((t-=1)<0)break;o.push(n)}else if(n<2048){if((t-=2)<0)break;o.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;o.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;o.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return o}function Q(e){for(var t=[],n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}function Z(e,t){for(var n,r,a,o=[],s=0;s<e.length;++s){if((t-=2)<0)break;n=e.charCodeAt(s),r=n>>8,a=n%256,o.push(a),o.push(r)}return o}function J(e){return r.toByteArray(q(e))}function ee(e,t,n,r){for(var a=0;a<r;++a){if(a+n>=t.length||a>=e.length)break;t[a+n]=e[a]}return a}function te(e){return e!==e}}).call(this,n("c8ba"))},b818:function(e,t,n){"use strict";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function r(e,t,n,r,a="NHWC",o){const i=e[3],u=[...t,i],c=x(a);return s(e,u,n,o,r,null,null,c)}function a(e,t,n,r,a,o,i="channelsLast"){const[u,c]=d(t);let l;if("channelsLast"===i)l=[u,c,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);l=[u,c,e[1],e[1]]}return s(e,l,n,r,a,o,!1,i)}function o(e,t,n,r,a,o,s="NDHWC"){const[u,c,l]=p(t);let d,h;if("NDHWC"===s)h="channelsLast",d=[u,c,l,e[4],e[4]];else{if("NCDHW"!==s)throw new Error("Unknown dataFormat "+s);h="channelsFirst",d=[u,c,l,e[1],e[1]]}return i(e,d,n,r,a,!1,h,o)}function s(e,t,n,r,a,o,s=!1,i="channelsLast"){let[u,c,l,p]=[-1,-1,-1,-1];if("channelsLast"===i)[u,c,l,p]=e;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);[u,p,c,l]=e}const[m,b,,g]=t,[y,x]=d(n),[v,O]=d(r),w=h(m,v),k=h(b,O),{padInfo:j,outHeight:S,outWidth:T}=f(a,c,l,y,x,w,k,o,i),I=s?g*p:g;let N;return"channelsFirst"===i?N=[u,I,S,T]:"channelsLast"===i&&(N=[u,S,T,I]),{batchSize:u,dataFormat:i,inHeight:c,inWidth:l,inChannels:p,outHeight:S,outWidth:T,outChannels:I,padInfo:j,strideHeight:y,strideWidth:x,filterHeight:m,filterWidth:b,effectiveFilterHeight:w,effectiveFilterWidth:k,dilationHeight:v,dilationWidth:O,inShape:e,outShape:N,filterShape:t}}function i(e,t,n,r,a,o=!1,s="channelsLast",i){let[u,c,l,d,f]=[-1,-1,-1,-1,-1];if("channelsLast"===s)[u,c,l,d,f]=e;else{if("channelsFirst"!==s)throw new Error("Unknown dataFormat "+s);[u,f,c,l,d]=e}const[b,g,y,,x]=t,[v,O,w]=p(n),[k,j,S]=p(r),T=h(b,k),I=h(g,j),N=h(y,S),{padInfo:C,outDepth:$,outHeight:E,outWidth:A}=m(a,c,l,d,v,O,w,T,I,N,i),R=o?x*f:x;let _;return"channelsFirst"===s?_=[u,R,$,E,A]:"channelsLast"===s&&(_=[u,$,E,A,R]),{batchSize:u,dataFormat:s,inDepth:c,inHeight:l,inWidth:d,inChannels:f,outDepth:$,outHeight:E,outWidth:A,outChannels:R,padInfo:C,strideDepth:v,strideHeight:O,strideWidth:w,filterDepth:b,filterHeight:g,filterWidth:y,effectiveFilterDepth:T,effectiveFilterHeight:I,effectiveFilterWidth:N,dilationDepth:k,dilationHeight:j,dilationWidth:S,inShape:e,outShape:_,filterShape:t}}function u(e,t,n,r,a){null==r&&(r=l(e,t,n));const o=e[0],s=e[1],i=b((o-t+2*r)/n+1,a),u=b((s-t+2*r)/n+1,a);return[i,u]}function c(e,t,n,r,a,o){null==a&&(a=l(e,t,r));const s=e[0],i=e[1],u=e[2],c=b((s-t+2*a)/r+1,o),d=b((i-t+2*a)/r+1,o),p=b((u-t+2*a)/r+1,o);return[c,d,p,n]}function l(e,t,n,r=1){const a=h(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function d(e){return"number"===typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function p(e){return"number"===typeof e?[e,e,e]:e}function h(e,t){return t<=1?e:e+(e-1)*(t-1)}function f(e,t,n,r,a,o,s,i,c){let l,d,p;if("number"===typeof e){const a=0===e?"VALID":"NUMBER";l={top:e,bottom:e,left:e,right:e,type:a};const s=u([t,n],o,r,e,i);d=s[0],p=s[1]}else if("same"===e){d=Math.ceil(t/r),p=Math.ceil(n/a);const e=Math.max(0,(d-1)*r+o-t),i=Math.max(0,(p-1)*a+s-n),u=Math.floor(e/2),c=e-u,h=Math.floor(i/2),f=i-h;l={top:u,bottom:c,left:h,right:f,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-o+1)/r),p=Math.ceil((n-s+1)/a);else{if("object"!==typeof e)throw Error("Unknown padding parameter: "+e);{const u="channelsLast"===c?e[1][0]:e[2][0],h="channelsLast"===c?e[1][1]:e[2][1],f="channelsLast"===c?e[2][0]:e[3][0],m="channelsLast"===c?e[2][1]:e[3][1],g=0===u&&0===h&&0===f&&0===m?"VALID":"EXPLICIT";l={top:u,bottom:h,left:f,right:m,type:g},d=b((t-o+u+h)/r+1,i),p=b((n-s+f+m)/a+1,i)}}return{padInfo:l,outHeight:d,outWidth:p}}function m(e,t,n,r,a,o,s,i,u,l,d){let p,h,f,m;if("number"===typeof e){const o=0===e?"VALID":"NUMBER";p={top:e,bottom:e,left:e,right:e,front:e,back:e,type:o};const s=c([t,n,r,1],i,1,a,e,d);h=s[0],f=s[1],m=s[2]}else if("same"===e){h=Math.ceil(t/a),f=Math.ceil(n/o),m=Math.ceil(r/s);const e=(h-1)*a+i-t,c=(f-1)*o+u-n,d=(m-1)*s+l-r,b=Math.floor(e/2),g=e-b,y=Math.floor(c/2),x=c-y,v=Math.floor(d/2),O=d-v;p={top:y,bottom:x,left:v,right:O,front:b,back:g,type:"SAME"}}else{if("valid"!==e)throw Error("Unknown padding parameter: "+e);p={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},h=Math.ceil((t-i+1)/a),f=Math.ceil((n-u+1)/o),m=Math.ceil((r-l+1)/s)}return{padInfo:p,outDepth:h,outHeight:f,outWidth:m}}function b(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode "+t)}}function g(e){const[t,n,r]=d(e);return 1===t&&1===n&&1===r}function y(e,t){return g(e)||g(t)}function x(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat "+e)}n.d(t,"d",(function(){return r})),n.d(t,"e",(function(){return a})),n.d(t,"f",(function(){return o})),n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return i})),n.d(t,"c",(function(){return l})),n.d(t,"i",(function(){return g})),n.d(t,"h",(function(){return y})),n.d(t,"g",(function(){return x}))},b838:function(e,t,n){(function(e){var r;(function(e,a,o){function s(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n("07d6")&&n("3c35")?(r=function(){return u}.call(t,n,t,a),void 0===r||(a.exports=r)):this.xor128=u})(0,e,n("07d6"))}).call(this,n("62e4")(e))},b9b9:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),o=n("76c2"),s=n("a3f7"),i=n("526f"),u=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t){let n=Object(s["a"])(e,"a","equal","string_or_numeric"),u=Object(s["a"])(t,"b","equal","string_or_numeric");[n,u]=Object(o["makeTypesMatch"])(n,u),Object(i["a"])(n.shape,u.shape);const c={a:n,b:u};return r["a"].runKernel(a["Y"],c)}const l=Object(u["b"])({equal_:c})},ba40:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t){const n=Object(o["a"])(t,"indices","gatherND","int32"),s=Object(o["a"])(e,"x","gatherND","string_or_numeric"),i={params:s,indices:n};return r["a"].runKernel(a["mb"],i)}const u=Object(s["b"])({gatherND_:i})},ba53:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("6ad5"),i=n("deb3"),u=n("54ef"),c=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function l(e,t,n,u,l,d="NDHWC"){const p=Object(o["a"])(e,"x","avgPool3d","float32");let h=p,f=!1;4===p.rank&&(f=!0,h=Object(c["a"])(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]])),s["b"](5===h.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${h.rank}.`),s["b"]("NDHWC"===d,()=>"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of "+d),null!=l&&s["b"](s["v"](u),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${l} but got pad ${u}.`);const m={x:h},b={filterSize:t,strides:n,pad:u,dimRoundingMode:l,dataFormat:d};let g=r["a"].runKernel(a["p"],m,b);return g=Object(i["a"])(g,h.dtype),f?Object(c["a"])(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}const d=Object(u["b"])({avgPool3d_:l})},bb2d:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),o=n("76c2"),s=n("a3f7"),i=n("526f"),u=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t){let n=Object(s["a"])(e,"a","greaterEqual","string_or_numeric"),u=Object(s["a"])(t,"b","greaterEqual","string_or_numeric");[n,u]=Object(o["makeTypesMatch"])(n,u),Object(i["a"])(n.shape,u.shape);const c={a:n,b:u};return r["a"].runKernel(a["pb"],c)}const l=Object(u["b"])({greaterEqual_:c})},bc62:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b");function o(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,o=e.rank>1?e.shape[1]:1;if(n.length!==o)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${o}.`);const s=t.size;if(0!==t.rank&&(1!==t.rank||s!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}var s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t,n,i=0){const u=Object(s["a"])(e,"sparseIndices","sparseToDense","int32"),c=Object(s["a"])(t,"sparseValues","sparseToDense"),l=Object(s["a"])(i,"defaultValue","sparseToDense",c.dtype);o(u,c,n,l);const d={sparseIndices:u,sparseValues:c,defaultValue:l},p={outputShape:n};return r["a"].runKernel(a["Nc"],d,p)}const c=Object(i["b"])({sparseToDense_:u})},c021:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t=null,n=!1){const s=Object(o["a"])(e,"x","max"),i={x:s},u={reductionIndices:t,keepDims:n};return r["a"].runKernel(a["Ib"],i,u)}const u=Object(s["b"])({max_:i})},c04e:function(e,t,n){"use strict";n.d(t,"g",(function(){return i})),n.d(t,"f",(function(){return u})),n.d(t,"c",(function(){return c})),n.d(t,"b",(function(){return l})),n.d(t,"e",(function(){return d})),n.d(t,"h",(function(){return p})),n.d(t,"m",(function(){return h})),n.d(t,"n",(function(){return f})),n.d(t,"t",(function(){return m})),n.d(t,"d",(function(){return b})),n.d(t,"l",(function(){return g})),n.d(t,"u",(function(){return y})),n.d(t,"r",(function(){return x})),n.d(t,"o",(function(){return v})),n.d(t,"k",(function(){return O})),n.d(t,"q",(function(){return w})),n.d(t,"i",(function(){return k})),n.d(t,"j",(function(){return j})),n.d(t,"p",(function(){return S})),n.d(t,"a",(function(){return T})),n.d(t,"s",(function(){return I}));var r=n("6ae2"),a=n("b333"),o=n("34d7"),s=n("76c2");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(){Object(a["c"])().set("PROD",!0)}function u(){Object(a["c"])().set("DEBUG",!0)}function c(){Object(a["c"])().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function l(e){Object(a["c"])().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function d(){r["a"].disposeVariables()}function p(){return r["a"]}function h(){return r["a"].memory()}function f(e){return r["a"].profile(e)}function m(e,t){return r["a"].tidy(e,t)}function b(e){const t=Object(s["getTensorsInContainer"])(e);t.forEach(e=>e.dispose())}function g(e){return r["a"].keep(e)}function y(e){return r["a"].time(e)}function x(e){return r["a"].setBackend(e)}function v(){return r["a"].ready()}function O(){return r["a"].backendName}function w(e){r["a"].removeBackend(e)}function k(e){return r["a"].findBackend(e)}function j(e){return r["a"].findBackendFactory(e)}function S(e,t,n=1){return r["a"].registerBackend(e,t,n)}function T(){return r["a"].backend}function I(e,t){Object(a["c"])().setPlatform(e,t)}Object(o["d"])(l)},c05b:function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return a})),n.d(t,"c",(function(){return o})),n.d(t,"d",(function(){return s})),n.d(t,"e",(function(){return i})),n.d(t,"f",(function(){return u})),n.d(t,"g",(function(){return c})),n.d(t,"h",(function(){return l})),n.d(t,"i",(function(){return d})),n.d(t,"j",(function(){return p})),n.d(t,"k",(function(){return h})),n.d(t,"l",(function(){return f})),n.d(t,"n",(function(){return m})),n.d(t,"m",(function(){return b})),n.d(t,"o",(function(){return g})),n.d(t,"r",(function(){return y})),n.d(t,"p",(function(){return x})),n.d(t,"q",(function(){return v})),n.d(t,"s",(function(){return O})),n.d(t,"t",(function(){return w})),n.d(t,"u",(function(){return k})),n.d(t,"v",(function(){return j})),n.d(t,"w",(function(){return S})),n.d(t,"x",(function(){return T})),n.d(t,"y",(function(){return I})),n.d(t,"z",(function(){return N})),n.d(t,"A",(function(){return C})),n.d(t,"B",(function(){return $})),n.d(t,"C",(function(){return E})),n.d(t,"D",(function(){return A})),n.d(t,"E",(function(){return R})),n.d(t,"F",(function(){return _})),n.d(t,"G",(function(){return F})),n.d(t,"H",(function(){return D})),n.d(t,"I",(function(){return M})),n.d(t,"J",(function(){return P})),n.d(t,"L",(function(){return L})),n.d(t,"K",(function(){return B})),n.d(t,"M",(function(){return V})),n.d(t,"N",(function(){return z})),n.d(t,"O",(function(){return W})),n.d(t,"P",(function(){return U})),n.d(t,"Q",(function(){return G})),n.d(t,"R",(function(){return H})),n.d(t,"S",(function(){return q})),n.d(t,"U",(function(){return K})),n.d(t,"T",(function(){return X})),n.d(t,"lc",(function(){return Y})),n.d(t,"V",(function(){return Q})),n.d(t,"W",(function(){return Z})),n.d(t,"X",(function(){return J})),n.d(t,"Z",(function(){return ee})),n.d(t,"Y",(function(){return te})),n.d(t,"ab",(function(){return ne})),n.d(t,"bb",(function(){return re})),n.d(t,"cb",(function(){return ae})),n.d(t,"db",(function(){return oe})),n.d(t,"eb",(function(){return se})),n.d(t,"fb",(function(){return ie})),n.d(t,"gb",(function(){return ue})),n.d(t,"hb",(function(){return ce})),n.d(t,"jb",(function(){return le})),n.d(t,"nb",(function(){return de})),n.d(t,"mb",(function(){return pe})),n.d(t,"ob",(function(){return he})),n.d(t,"pb",(function(){return fe})),n.d(t,"rb",(function(){return me})),n.d(t,"qb",(function(){return be})),n.d(t,"sb",(function(){return ge})),n.d(t,"tb",(function(){return ye})),n.d(t,"ub",(function(){return xe})),n.d(t,"vb",(function(){return ve})),n.d(t,"yb",(function(){return Oe})),n.d(t,"zb",(function(){return we})),n.d(t,"Ab",(function(){return ke})),n.d(t,"Bb",(function(){return je})),n.d(t,"Cb",(function(){return Se})),n.d(t,"Db",(function(){return Te})),n.d(t,"Fb",(function(){return Ie})),n.d(t,"Gb",(function(){return Ne})),n.d(t,"Hb",(function(){return Ce})),n.d(t,"Eb",(function(){return $e})),n.d(t,"wb",(function(){return Ee})),n.d(t,"xb",(function(){return Ae})),n.d(t,"Ib",(function(){return Re})),n.d(t,"Ob",(function(){return _e})),n.d(t,"Jb",(function(){return Fe})),n.d(t,"Mb",(function(){return De})),n.d(t,"Kb",(function(){return Me})),n.d(t,"Lb",(function(){return Pe})),n.d(t,"Nb",(function(){return Le})),n.d(t,"Pb",(function(){return Be})),n.d(t,"Qb",(function(){return Ve})),n.d(t,"Rb",(function(){return ze})),n.d(t,"Sb",(function(){return We})),n.d(t,"Tb",(function(){return Ue})),n.d(t,"Ub",(function(){return Ge})),n.d(t,"Vb",(function(){return He})),n.d(t,"Wb",(function(){return qe})),n.d(t,"ac",(function(){return Ke})),n.d(t,"Xb",(function(){return Xe})),n.d(t,"Yb",(function(){return Ye})),n.d(t,"Zb",(function(){return Qe})),n.d(t,"cc",(function(){return Ze})),n.d(t,"bc",(function(){return Je})),n.d(t,"dc",(function(){return et})),n.d(t,"ec",(function(){return tt})),n.d(t,"fc",(function(){return nt})),n.d(t,"gc",(function(){return rt})),n.d(t,"hc",(function(){return at})),n.d(t,"ic",(function(){return ot})),n.d(t,"jc",(function(){return st})),n.d(t,"kc",(function(){return it})),n.d(t,"mc",(function(){return ut})),n.d(t,"nc",(function(){return ct})),n.d(t,"pc",(function(){return lt})),n.d(t,"sc",(function(){return dt})),n.d(t,"tc",(function(){return pt})),n.d(t,"qc",(function(){return ht})),n.d(t,"rc",(function(){return ft})),n.d(t,"oc",(function(){return mt})),n.d(t,"uc",(function(){return bt})),n.d(t,"wc",(function(){return gt})),n.d(t,"xc",(function(){return yt})),n.d(t,"yc",(function(){return xt})),n.d(t,"zc",(function(){return vt})),n.d(t,"Ac",(function(){return Ot})),n.d(t,"Fc",(function(){return wt})),n.d(t,"Dc",(function(){return kt})),n.d(t,"Ec",(function(){return jt})),n.d(t,"Cc",(function(){return St})),n.d(t,"Bc",(function(){return Tt})),n.d(t,"Hc",(function(){return It})),n.d(t,"Pc",(function(){return Nt})),n.d(t,"Yc",(function(){return Ct})),n.d(t,"Ic",(function(){return $t})),n.d(t,"Oc",(function(){return Et})),n.d(t,"Gc",(function(){return At})),n.d(t,"Jc",(function(){return Rt})),n.d(t,"Kc",(function(){return _t})),n.d(t,"Lc",(function(){return Ft})),n.d(t,"Mc",(function(){return Dt})),n.d(t,"Nc",(function(){return Mt})),n.d(t,"Rc",(function(){return Pt})),n.d(t,"Qc",(function(){return Lt})),n.d(t,"Tc",(function(){return Bt})),n.d(t,"Uc",(function(){return Vt})),n.d(t,"Vc",(function(){return zt})),n.d(t,"Wc",(function(){return Wt})),n.d(t,"Xc",(function(){return Ut})),n.d(t,"Zc",(function(){return Gt})),n.d(t,"ad",(function(){return Ht})),n.d(t,"bd",(function(){return qt})),n.d(t,"cd",(function(){return Kt})),n.d(t,"dd",(function(){return Xt})),n.d(t,"ed",(function(){return Yt})),n.d(t,"fd",(function(){return Qt})),n.d(t,"gd",(function(){return Zt})),n.d(t,"hd",(function(){return Jt})),n.d(t,"id",(function(){return en})),n.d(t,"Sc",(function(){return tn})),n.d(t,"ib",(function(){return nn})),n.d(t,"vc",(function(){return rn})),n.d(t,"jd",(function(){return an})),n.d(t,"kb",(function(){return on})),n.d(t,"lb",(function(){return sn}));const r="Abs",a="Acos",o="Acosh",s="Add",i="AddN",u="All",c="Any",l="ArgMax",d="ArgMin",p="Asin",h="Asinh",f="Atan",m="Atanh",b="Atan2",g="AvgPool",y="AvgPoolGrad",x="AvgPool3D",v="AvgPool3DGrad",O="BatchMatMul",w="BatchToSpaceND",k="Bincount",j="BroadcastTo",S="Cast",T="Ceil",I="ClipByValue",N="Complex",C="ComplexAbs",$="Concat",E="Conv2D",A="Conv2DBackpropFilter",R="Conv2DBackpropInput",_="Conv3D",F="Conv3DBackpropFilterV2",D="Conv3DBackpropInputV2",M="Cos",P="Cosh",L="Cumsum",B="CropAndResize",V="DenseBincount",z="DepthToSpace",W="DepthwiseConv2dNative",U="DepthwiseConv2dNativeBackpropFilter",G="DepthwiseConv2dNativeBackpropInput",H="Diag",q="Dilation2D",K="Dilation2DBackpropInput",X="Dilation2DBackpropFilter",Y="RealDiv",Q="Einsum",Z="Elu",J="EluGrad",ee="Erf",te="Equal",ne="Exp",re="ExpandDims",ae="Expm1",oe="FFT",se="Fill",ie="FlipLeftRight",ue="Floor",ce="FloorDiv",le="FusedBatchNorm",de="GatherV2",pe="GatherNd",he="Greater",fe="GreaterEqual",me="Identity",be="IFFT",ge="Imag",ye="IsFinite",xe="IsInf",ve="IsNan",Oe="LeakyRelu",we="Less",ke="LessEqual",je="LinSpace",Se="Log",Te="Log1p",Ie="LogicalAnd",Ne="LogicalNot",Ce="LogicalOr",$e="LogSoftmax",Ee="LRN",Ae="LRNGrad",Re="Max",_e="Maximum",Fe="MaxPool",De="MaxPoolGrad",Me="MaxPool3D",Pe="MaxPool3DGrad",Le="MaxPoolWithArgmax",Be="Mean",Ve="Min",ze="Minimum",We="MirrorPad",Ue="Mod",Ge="Multinomial",He="Multiply",qe="Neg",Ke="NotEqual",Xe="NonMaxSuppressionV3",Ye="NonMaxSuppressionV4",Qe="NonMaxSuppressionV5",Ze="OnesLike",Je="OneHot",et="Pack",tt="PadV2",nt="Pool",rt="Pow",at="Prelu",ot="Prod",st="Range",it="Real",ut="Reciprocal",ct="Relu",lt="Reshape",dt="ResizeNearestNeighbor",pt="ResizeNearestNeighborGrad",ht="ResizeBilinear",ft="ResizeBilinearGrad",mt="Relu6",bt="Reverse",gt="Round",yt="Rsqrt",xt="ScatterNd",vt="Select",Ot="Selu",wt="Slice",kt="Sin",jt="Sinh",St="Sign",Tt="Sigmoid",It="Softplus",Nt="Sqrt",Ct="Sum",$t="SpaceToBatchND",Et="SplitV",At="Softmax",Rt="SparseFillEmptyRows",_t="SparseReshape",Ft="SparseSegmentMean",Dt="SparseSegmentSum",Mt="SparseToDense",Pt="SquaredDifference",Lt="Square",Bt="StridedSlice",Vt="StringNGrams",zt="StringSplit",Wt="StringToHashBucketFast",Ut="Sub",Gt="Tan",Ht="Tanh",qt="Tile",Kt="TopK",Xt="Transform",Yt="Transpose",Qt="Unique",Zt="Unpack",Jt="UnsortedSegmentSum",en="ZerosLike",tn="Step",nn="FromPixels",rn="RotateWithOffset",an="_FusedMatMul",on="FusedConv2D",sn="FusedDepthwiseConv2D"},c08f:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("6ad5"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t,n){const i=Object(o["a"])(e,"x","clipByValue");s["b"](t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`);const u={x:i},c={clipValueMin:t,clipValueMax:n};return r["a"].runKernel(a["y"],u,c)}const c=Object(i["b"])({clipByValue_:u})},c170:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("6ad5"),i=n("54ef"),u=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t,n,i,c=[1,1],l="NHWC"){const d=Object(o["a"])(e,"x","dilation2d"),p=Object(o["a"])(t,"filter","dilation2d");s["b"](3===d.rank||4===d.rank,()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+d.rank+"."),s["b"](3===p.rank,()=>"Error in dilation2d: filter must be rank 3, but got rank "+p.rank+"."),s["b"]("NHWC"===l,()=>"Error in dilation2d: Only NHWC is currently supported, but got dataFormat of "+l);let h=d,f=!1;3===d.rank&&(h=Object(u["a"])(d,[1,d.shape[0],d.shape[1],d.shape[2]]),f=!0);const m={x:h,filter:p},b={strides:n,pad:i,dilations:c},g=r["a"].runKernel(a["S"],m,b);return f?Object(u["a"])(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const l=Object(i["b"])({dilation2d_:c})},c1a2:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(o["a"])(e,"x","cosh"),n={x:t};return r["a"].runKernel(a["J"],n)}const u=Object(s["b"])({cosh_:i})},c22a:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("6ae2"),a=n("6ad5"),o=n("0777"),s=n("5a2c");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t="float32"){if("complex64"===t){const t=i(e,"float32"),n=Object(s["a"])(e,"float32");return Object(o["a"])(t,n)}const n=Object(a["D"])(Object(a["O"])(e),t);return r["a"].makeTensor(n,e,t)}},c77c:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),o=n("76c2"),s=n("a3f7"),i=n("508f"),u=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t){let n=Object(s["a"])(e,"a","div"),u=Object(s["a"])(t,"b","div");if([n,u]=Object(o["makeTypesMatch"])(n,u),"int32"===n.dtype&&"int32"===u.dtype)return Object(i["a"])(n,u);const c={a:n,b:u},l={};return r["a"].runKernel(a["lc"],c,l)}const l=Object(u["b"])({div_:c})},c8ad:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},c8ba:function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(r){"object"===typeof window&&(n=window)}e.exports=n},c912:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("6ad5"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t){const n=Object(o["a"])(e,"x","transpose");if(null==t&&(t=n.shape.map((e,t)=>t).reverse()),s["b"](n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(e=>{s["b"](e>=0&&e<n.rank,()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+" but got "+t)}),n.rank<=1)return n.clone();const i={x:n},u={perm:t};return r["a"].runKernel(a["ed"],i,u)}const c=Object(i["b"])({transpose_:u})},c9f1:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),o=n("76c2"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t){let n=Object(s["a"])(e,"base","pow"),i=Object(s["a"])(t,"exp","pow");[n,i]=Object(o["makeTypesMatch"])(n,i);const u={a:n,b:i};return r["a"].runKernel(a["gc"],u)}const c=Object(i["b"])({pow_:u})},cae0:function(e,t,n){(function(e){var r;(function(e,a,o){function s(e){var t=this;function n(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;while(r.length<8)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],e^=e>>>7,n=e^e<<24,e=r[a+1&7],n^=e^e>>>10,e=r[a+3&7],n^=e^e>>>3,e=r[a+4&7],n^=e^e<<7,e=r[a+7&7],e^=e<<13,n^=e^e<<9,r[a]=n,t.i=a+1&7,n},n(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},a.int32=n.next,a.quick=a,r&&(r.x&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n("07d6")&&n("3c35")?(r=function(){return u}.call(t,n,t,a),void 0===r||(a.exports=r)):this.xorshift7=u})(0,e,n("07d6"))}).call(this,n("62e4")(e))},cd1f:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("a3f7"),a=n("73d3"),o=n("54ef");function s(e,t,n,o,s,i){const u=Object(r["a"])(e,"x","conv2dTranspose"),c=Object(r["a"])(t,"filter","conv2dTranspose");return Object(a["a"])(n,u,c,o,s,"NHWC",i)}const i=Object(o["b"])({conv2dTranspose_:s})},cef0:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),o=n("76c2"),s=n("a3f7"),i=n("526f"),u=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t){let n=Object(s["a"])(e,"a","greater","string_or_numeric"),u=Object(s["a"])(t,"b","greater","string_or_numeric");[n,u]=Object(o["makeTypesMatch"])(n,u),Object(i["a"])(n.shape,u.shape);const c={a:n,b:u};return r["a"].runKernel(a["ob"],c)}const l=Object(u["b"])({greater_:c})},d08e:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t){const n=Object(o["a"])(e,"x","reverse"),s={x:n},i={dims:t};return r["a"].runKernel(a["uc"],s,i)}const u=Object(s["b"])({reverse_:i})},d1a8:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(o["a"])(e,"x","atanh"),n={x:t};return r["a"].runKernel(a["n"],n)}const u=Object(s["b"])({atanh_:i})},d1f4:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("a3f7"),a=n("6ad5"),o=n("54ef"),s=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t){const n=Object(r["a"])(e,"x","squeeze");return Object(s["a"])(n,Object(a["Q"])(n.shape,t).newShape)}const u=Object(o["b"])({squeeze_:i})},d303:function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r={};function a(e){return r[e]}},d30a:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(o["a"])(e,"x","tan"),n={x:t};return r["a"].runKernel(a["Zc"],n)}const u=Object(s["b"])({tan_:i})},d369:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(o["a"])(e,"x","floor"),n={x:t};return r["a"].runKernel(a["gb"],n)}const u=Object(s["b"])({floor_:i})},d4de:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),o=n("76c2"),s=n("a3f7"),i=n("526f"),u=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t){let n=Object(s["a"])(e,"a","notEqual","string_or_numeric"),u=Object(s["a"])(t,"b","notEqual","string_or_numeric");[n,u]=Object(o["makeTypesMatch"])(n,u),Object(i["a"])(n.shape,u.shape);const c={a:n,b:u};return r["a"].runKernel(a["ac"],c)}const l=Object(u["b"])({notEqual_:c})},d4e4:function(e,t,n){"use strict";n.d(t,"a",(function(){return a})),n.d(t,"b",(function(){return o})),n.d(t,"c",(function(){return s}));var r=n("6125");n("d565");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class a{constructor(e,t,n,a,o){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=o||Math.random();this.random=r["alea"](s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;while(!n){let r,a,o;do{r=2*this.random()-1,a=2*this.random()-1,o=r*r+a*a}while(o>=1||0===o);const s=Math.sqrt(-2*Math.log(o)/o);e=this.mean+this.stdDev*r*s,t=this.mean+this.stdDev*a*s,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class o{constructor(e,t,n,o){this.alpha=e,this.beta=1/t,this.dtype=n;const s=o||Math.random();this.randu=r["alea"](s.toString()),this.randn=new a(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,o;while(1){do{r=this.randn.nextValue(),o=1+this.c*r}while(o<=0);if(o*=o*o,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-o+Math.log(o)),a=this.randu(),a<t||Math.log(a)<n)break}return o=1/this.beta*this.d*o,this.alpha<1&&(o*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(o)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class s{constructor(e=0,t=1,n,a){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==a&&(a=Math.random()),"number"===typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=r["alea"](a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}},d54d:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("6ad5"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t=0){const n=Object(o["b"])(e,"tensors","stack","string_or_numeric");s["b"](n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&s["b"](t<=n[0].rank,()=>"Axis must be <= rank of the tensor");const i=n,u={axis:t};return r["a"].runKernel(a["dc"],i,u)}const c=Object(i["b"])({stack_:u})},d556:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}]},d565:function(e,t,n){"use strict";n.r(t),n.d(t,"TEST_EPSILON_FLOAT16",(function(){return u})),n.d(t,"expectArraysClose",(function(){return c})),n.d(t,"testEpsilon",(function(){return l})),n.d(t,"expectPromiseToFail",(function(){return p})),n.d(t,"expectArraysEqual",(function(){return h})),n.d(t,"expectNumbersClose",(function(){return f})),n.d(t,"expectValuesInRange",(function(){return b})),n.d(t,"expectArrayBuffersEqual",(function(){return g})),n.d(t,"encodeStrings",(function(){return y}));var r=n("6ae2"),a=n("a3f7"),o=n("6ad5"),s=n("eb7e");
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const i=.001,u=.1;function c(e,t,n){return null==n&&(n=l()),d(e,t,(e,t)=>m(e,t,n))}function l(){return 32===r["a"].backend.floatPrecision()?i:u}function d(e,t,n){let r=!0;if((Object(o["A"])(e)||Object(o["A"])(t))&&(r=!1),Object(o["A"])(e)&&Object(o["A"])(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: `+r)}if(Array.isArray(e)&&Array.isArray(t)){const n=Object(a["c"])(e),r=Object(a["c"])(t);if(!Object(o["a"])(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const s=Object(o["A"])(e)?e:Object(o["m"])(e),i=Object(o["A"])(t)?t:Object(o["m"])(t);if(s.length!==i.length)throw new Error(`Arrays have different lengths actual: ${s.length} vs expected: ${i.length}.\nActual:   ${s}.\nExpected: ${i}.`);for(let a=0;a<i.length;++a){const e=s[a],t=i[a];if(!n(e,t))throw new Error(`Arrays differ: actual[${a}] = ${e}, expected[${a}] = ${t}.\nActual:   ${s}.\nExpected: ${i}.`)}}function p(e,t){e().then(()=>t.fail(),()=>t())}function h(e,t){const n="string"===typeof t||"number"===typeof t||"boolean"===typeof t?[t]:t;return Object(o["z"])(e)||Object(o["z"])(e[0])||Object(o["z"])(t)||Object(o["z"])(t[0])?d(e,n,(e,t)=>e==t):d(e,t,(e,t)=>m(e,t,0))}function f(e,t,n){if(null==n&&(n=l()),!m(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function m(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function b(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function g(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}function y(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?y(n):e[t]=Object(s["encodeString"])(n)}return e}},d7b0:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(o["a"])(e,"input","real"),n={input:t};return r["a"].runKernel(a["kc"],n)}const u=Object(s["b"])({real_:i})},da5a:function(e,t){e.exports=r;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(N){}function r(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e["__isLong__"])}r.prototype.__isLong__,Object.defineProperty(r.prototype,"__isLong__",{value:!0}),r.isLong=a;var o={},s={};function i(e,t){var n,r,a;return t?(e>>>=0,(a=0<=e&&e<256)&&(r=s[e],r)?r:(n=c(e,(0|e)<0?-1:0,!0),a&&(s[e]=n),n)):(e|=0,(a=-128<=e&&e<128)&&(r=o[e],r)?r:(n=c(e,e<0?-1:0,!1),a&&(o[e]=n),n))}function u(e,t){if(isNaN(e))return t?v:x;if(t){if(e<0)return v;if(e>=b)return S}else{if(e<=-g)return T;if(e+1>=g)return j}return e<0?u(-e,t).neg():c(e%m|0,e/m|0,t)}function c(e,t,n){return new r(e,t,n)}r.fromInt=i,r.fromNumber=u,r.fromBits=c;var l=Math.pow;function d(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return x;if("number"===typeof t?(n=t,t=!1):t=!!t,n=n||10,n<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return d(e.substring(1),t,n).neg();for(var a=u(l(n,8)),o=x,s=0;s<e.length;s+=8){var i=Math.min(8,e.length-s),c=parseInt(e.substring(s,s+i),n);if(i<8){var p=u(l(n,i));o=o.mul(p).add(u(c))}else o=o.mul(a),o=o.add(u(c))}return o.unsigned=t,o}function p(e,t){return"number"===typeof e?u(e,t):"string"===typeof e?d(e,t):c(e.low,e.high,"boolean"===typeof t?t:e.unsigned)}r.fromString=d,r.fromValue=p;var h=65536,f=1<<24,m=h*h,b=m*m,g=b/2,y=i(f),x=i(0);r.ZERO=x;var v=i(0,!0);r.UZERO=v;var O=i(1);r.ONE=O;var w=i(1,!0);r.UONE=w;var k=i(-1);r.NEG_ONE=k;var j=c(-1,2147483647,!1);r.MAX_VALUE=j;var S=c(-1,-1,!0);r.MAX_UNSIGNED_VALUE=S;var T=c(0,-2147483648,!1);r.MIN_VALUE=T;var I=r.prototype;I.toInt=function(){return this.unsigned?this.low>>>0:this.low},I.toNumber=function(){return this.unsigned?(this.high>>>0)*m+(this.low>>>0):this.high*m+(this.low>>>0)},I.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(T)){var t=u(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}var a=u(l(e,6),this.unsigned),o=this,s="";while(1){var i=o.div(a),c=o.sub(i.mul(a)).toInt()>>>0,d=c.toString(e);if(o=i,o.isZero())return d+s;while(d.length<6)d="0"+d;s=""+d+s}},I.getHighBits=function(){return this.high},I.getHighBitsUnsigned=function(){return this.high>>>0},I.getLowBits=function(){return this.low},I.getLowBitsUnsigned=function(){return this.low>>>0},I.getNumBitsAbs=function(){if(this.isNegative())return this.eq(T)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0;t--)if(0!=(e&1<<t))break;return 0!=this.high?t+33:t+1},I.isZero=function(){return 0===this.high&&0===this.low},I.eqz=I.isZero,I.isNegative=function(){return!this.unsigned&&this.high<0},I.isPositive=function(){return this.unsigned||this.high>=0},I.isOdd=function(){return 1===(1&this.low)},I.isEven=function(){return 0===(1&this.low)},I.equals=function(e){return a(e)||(e=p(e)),(this.unsigned===e.unsigned||this.high>>>31!==1||e.high>>>31!==1)&&(this.high===e.high&&this.low===e.low)},I.eq=I.equals,I.notEquals=function(e){return!this.eq(e)},I.neq=I.notEquals,I.ne=I.notEquals,I.lessThan=function(e){return this.comp(e)<0},I.lt=I.lessThan,I.lessThanOrEqual=function(e){return this.comp(e)<=0},I.lte=I.lessThanOrEqual,I.le=I.lessThanOrEqual,I.greaterThan=function(e){return this.comp(e)>0},I.gt=I.greaterThan,I.greaterThanOrEqual=function(e){return this.comp(e)>=0},I.gte=I.greaterThanOrEqual,I.ge=I.greaterThanOrEqual,I.compare=function(e){if(a(e)||(e=p(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},I.comp=I.compare,I.negate=function(){return!this.unsigned&&this.eq(T)?T:this.not().add(O)},I.neg=I.negate,I.add=function(e){a(e)||(e=p(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,o=65535&this.low,s=e.high>>>16,i=65535&e.high,u=e.low>>>16,l=65535&e.low,d=0,h=0,f=0,m=0;return m+=o+l,f+=m>>>16,m&=65535,f+=r+u,h+=f>>>16,f&=65535,h+=n+i,d+=h>>>16,h&=65535,d+=t+s,d&=65535,c(f<<16|m,d<<16|h,this.unsigned)},I.subtract=function(e){return a(e)||(e=p(e)),this.add(e.neg())},I.sub=I.subtract,I.multiply=function(e){if(this.isZero())return x;if(a(e)||(e=p(e)),n){var t=n.mul(this.low,this.high,e.low,e.high);return c(t,n.get_high(),this.unsigned)}if(e.isZero())return x;if(this.eq(T))return e.isOdd()?T:x;if(e.eq(T))return this.isOdd()?T:x;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(y)&&e.lt(y))return u(this.toNumber()*e.toNumber(),this.unsigned);var r=this.high>>>16,o=65535&this.high,s=this.low>>>16,i=65535&this.low,l=e.high>>>16,d=65535&e.high,h=e.low>>>16,f=65535&e.low,m=0,b=0,g=0,v=0;return v+=i*f,g+=v>>>16,v&=65535,g+=s*f,b+=g>>>16,g&=65535,g+=i*h,b+=g>>>16,g&=65535,b+=o*f,m+=b>>>16,b&=65535,b+=s*h,m+=b>>>16,b&=65535,b+=i*d,m+=b>>>16,b&=65535,m+=r*f+o*h+s*d+i*l,m&=65535,c(g<<16|v,m<<16|b,this.unsigned)},I.mul=I.multiply,I.divide=function(e){if(a(e)||(e=p(e)),e.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&-2147483648===this.high&&-1===e.low&&-1===e.high)return this;var t=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,e.low,e.high);return c(t,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?v:x;var r,o,s;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return v;if(e.gt(this.shru(1)))return w;s=v}else{if(this.eq(T)){if(e.eq(O)||e.eq(k))return T;if(e.eq(T))return O;var i=this.shr(1);return r=i.div(e).shl(1),r.eq(x)?e.isNegative()?O:k:(o=this.sub(e.mul(r)),s=r.add(o.div(e)),s)}if(e.eq(T))return this.unsigned?v:x;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=x}o=this;while(o.gte(e)){r=Math.max(1,Math.floor(o.toNumber()/e.toNumber()));var d=Math.ceil(Math.log(r)/Math.LN2),h=d<=48?1:l(2,d-48),f=u(r),m=f.mul(e);while(m.isNegative()||m.gt(o))r-=h,f=u(r,this.unsigned),m=f.mul(e);f.isZero()&&(f=O),s=s.add(f),o=o.sub(m)}return s},I.div=I.divide,I.modulo=function(e){if(a(e)||(e=p(e)),n){var t=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,e.low,e.high);return c(t,n.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))},I.mod=I.modulo,I.rem=I.modulo,I.not=function(){return c(~this.low,~this.high,this.unsigned)},I.and=function(e){return a(e)||(e=p(e)),c(this.low&e.low,this.high&e.high,this.unsigned)},I.or=function(e){return a(e)||(e=p(e)),c(this.low|e.low,this.high|e.high,this.unsigned)},I.xor=function(e){return a(e)||(e=p(e)),c(this.low^e.low,this.high^e.high,this.unsigned)},I.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?c(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):c(0,this.low<<e-32,this.unsigned)},I.shl=I.shiftLeft,I.shiftRight=function(e){return a(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?c(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):c(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},I.shr=I.shiftRight,I.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),e&=63,0===e)return this;var t=this.high;if(e<32){var n=this.low;return c(n>>>e|t<<32-e,t>>>e,this.unsigned)}return c(32===e?t:t>>>e-32,0,this.unsigned)},I.shru=I.shiftRightUnsigned,I.shr_u=I.shiftRightUnsigned,I.toSigned=function(){return this.unsigned?c(this.low,this.high,!1):this},I.toUnsigned=function(){return this.unsigned?this:c(this.low,this.high,!0)},I.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},I.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},I.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},r.fromBytes=function(e,t,n){return n?r.fromBytesLE(e,t):r.fromBytesBE(e,t)},r.fromBytesLE=function(e,t){return new r(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},r.fromBytesBE=function(e,t){return new r(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},dae8:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("6ad5"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t=0){const n=Object(o["a"])(e,"x","expandDims","string_or_numeric");s["b"](t<=n.rank,()=>"Axis must be <= rank of the tensor");const i={input:n},u={dim:t};return r["a"].runKernel(a["bb"],i,u)}const c=Object(i["b"])({expandDims_:u})},db49:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t=0){const n=Object(o["a"])(e,"x","argMin"),s={x:n},i={axis:t};return r["a"].runKernel(a["i"],s,i)}const u=Object(s["b"])({argMin_:i})},dbf3:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}]},dc59:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(o["a"])(e,"x","asinh"),n={x:t};return r["a"].runKernel(a["k"],n)}const u=Object(s["b"])({asinh_:i})},dd7e:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("6ad5"),i=n("b818"),u=n("54ef"),c=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function l(e,t,n,u,l="NHWC",d=[1,1],p){const h=Object(o["a"])(e,"x","conv2d"),f=Object(o["a"])(t,"filter","conv2d");let m=h,b=!1;3===h.rank&&(b=!0,m=Object(c["a"])(h,[1,h.shape[0],h.shape[1],h.shape[2]])),s["b"](4===m.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${m.rank}.`),s["b"](4===f.rank,()=>"Error in conv2d: filter must be rank 4, but got rank "+f.rank+"."),null!=p&&s["b"](s["v"](u),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${p} but got pad ${u}.`);const g="NHWC"===l?m.shape[3]:m.shape[1];s["b"](g===f.shape[2],()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${f.shape[2]}.`),s["b"](i["h"](n,d),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`);const y={x:m,filter:f},x={strides:n,pad:u,dataFormat:l,dilations:d,dimRoundingMode:p},v=r["a"].runKernel(a["C"],y,x);return b?Object(c["a"])(v,[v.shape[1],v.shape[2],v.shape[3]]):v}const d=Object(u["b"])({conv2d_:l})},de1a:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t,n,s,i=0,u=0,c=0,l=0,d=0){const p=Object(o["a"])(e,"x","stridedSlice","string_or_numeric"),h={x:p},f={begin:t,end:n,strides:s,beginMask:i,endMask:u,ellipsisMask:c,newAxisMask:l,shrinkAxisMask:d};return r["a"].runKernel(a["Tc"],h,f)}const u=Object(s["b"])({stridedSlice_:i})},deb3:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("6ad5"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t){const n=Object(o["a"])(e,"x","cast");if(!s["B"](t))throw new Error("Failed to cast to unknown dtype "+t);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const i={x:n},u={dtype:t};return r["a"].runKernel(a["w"],i,u)}const c=Object(i["b"])({cast_:u})},df7c:function(e,t,n){(function(e){function n(e,t){for(var n=0,r=e.length-1;r>=0;r--){var a=e[r];"."===a?e.splice(r,1):".."===a?(e.splice(r,1),n++):n&&(e.splice(r,1),n--)}if(t)for(;n--;n)e.unshift("..");return e}function r(e){"string"!==typeof e&&(e+="");var t,n=0,r=-1,a=!0;for(t=e.length-1;t>=0;--t)if(47===e.charCodeAt(t)){if(!a){n=t+1;break}}else-1===r&&(a=!1,r=t+1);return-1===r?"":e.slice(n,r)}function a(e,t){if(e.filter)return e.filter(t);for(var n=[],r=0;r<e.length;r++)t(e[r],r,e)&&n.push(e[r]);return n}t.resolve=function(){for(var t="",r=!1,o=arguments.length-1;o>=-1&&!r;o--){var s=o>=0?arguments[o]:e.cwd();if("string"!==typeof s)throw new TypeError("Arguments to path.resolve must be strings");s&&(t=s+"/"+t,r="/"===s.charAt(0))}return t=n(a(t.split("/"),(function(e){return!!e})),!r).join("/"),(r?"/":"")+t||"."},t.normalize=function(e){var r=t.isAbsolute(e),s="/"===o(e,-1);return e=n(a(e.split("/"),(function(e){return!!e})),!r).join("/"),e||r||(e="."),e&&s&&(e+="/"),(r?"/":"")+e},t.isAbsolute=function(e){return"/"===e.charAt(0)},t.join=function(){var e=Array.prototype.slice.call(arguments,0);return t.normalize(a(e,(function(e,t){if("string"!==typeof e)throw new TypeError("Arguments to path.join must be strings");return e})).join("/"))},t.relative=function(e,n){function r(e){for(var t=0;t<e.length;t++)if(""!==e[t])break;for(var n=e.length-1;n>=0;n--)if(""!==e[n])break;return t>n?[]:e.slice(t,n-t+1)}e=t.resolve(e).substr(1),n=t.resolve(n).substr(1);for(var a=r(e.split("/")),o=r(n.split("/")),s=Math.min(a.length,o.length),i=s,u=0;u<s;u++)if(a[u]!==o[u]){i=u;break}var c=[];for(u=i;u<a.length;u++)c.push("..");return c=c.concat(o.slice(i)),c.join("/")},t.sep="/",t.delimiter=":",t.dirname=function(e){if("string"!==typeof e&&(e+=""),0===e.length)return".";for(var t=e.charCodeAt(0),n=47===t,r=-1,a=!0,o=e.length-1;o>=1;--o)if(t=e.charCodeAt(o),47===t){if(!a){r=o;break}}else a=!1;return-1===r?n?"/":".":n&&1===r?"/":e.slice(0,r)},t.basename=function(e,t){var n=r(e);return t&&n.substr(-1*t.length)===t&&(n=n.substr(0,n.length-t.length)),n},t.extname=function(e){"string"!==typeof e&&(e+="");for(var t=-1,n=0,r=-1,a=!0,o=0,s=e.length-1;s>=0;--s){var i=e.charCodeAt(s);if(47!==i)-1===r&&(a=!1,r=s+1),46===i?-1===t?t=s:1!==o&&(o=1):-1!==t&&(o=-1);else if(!a){n=s+1;break}}return-1===t||-1===r||0===o||1===o&&t===r-1&&t===n+1?"":e.slice(t,r)};var o="b"==="ab".substr(-1)?function(e,t,n){return e.substr(t,n)}:function(e,t,n){return t<0&&(t=e.length+t),e.substr(t,n)}}).call(this,n("4362"))},df81:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t=null,n=!1){const s=Object(o["a"])(e,"x","all","bool"),i={x:s},u={axis:t,keepDims:n};return r["a"].runKernel(a["f"],i,u)}const u=Object(s["b"])({all_:i})},e053:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("deb3"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t=null,n=!1){let i=Object(o["a"])(e,"x","sum");"bool"===i.dtype&&(i=Object(s["a"])(i,"int32"));const u={x:i},c={axis:t,keepDims:n};return r["a"].runKernel(a["Yc"],u,c)}const c=Object(i["b"])({sum_:u})},e101:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("6ad5"),i=n("54ef"),u=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t=5,n=1,i=1,c=.5){const l=Object(o["a"])(e,"x","localResponseNormalization");s["b"](4===l.rank||3===l.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${l.rank}.`),s["b"](s["v"](t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let d=l,p=!1;3===l.rank&&(p=!0,d=Object(u["a"])(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const h={x:d},f={depthRadius:t,bias:n,alpha:i,beta:c},m=r["a"].runKernel(a["wb"],h,f);return p?Object(u["a"])(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const l=Object(i["b"])({localResponseNormalization_:c})},e1fd:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),o=n("76c2"),s=n("a3f7"),i=n("526f"),u=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e,t){let n=Object(s["a"])(e,"a","less","string_or_numeric"),u=Object(s["a"])(t,"b","less","string_or_numeric");[n,u]=Object(o["makeTypesMatch"])(n,u),Object(i["a"])(n.shape,u.shape);const c={a:n,b:u};return r["a"].runKernel(a["zb"],c)}const l=Object(u["b"])({less_:c})},e22c:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t,n=1,s=0){if(t<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+t);const i=Object(o["a"])(e,"indices","oneHot","int32"),u={indices:i},c={depth:t,onValue:n,offValue:s};return r["a"].runKernel(a["bc"],u,c)}const u=Object(s["b"])({oneHot_:i})},e333:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("526f"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t){const n=Object(o["a"])(e,"a","logicalAnd","bool"),i=Object(o["a"])(t,"b","logicalAnd","bool");Object(s["a"])(n.shape,i.shape);const u={a:n,b:i};return r["a"].runKernel(a["Fb"],u)}const c=Object(i["b"])({logicalAnd_:u})},e3db:function(e,t){var n={}.toString;e.exports=Array.isArray||function(e){return"[object Array]"==n.call(e)}},e89f:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t=0){const n=Object(o["a"])(e,"x","argMax"),s={x:n},i={axis:t};return r["a"].runKernel(a["h"],s,i)}const u=Object(s["b"])({argMax_:i})},eb7e:function(e,t,n){"use strict";n.r(t),n.d(t,"shuffle",(function(){return a["M"]})),n.d(t,"shuffleCombo",(function(){return a["N"]})),n.d(t,"clamp",(function(){return a["i"]})),n.d(t,"nearestLargerEven",(function(){return a["H"]})),n.d(t,"swap",(function(){return a["S"]})),n.d(t,"sum",(function(){return a["R"]})),n.d(t,"randUniform",(function(){return a["J"]})),n.d(t,"distSquared",(function(){return a["l"]})),n.d(t,"assert",(function(){return a["b"]})),n.d(t,"assertShapesMatch",(function(){return a["e"]})),n.d(t,"assertNonNull",(function(){return a["d"]})),n.d(t,"flatten",(function(){return a["m"]})),n.d(t,"sizeFromShape",(function(){return a["O"]})),n.d(t,"isScalarShape",(function(){return a["y"]})),n.d(t,"arraysEqual",(function(){return a["a"]})),n.d(t,"isInt",(function(){return a["v"]})),n.d(t,"tanh",(function(){return a["T"]})),n.d(t,"sizeToSquarishShape",(function(){return a["P"]})),n.d(t,"createShuffledIndices",(function(){return a["k"]})),n.d(t,"rightPad",(function(){return a["L"]})),n.d(t,"repeatedTry",(function(){return a["K"]})),n.d(t,"inferFromImplicitShape",(function(){return a["s"]})),n.d(t,"parseAxisParam",(function(){return a["I"]})),n.d(t,"squeezeShape",(function(){return a["Q"]})),n.d(t,"getTypedArrayFromDType",(function(){return a["o"]})),n.d(t,"getArrayFromDType",(function(){return a["n"]})),n.d(t,"checkConversionForErrors",(function(){return a["h"]})),n.d(t,"isValidDtype",(function(){return a["B"]})),n.d(t,"hasEncodingLoss",(function(){return a["p"]})),n.d(t,"isTypedArray",(function(){return a["A"]})),n.d(t,"bytesPerElement",(function(){return a["g"]})),n.d(t,"bytesFromStringArray",(function(){return a["f"]})),n.d(t,"isString",(function(){return a["z"]})),n.d(t,"isBoolean",(function(){return a["t"]})),n.d(t,"isNumber",(function(){return a["w"]})),n.d(t,"inferDtype",(function(){return a["r"]})),n.d(t,"isFunction",(function(){return a["u"]})),n.d(t,"nearestDivisor",(function(){return a["G"]})),n.d(t,"computeStrides",(function(){return a["j"]})),n.d(t,"toNestedArray",(function(){return a["U"]})),n.d(t,"makeOnesTypedArray",(function(){return a["D"]})),n.d(t,"makeZerosTypedArray",(function(){return a["F"]})),n.d(t,"makeZerosNestedTypedArray",(function(){return a["E"]})),n.d(t,"assertNonNegativeIntegerDimensions",(function(){return a["c"]})),n.d(t,"locToIndex",(function(){return a["C"]})),n.d(t,"indexToLoc",(function(){return a["q"]})),n.d(t,"isPromise",(function(){return a["x"]})),n.d(t,"hexToLong",(function(){return u})),n.d(t,"fingerPrint64",(function(){return k})),n.d(t,"createScalarValue",(function(){return j})),n.d(t,"toTypedArray",(function(){return T})),n.d(t,"now",(function(){return I})),n.d(t,"fetch",(function(){return N})),n.d(t,"encodeString",(function(){return C})),n.d(t,"decodeString",(function(){return $}));var r=n("b333"),a=n("6ad5"),o=n("da5a"),s=n.n(o);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const i=s.a||o;function u(e){return i.fromString(e,!0,16)}const c=u("c3a5c85c97cb3127"),l=u("b492b66fbe98f273"),d=u("9ae16a3b2f90404f");function p(e){return e.xor(e.shru(47))}function h(e,t,n){const r=e.slice(t,t+n);return i.fromBytes(Array.from(r),!0,!0)}function f(e,t){return h(e,t,8)}function m(e,t){return h(e,t,4)}function b(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function g(e,t,n=u("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function y(e,t,n,r,a,o){a=a.add(e),o=b(o.add(a).add(r),21);const s=a;return a=a.add(t),a=a.add(n),o=o.add(b(a,44)),[a.add(r),o.add(s)]}function x(e,t,n,r){return y(f(e,t),f(e,t+8),f(e,t+16),f(e,t+24),n,r)}function v(e,t=e.length){if(t>=8){const n=d.add(2*t),r=f(e,0).add(d),a=f(e,t-8),o=b(a,37).mul(n).add(r),s=b(r,25).add(a).mul(n);return g(o,s,n)}if(t>=4){const n=d.add(2*t),r=m(e,0);return g(r.shl(3).add(t),m(e,t-4),n)}if(t>0){const n=e[0],r=e[t>>1],a=e[t-1],o=n+(r<<8),s=t+(a<<2);return p(d.mul(o).xor(c.mul(s))).mul(d)}return d}function O(e,t=e.length){const n=d.add(2*t),r=f(e,0).mul(l),a=f(e,8),o=f(e,t-8).mul(n),s=f(e,t-16).mul(d);return g(b(r.add(a),43).add(b(o,30)).add(s),r.add(b(a.add(d),18)).add(o),n)}function w(e,t=e.length){const n=d.add(2*t),r=f(e,0).mul(d),a=f(e,8),o=f(e,t-8).mul(n),s=f(e,t-16).mul(d),i=b(r.add(a),43).add(b(o,30)).add(s),u=g(i,r.add(b(a.add(d),18)).add(o),n),c=f(e,16).mul(n),l=f(e,24),p=i.add(f(e,t-32)).mul(n),h=u.add(f(e,t-24)).mul(n);return g(b(c.add(l),43).add(b(p,30)).add(h),c.add(b(l.add(r),18)).add(p),n)}function k(e,t=e.length){const n=i.fromNumber(81,!0);if(t<=32)return t<=16?v(e,t):O(e,t);if(t<=64)return w(e,t);let r=n,a=n.mul(l).add(113),o=p(a.mul(d).add(113)).mul(d),s=[i.UZERO,i.UZERO],u=[i.UZERO,i.UZERO];r=r.mul(d).add(f(e,0));let h=0;const m=64*(t-1>>6),y=m+(t-1&63)-63;do{r=b(r.add(a).add(s[0]).add(f(e,h+8)),37).mul(l),a=b(a.add(s[1]).add(f(e,h+48)),42).mul(l),r=r.xor(u[1]),a=a.add(s[0]).add(f(e,h+40)),o=b(o.add(u[0]),33).mul(l),s=x(e,h,s[1].mul(l),r.add(u[0])),u=x(e,h+32,o.add(u[1]),a.add(f(e,h+16))),[o,r]=[r,o],h+=64}while(h!==m);const k=l.add(o.and(255).shl(1));return h=y,u[0]=u[0].add(t-1&63),s[0]=s[0].add(u[0]),u[0]=u[0].add(s[0]),r=b(r.add(a).add(s[0]).add(f(e,h+8)),37).mul(k),a=b(a.add(s[1]).add(f(e,h+48)),42).mul(k),r=r.xor(u[1].mul(9)),a=a.add(s[0].mul(9).add(f(e,h+40))),o=b(o.add(u[0]),33).mul(k),s=x(e,h,s[1].mul(k),r.add(u[0])),u=x(e,h+32,o.add(u[1]),a.add(f(e,h+16))),[o,r]=[r,o],g(g(s[0],u[0],k).add(p(a).mul(c)).add(o),g(s[1],u[1],k).add(r),k)}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j(e,t){return"string"===t?C(e):T([e],t)}function S(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}function T(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=a["m"](e)),Object(r["c"])().getBool("DEBUG")&&a["h"](e,t),S(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error("Unknown data type "+t)}function I(){return Object(r["c"])().platform.now()}function N(e,t){return Object(r["c"])().platform.fetch(e,t)}function C(e,t="utf-8"){return t=t||"utf-8",Object(r["c"])().platform.encode(e,t)}function $(e,t="utf-8"){return t=t||"utf-8",Object(r["c"])().platform.decode(e,t)}},ef00:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(o["a"])(e,"x","logicalNot","bool"),n={x:t};return r["a"].runKernel(a["Gb"],n)}const u=Object(s["b"])({logicalNot_:i})},eff7:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(o["a"])(e,"x","cos"),n={x:t};return r["a"].runKernel(a["I"],n)}const u=Object(s["b"])({cos_:i})},f011:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},f0a9:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(o["a"])(e,"x","clone","string_or_numeric"),n={x:t};return r["a"].runKernel(a["rb"],n)}const u=Object(s["b"])({clone_:i})},f0e5:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n("6ae2"),a=n("c05b"),o=n("76c2"),s=n("a3f7"),i=n("526f"),u=n("deb3"),c=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function l(e,t){let n=Object(s["a"])(e,"a","minimum"),c=Object(s["a"])(t,"b","minimum");[n,c]=Object(o["makeTypesMatch"])(n,c),"bool"===n.dtype&&(n=Object(u["a"])(n,"int32"),c=Object(u["a"])(c,"int32")),Object(i["a"])(n.shape,c.shape);const l={a:n,b:c};return r["a"].runKernel(a["Rb"],l)}const d=Object(c["b"])({minimum_:l})},f183:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("526f"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t){const n=Object(o["a"])(e,"a","logicalOr","bool"),i=Object(o["a"])(t,"b","logicalOr","bool");Object(s["a"])(n.shape,i.shape);const u={a:n,b:i};return r["a"].runKernel(a["Hb"],u)}const c=Object(i["b"])({logicalOr_:u})},f3ae:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("deb3"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t=null,n=!1){let i=Object(o["a"])(e,"x","prod");"bool"===i.dtype&&(i=Object(s["a"])(i,"int32"));const u={x:i},c={axis:t,keepDims:n};return r["a"].runKernel(a["ic"],u,c)}const c=Object(i["b"])({prod_:u})},f490:function(e,t,n){"use strict";(function(e,r){
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let a;function o(){if(null==a){let t;if("undefined"!==typeof window)t=window;else if("undefined"!==typeof e)t=e;else if("undefined"!==typeof r)t=r;else{if("undefined"===typeof self)throw new Error("Could not find a global object");t=self}a=t}return a}function s(){const e=o();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}function i(e,t){const n=s();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return i}))}).call(this,n("c8ba"),n("4362"))},f74c:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("34d7"),a=n("a3f7"),o=n("6ad5");
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
async function s(e,t){const n=Object(a["a"])(e,"x","setdiff1d"),s=Object(a["a"])(t,"y","setdiff1d");o["b"](n.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${s.dtype}).`),o["b"](1===n.rank,()=>`x should be 1D tensor, but got x (${n.shape}).`),o["b"](1===s.rank,()=>`y should be 1D tensor, but got y (${s.shape}).`);const i=await n.data(),u=await s.data(),c=new Set(u);let l=0;for(let r=0;r<i.length;r++)c.has(i[r])||l++;const d=new r["b"]([l],n.dtype),p=new r["b"]([l],"int32");for(let r=0,a=0;r<i.length;r++)c.has(i[r])||(d.values[a]=i[r],p.values[a]=r,a++);return[d.toTensor(),p.toTensor()]}const i=s},f8bb:function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return T})),n.d(t,"i",(function(){return C})),n.d(t,"c",(function(){return $})),n.d(t,"f",(function(){return E})),n.d(t,"e",(function(){return _})),n.d(t,"d",(function(){return F})),n.d(t,"k",(function(){return M})),n.d(t,"g",(function(){return P})),n.d(t,"h",(function(){return L})),n.d(t,"j",(function(){return B})),n.d(t,"b",(function(){return V}));var r=n("fa11"),a=n("46cc"),o=n("d303"),s=n("526c"),i=n("aeab"),u=n("c8ad"),c=n("5874"),l=n("9489"),d=n("04b8"),p=n("f011"),h=n("d556"),f=n("3d50"),m=n("6e83"),b=n("29d8"),g=n("a80f"),y=n("673d"),x=n("3bfc"),v=n("31bb"),O=n("dbf3"),w=n("5f44"),k=n("113e"),j=n("1906"),S=n("9e7b");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class T{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[i,u,c,l,d,p,h,f,m,b,g,y,x,v,O,w,k,j,S],t=[].concat(...e.map(e=>e.json));this.opMappers=t.reduce((e,t)=>(e[t.tfOpName]=t,e),{})}transformGraph(e,t={}){const n=e.node,r=[],a=[],o=[],i=n.reduce((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):null!=t.input&&0!==t.input.length||o.push(e[t.name]),e),{});let u=[];const c=[];let l={},d={};null!=t&&(l=this.mapSignatureEntries(t.inputs),d=this.mapSignatureEntries(t.outputs));const p=Object.keys(i);p.forEach(e=>{const t=i[e];t.inputNames.forEach((e,n)=>{const[r,,a]=Object(s["b"])(e),o=i[r];if(null!=o.outputs){const e=o.outputs.indexOf(a);if(-1!==e){const a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(o),o.children.push(t)})}),0===Object.keys(d).length?p.forEach(e=>{const t=i[e];0===t.children.length&&c.push(t)}):Object.keys(d).forEach(e=>{const[t]=Object(s["b"])(e),n=i[t];null!=n&&(n.signatureKey=d[e],c.push(n))}),Object.keys(l).length>0?Object.keys(l).forEach(e=>{const[t]=Object(s["b"])(e),n=i[t];n&&(n.signatureKey=l[e],u.push(n))}):u=r;let h={};null!=e.library&&null!=e.library.function&&(h=e.library.function.reduce((e,t)=>(e[t.signature.name]=this.mapFunction(t),e),{}));const f={nodes:i,inputs:u,outputs:c,weights:a,placeholders:r,signature:t,functions:h};return o.length>0&&(f.initNodes=o),f}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){const t=Object(o["a"])(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(e=>e.startsWith("^")?e.substr(1):e),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce((t,n)=>{const r=n.type;let a=void 0;switch(n.type){case"string":a=C(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=C(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=L(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=L(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=E(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=E(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=P(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=P(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=$(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=$(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=V(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=V(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=M(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=M(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=B(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=B(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=_(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=_(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=F(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=F(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=R(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=R(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t},{})),n}mapFunction(e){const t=e.nodeDef,n=[],r=[];let a={};null!=t&&(a=t.reduce((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&r.push(e[t.name]),e),{}));const o=[],i=[];e.signature.inputArg.forEach(e=>{const[t]=Object(s["b"])(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:A(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,o.push(n),a[t]=n});const u=Object.keys(a);u.forEach(e=>{const t=a[e];t.inputNames.forEach((e,n)=>{const[r,,o]=Object(s["b"])(e),i=a[r];if(null!=i.outputs){const e=i.outputs.indexOf(o);if(-1!==e){const a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(i),i.children.push(t)})});const c=e.ret;e.signature.outputArg.forEach(e=>{const[t,n]=Object(s["b"])(c[e.name]),r=a[t];null!=r&&(r.defaultOutput=n,i.push(r))});const l=this.mapArgsToSignature(e);return{nodes:a,inputs:o,outputs:i,weights:r,placeholders:n,signature:l}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function I(t){const n=Object(r["env"])().global;if("undefined"!==typeof n.atob)return n.atob(t);if("undefined"!==typeof e)return new e(t,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function N(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):I(e);return t?n:n.toLowerCase()}function C(e,t,n,r=!1){const a=e[t];return null!=a?N(a.s,r):n}function $(e,t,n){const r=e[t];return r?r.b:n}function E(e,t,n){const r=e[t]||{},a=null!=r["i"]?r["i"]:null!=r["f"]?r["f"]:n;return"number"===typeof a?a:parseInt(a,10)}function A(e){switch("string"===typeof e&&(e=a["a"][e]),e){case a["a"].DT_FLOAT:return"float32";case a["a"].DT_INT32:case a["a"].DT_INT64:case a["a"].DT_INT8:case a["a"].DT_UINT8:return"int32";case a["a"].DT_BOOL:return"bool";case a["a"].DT_DOUBLE:return"float32";case a["a"].DT_STRING:return"string";default:return null}}function R(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function _(e,t,n){const r=e[t];return r&&r.type?A(r.type):n}function F(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map(e=>A(e)):n}function D(e){if(!e.unknownRank)return null!=e.dim?e.dim.map(e=>"number"===typeof e.size?e.size:parseInt(e.size,10)):[]}function M(e,t,n){const r=e[t];return r&&r.shape?D(r.shape):n}function P(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(e=>"number"===typeof e?e:parseInt(e,10)):n}function L(e,t,n,r=!1){const a=e[t];return a&&a.list&&a.list.s?a.list.s.map(e=>N(e,r)):n}function B(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map(e=>D(e)):n}function V(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}}).call(this,n("b639").Buffer)},fa11:function(e,t,n){"use strict";n.r(t),n.d(t,"AdadeltaOptimizer",(function(){return _t})),n.d(t,"AdagradOptimizer",(function(){return Dt})),n.d(t,"AdamOptimizer",(function(){return Lt})),n.d(t,"AdamaxOptimizer",(function(){return zt})),n.d(t,"MomentumOptimizer",(function(){return Ut})),n.d(t,"Optimizer",(function(){return Rt})),n.d(t,"RMSPropOptimizer",(function(){return Gt})),n.d(t,"SGDOptimizer",(function(){return Wt})),n.d(t,"Tensor",(function(){return se["a"]})),n.d(t,"TensorBuffer",(function(){return se["b"]})),n.d(t,"Variable",(function(){return se["c"]})),n.d(t,"Rank",(function(){return Ht["a"]})),n.d(t,"sumOutType",(function(){return Ht["b"]})),n.d(t,"upcastType",(function(){return Ht["c"]})),n.d(t,"abs",(function(){return qt["b"]})),n.d(t,"acos",(function(){return qt["c"]})),n.d(t,"acosh",(function(){return qt["d"]})),n.d(t,"add",(function(){return qt["e"]})),n.d(t,"addN",(function(){return qt["f"]})),n.d(t,"all",(function(){return qt["g"]})),n.d(t,"any",(function(){return qt["h"]})),n.d(t,"argMax",(function(){return qt["i"]})),n.d(t,"argMin",(function(){return qt["j"]})),n.d(t,"asin",(function(){return qt["k"]})),n.d(t,"asinh",(function(){return qt["l"]})),n.d(t,"atan",(function(){return qt["m"]})),n.d(t,"atan2",(function(){return qt["n"]})),n.d(t,"atanh",(function(){return qt["o"]})),n.d(t,"avgPool",(function(){return qt["p"]})),n.d(t,"avgPool3d",(function(){return qt["q"]})),n.d(t,"basicLSTMCell",(function(){return qt["r"]})),n.d(t,"batchToSpaceND",(function(){return qt["w"]})),n.d(t,"batchNorm",(function(){return qt["s"]})),n.d(t,"batchNorm2d",(function(){return qt["t"]})),n.d(t,"batchNorm3d",(function(){return qt["u"]})),n.d(t,"batchNorm4d",(function(){return qt["v"]})),n.d(t,"bincount",(function(){return qt["x"]})),n.d(t,"broadcastTo",(function(){return qt["z"]})),n.d(t,"buffer",(function(){return qt["A"]})),n.d(t,"cast",(function(){return qt["B"]})),n.d(t,"ceil",(function(){return qt["C"]})),n.d(t,"clipByValue",(function(){return qt["D"]})),n.d(t,"clone",(function(){return qt["E"]})),n.d(t,"complex",(function(){return qt["F"]})),n.d(t,"concat",(function(){return qt["G"]})),n.d(t,"concat1d",(function(){return qt["H"]})),n.d(t,"concat2d",(function(){return qt["I"]})),n.d(t,"concat3d",(function(){return qt["J"]})),n.d(t,"concat4d",(function(){return qt["K"]})),n.d(t,"conv1d",(function(){return qt["L"]})),n.d(t,"conv2d",(function(){return qt["M"]})),n.d(t,"conv2dTranspose",(function(){return qt["N"]})),n.d(t,"conv3d",(function(){return qt["O"]})),n.d(t,"conv3dTranspose",(function(){return qt["P"]})),n.d(t,"cos",(function(){return qt["Q"]})),n.d(t,"cosh",(function(){return qt["R"]})),n.d(t,"cumsum",(function(){return qt["T"]})),n.d(t,"denseBincount",(function(){return qt["U"]})),n.d(t,"depthToSpace",(function(){return qt["V"]})),n.d(t,"depthwiseConv2d",(function(){return qt["W"]})),n.d(t,"diag",(function(){return qt["X"]})),n.d(t,"dilation2d",(function(){return qt["Y"]})),n.d(t,"div",(function(){return qt["Z"]})),n.d(t,"divNoNan",(function(){return qt["ab"]})),n.d(t,"dot",(function(){return qt["bb"]})),n.d(t,"einsum",(function(){return qt["db"]})),n.d(t,"elu",(function(){return qt["eb"]})),n.d(t,"equal",(function(){return qt["gb"]})),n.d(t,"erf",(function(){return qt["hb"]})),n.d(t,"exp",(function(){return qt["ib"]})),n.d(t,"expandDims",(function(){return qt["jb"]})),n.d(t,"expm1",(function(){return qt["kb"]})),n.d(t,"eye",(function(){return qt["lb"]})),n.d(t,"fill",(function(){return qt["nb"]})),n.d(t,"floor",(function(){return qt["ob"]})),n.d(t,"floorDiv",(function(){return qt["pb"]})),n.d(t,"gather",(function(){return qt["rb"]})),n.d(t,"greater",(function(){return qt["tb"]})),n.d(t,"greaterEqual",(function(){return qt["ub"]})),n.d(t,"imag",(function(){return qt["wb"]})),n.d(t,"isFinite",(function(){return qt["Ab"]})),n.d(t,"isInf",(function(){return qt["Bb"]})),n.d(t,"isNaN",(function(){return qt["Cb"]})),n.d(t,"leakyRelu",(function(){return qt["Db"]})),n.d(t,"less",(function(){return qt["Eb"]})),n.d(t,"lessEqual",(function(){return qt["Fb"]})),n.d(t,"linspace",(function(){return qt["Hb"]})),n.d(t,"localResponseNormalization",(function(){return qt["Ib"]})),n.d(t,"log",(function(){return qt["Jb"]})),n.d(t,"log1p",(function(){return qt["Kb"]})),n.d(t,"logSigmoid",(function(){return qt["Lb"]})),n.d(t,"logSoftmax",(function(){return qt["Mb"]})),n.d(t,"logSumExp",(function(){return qt["Nb"]})),n.d(t,"logicalAnd",(function(){return qt["Ob"]})),n.d(t,"logicalNot",(function(){return qt["Pb"]})),n.d(t,"logicalOr",(function(){return qt["Qb"]})),n.d(t,"logicalXor",(function(){return qt["Rb"]})),n.d(t,"matMul",(function(){return qt["Tb"]})),n.d(t,"max",(function(){return qt["Ub"]})),n.d(t,"maxPool",(function(){return qt["Vb"]})),n.d(t,"maxPool3d",(function(){return qt["Wb"]})),n.d(t,"maxPoolWithArgmax",(function(){return qt["Xb"]})),n.d(t,"maximum",(function(){return qt["Yb"]})),n.d(t,"mean",(function(){return qt["Zb"]})),n.d(t,"meshgrid",(function(){return qt["ac"]})),n.d(t,"min",(function(){return qt["bc"]})),n.d(t,"minimum",(function(){return qt["cc"]})),n.d(t,"mirrorPad",(function(){return qt["dc"]})),n.d(t,"mod",(function(){return qt["ec"]})),n.d(t,"moments",(function(){return qt["fc"]})),n.d(t,"mul",(function(){return qt["hc"]})),n.d(t,"multiRNNCell",(function(){return qt["ic"]})),n.d(t,"multinomial",(function(){return qt["jc"]})),n.d(t,"neg",(function(){return qt["kc"]})),n.d(t,"notEqual",(function(){return qt["mc"]})),n.d(t,"oneHot",(function(){return qt["nc"]})),n.d(t,"ones",(function(){return qt["oc"]})),n.d(t,"onesLike",(function(){return qt["pc"]})),n.d(t,"outerProduct",(function(){return qt["rc"]})),n.d(t,"pad",(function(){return qt["sc"]})),n.d(t,"pad1d",(function(){return qt["tc"]})),n.d(t,"pad2d",(function(){return qt["uc"]})),n.d(t,"pad3d",(function(){return qt["vc"]})),n.d(t,"pad4d",(function(){return qt["wc"]})),n.d(t,"pool",(function(){return qt["xc"]})),n.d(t,"pow",(function(){return qt["yc"]})),n.d(t,"prelu",(function(){return qt["zc"]})),n.d(t,"print",(function(){return qt["Ac"]})),n.d(t,"prod",(function(){return qt["Bc"]})),n.d(t,"rand",(function(){return qt["Cc"]})),n.d(t,"randomGamma",(function(){return qt["Dc"]})),n.d(t,"randomNormal",(function(){return qt["Ec"]})),n.d(t,"randomUniform",(function(){return qt["Fc"]})),n.d(t,"range",(function(){return qt["Gc"]})),n.d(t,"real",(function(){return qt["Hc"]})),n.d(t,"reciprocal",(function(){return qt["Ic"]})),n.d(t,"relu",(function(){return qt["Jc"]})),n.d(t,"relu6",(function(){return qt["Kc"]})),n.d(t,"reshape",(function(){return qt["Lc"]})),n.d(t,"reverse",(function(){return qt["Mc"]})),n.d(t,"reverse1d",(function(){return qt["Nc"]})),n.d(t,"reverse2d",(function(){return qt["Oc"]})),n.d(t,"reverse3d",(function(){return qt["Pc"]})),n.d(t,"reverse4d",(function(){return qt["Qc"]})),n.d(t,"round",(function(){return qt["Sc"]})),n.d(t,"rsqrt",(function(){return qt["Tc"]})),n.d(t,"scalar",(function(){return qt["Uc"]})),n.d(t,"selu",(function(){return qt["Wc"]})),n.d(t,"separableConv2d",(function(){return qt["Xc"]})),n.d(t,"setdiff1dAsync",(function(){return qt["Yc"]})),n.d(t,"sigmoid",(function(){return qt["Zc"]})),n.d(t,"sign",(function(){return qt["ad"]})),n.d(t,"sin",(function(){return qt["cd"]})),n.d(t,"sinh",(function(){return qt["dd"]})),n.d(t,"slice",(function(){return qt["ed"]})),n.d(t,"slice1d",(function(){return qt["fd"]})),n.d(t,"slice2d",(function(){return qt["gd"]})),n.d(t,"slice3d",(function(){return qt["hd"]})),n.d(t,"slice4d",(function(){return qt["id"]})),n.d(t,"softmax",(function(){return qt["jd"]})),n.d(t,"softplus",(function(){return qt["kd"]})),n.d(t,"spaceToBatchND",(function(){return qt["ld"]})),n.d(t,"fft",(function(){return qt["mb"]})),n.d(t,"ifft",(function(){return qt["vb"]})),n.d(t,"irfft",(function(){return qt["zb"]})),n.d(t,"rfft",(function(){return qt["Rc"]})),n.d(t,"split",(function(){return qt["pd"]})),n.d(t,"sqrt",(function(){return qt["qd"]})),n.d(t,"square",(function(){return qt["rd"]})),n.d(t,"squaredDifference",(function(){return qt["sd"]})),n.d(t,"squeeze",(function(){return qt["td"]})),n.d(t,"stack",(function(){return qt["ud"]})),n.d(t,"step",(function(){return qt["vd"]})),n.d(t,"stridedSlice",(function(){return qt["wd"]})),n.d(t,"sub",(function(){return qt["yd"]})),n.d(t,"sum",(function(){return qt["zd"]})),n.d(t,"tan",(function(){return qt["Ad"]})),n.d(t,"tanh",(function(){return qt["Bd"]})),n.d(t,"tensor",(function(){return qt["Cd"]})),n.d(t,"tensor1d",(function(){return qt["Dd"]})),n.d(t,"tensor2d",(function(){return qt["Ed"]})),n.d(t,"tensor3d",(function(){return qt["Fd"]})),n.d(t,"tensor4d",(function(){return qt["Gd"]})),n.d(t,"tensor5d",(function(){return qt["Hd"]})),n.d(t,"tensor6d",(function(){return qt["Id"]})),n.d(t,"tile",(function(){return qt["Jd"]})),n.d(t,"topk",(function(){return qt["Kd"]})),n.d(t,"truncatedNormal",(function(){return qt["Md"]})),n.d(t,"unique",(function(){return qt["Nd"]})),n.d(t,"unsortedSegmentSum",(function(){return qt["Od"]})),n.d(t,"unstack",(function(){return qt["Pd"]})),n.d(t,"variable",(function(){return qt["Qd"]})),n.d(t,"where",(function(){return qt["Rd"]})),n.d(t,"whereAsync",(function(){return qt["Sd"]})),n.d(t,"zeros",(function(){return qt["Td"]})),n.d(t,"zerosLike",(function(){return qt["Ud"]})),n.d(t,"booleanMaskAsync",(function(){return qt["y"]})),n.d(t,"transpose",(function(){return qt["Ld"]})),n.d(t,"norm",(function(){return qt["lc"]})),n.d(t,"movingAverage",(function(){return qt["gc"]})),n.d(t,"scatterND",(function(){return qt["Vc"]})),n.d(t,"sparseToDense",(function(){return qt["nd"]})),n.d(t,"gatherND",(function(){return qt["sb"]})),n.d(t,"dropout",(function(){return qt["cb"]})),n.d(t,"enclosingPowerOfTwo",(function(){return qt["fb"]})),n.d(t,"cosineWindow",(function(){return qt["S"]})),n.d(t,"inTopKAsync",(function(){return qt["yb"]})),n.d(t,"op",(function(){return qt["qc"]})),n.d(t,"OP_SCOPE_SUFFIX",(function(){return qt["a"]})),n.d(t,"image",(function(){return qt["xb"]})),n.d(t,"linalg",(function(){return qt["Gb"]})),n.d(t,"losses",(function(){return qt["Sb"]})),n.d(t,"spectral",(function(){return qt["od"]})),n.d(t,"fused",(function(){return qt["qb"]})),n.d(t,"signal",(function(){return qt["bd"]})),n.d(t,"sparse",(function(){return qt["md"]})),n.d(t,"string",(function(){return qt["xd"]})),n.d(t,"Reduction",(function(){return Kt["a"]})),n.d(t,"train",(function(){return Yt})),n.d(t,"enableProdMode",(function(){return jt["g"]})),n.d(t,"enableDebugMode",(function(){return jt["f"]})),n.d(t,"disableDeprecationWarnings",(function(){return jt["c"]})),n.d(t,"deprecationWarn",(function(){return jt["b"]})),n.d(t,"disposeVariables",(function(){return jt["e"]})),n.d(t,"engine",(function(){return jt["h"]})),n.d(t,"memory",(function(){return jt["m"]})),n.d(t,"profile",(function(){return jt["n"]})),n.d(t,"tidy",(function(){return jt["t"]})),n.d(t,"dispose",(function(){return jt["d"]})),n.d(t,"keep",(function(){return jt["l"]})),n.d(t,"time",(function(){return jt["u"]})),n.d(t,"setBackend",(function(){return jt["r"]})),n.d(t,"ready",(function(){return jt["o"]})),n.d(t,"getBackend",(function(){return jt["k"]})),n.d(t,"removeBackend",(function(){return jt["q"]})),n.d(t,"findBackend",(function(){return jt["i"]})),n.d(t,"findBackendFactory",(function(){return jt["j"]})),n.d(t,"registerBackend",(function(){return jt["p"]})),n.d(t,"backend",(function(){return jt["a"]})),n.d(t,"setPlatform",(function(){return jt["s"]})),n.d(t,"getKernel",(function(){return ze["c"]})),n.d(t,"getGradient",(function(){return ze["b"]})),n.d(t,"getKernelsForBackend",(function(){return ze["d"]})),n.d(t,"registerKernel",(function(){return ze["f"]})),n.d(t,"registerGradient",(function(){return ze["e"]})),n.d(t,"unregisterKernel",(function(){return ze["h"]})),n.d(t,"unregisterGradient",(function(){return ze["g"]})),n.d(t,"copyRegisteredKernels",(function(){return ze["a"]})),n.d(t,"customGrad",(function(){return Et["a"]})),n.d(t,"grad",(function(){return Et["b"]})),n.d(t,"grads",(function(){return Et["c"]})),n.d(t,"valueAndGrad",(function(){return Et["d"]})),n.d(t,"valueAndGrads",(function(){return Et["e"]})),n.d(t,"variableGrads",(function(){return Et["f"]})),n.d(t,"Environment",(function(){return h["b"]})),n.d(t,"env",(function(){return h["c"]})),n.d(t,"ENV",(function(){return h["a"]})),n.d(t,"version_core",(function(){return kt})),n.d(t,"nextFrame",(function(){return Zt})),n.d(t,"browser",(function(){return o})),n.d(t,"io",(function(){return r})),n.d(t,"math",(function(){return a})),n.d(t,"serialization",(function(){return u})),n.d(t,"test_util",(function(){return Ot})),n.d(t,"util",(function(){return wt})),n.d(t,"backend_util",(function(){return l})),n.d(t,"tensor_util",(function(){return vt})),n.d(t,"slice_util",(function(){return i})),n.d(t,"gather_util",(function(){return s})),n.d(t,"scatter_util",(function(){return et})),n.d(t,"device_util",(function(){return Kn})),n.d(t,"kernel_impls",(function(){return d})),n.d(t,"KernelBackend",(function(){return Qn["b"]})),n.d(t,"DataStorage",(function(){return Qn["a"]})),n.d(t,"Abs",(function(){return Ve["a"]})),n.d(t,"Acos",(function(){return Ve["b"]})),n.d(t,"Acosh",(function(){return Ve["c"]})),n.d(t,"Add",(function(){return Ve["d"]})),n.d(t,"AddN",(function(){return Ve["e"]})),n.d(t,"All",(function(){return Ve["f"]})),n.d(t,"Any",(function(){return Ve["g"]})),n.d(t,"ArgMax",(function(){return Ve["h"]})),n.d(t,"ArgMin",(function(){return Ve["i"]})),n.d(t,"Asin",(function(){return Ve["j"]})),n.d(t,"Asinh",(function(){return Ve["k"]})),n.d(t,"Atan",(function(){return Ve["l"]})),n.d(t,"Atanh",(function(){return Ve["n"]})),n.d(t,"Atan2",(function(){return Ve["m"]})),n.d(t,"AvgPool",(function(){return Ve["o"]})),n.d(t,"AvgPoolGrad",(function(){return Ve["r"]})),n.d(t,"AvgPool3D",(function(){return Ve["p"]})),n.d(t,"AvgPool3DGrad",(function(){return Ve["q"]})),n.d(t,"BatchMatMul",(function(){return Ve["s"]})),n.d(t,"BatchToSpaceND",(function(){return Ve["t"]})),n.d(t,"Bincount",(function(){return Ve["u"]})),n.d(t,"BroadcastTo",(function(){return Ve["v"]})),n.d(t,"Cast",(function(){return Ve["w"]})),n.d(t,"Ceil",(function(){return Ve["x"]})),n.d(t,"ClipByValue",(function(){return Ve["y"]})),n.d(t,"Complex",(function(){return Ve["z"]})),n.d(t,"ComplexAbs",(function(){return Ve["A"]})),n.d(t,"Concat",(function(){return Ve["B"]})),n.d(t,"Conv2D",(function(){return Ve["C"]})),n.d(t,"Conv2DBackpropFilter",(function(){return Ve["D"]})),n.d(t,"Conv2DBackpropInput",(function(){return Ve["E"]})),n.d(t,"Conv3D",(function(){return Ve["F"]})),n.d(t,"Conv3DBackpropFilterV2",(function(){return Ve["G"]})),n.d(t,"Conv3DBackpropInputV2",(function(){return Ve["H"]})),n.d(t,"Cos",(function(){return Ve["I"]})),n.d(t,"Cosh",(function(){return Ve["J"]})),n.d(t,"Cumsum",(function(){return Ve["L"]})),n.d(t,"CropAndResize",(function(){return Ve["K"]})),n.d(t,"DenseBincount",(function(){return Ve["M"]})),n.d(t,"DepthToSpace",(function(){return Ve["N"]})),n.d(t,"DepthwiseConv2dNative",(function(){return Ve["O"]})),n.d(t,"DepthwiseConv2dNativeBackpropFilter",(function(){return Ve["P"]})),n.d(t,"DepthwiseConv2dNativeBackpropInput",(function(){return Ve["Q"]})),n.d(t,"Diag",(function(){return Ve["R"]})),n.d(t,"Dilation2D",(function(){return Ve["S"]})),n.d(t,"Dilation2DBackpropInput",(function(){return Ve["U"]})),n.d(t,"Dilation2DBackpropFilter",(function(){return Ve["T"]})),n.d(t,"RealDiv",(function(){return Ve["lc"]})),n.d(t,"Einsum",(function(){return Ve["V"]})),n.d(t,"Elu",(function(){return Ve["W"]})),n.d(t,"EluGrad",(function(){return Ve["X"]})),n.d(t,"Erf",(function(){return Ve["Z"]})),n.d(t,"Equal",(function(){return Ve["Y"]})),n.d(t,"Exp",(function(){return Ve["ab"]})),n.d(t,"ExpandDims",(function(){return Ve["bb"]})),n.d(t,"Expm1",(function(){return Ve["cb"]})),n.d(t,"FFT",(function(){return Ve["db"]})),n.d(t,"Fill",(function(){return Ve["eb"]})),n.d(t,"FlipLeftRight",(function(){return Ve["fb"]})),n.d(t,"Floor",(function(){return Ve["gb"]})),n.d(t,"FloorDiv",(function(){return Ve["hb"]})),n.d(t,"FusedBatchNorm",(function(){return Ve["jb"]})),n.d(t,"GatherV2",(function(){return Ve["nb"]})),n.d(t,"GatherNd",(function(){return Ve["mb"]})),n.d(t,"Greater",(function(){return Ve["ob"]})),n.d(t,"GreaterEqual",(function(){return Ve["pb"]})),n.d(t,"Identity",(function(){return Ve["rb"]})),n.d(t,"IFFT",(function(){return Ve["qb"]})),n.d(t,"Imag",(function(){return Ve["sb"]})),n.d(t,"IsFinite",(function(){return Ve["tb"]})),n.d(t,"IsInf",(function(){return Ve["ub"]})),n.d(t,"IsNan",(function(){return Ve["vb"]})),n.d(t,"LeakyRelu",(function(){return Ve["yb"]})),n.d(t,"Less",(function(){return Ve["zb"]})),n.d(t,"LessEqual",(function(){return Ve["Ab"]})),n.d(t,"LinSpace",(function(){return Ve["Bb"]})),n.d(t,"Log",(function(){return Ve["Cb"]})),n.d(t,"Log1p",(function(){return Ve["Db"]})),n.d(t,"LogicalAnd",(function(){return Ve["Fb"]})),n.d(t,"LogicalNot",(function(){return Ve["Gb"]})),n.d(t,"LogicalOr",(function(){return Ve["Hb"]})),n.d(t,"LogSoftmax",(function(){return Ve["Eb"]})),n.d(t,"LRN",(function(){return Ve["wb"]})),n.d(t,"LRNGrad",(function(){return Ve["xb"]})),n.d(t,"Max",(function(){return Ve["Ib"]})),n.d(t,"Maximum",(function(){return Ve["Ob"]})),n.d(t,"MaxPool",(function(){return Ve["Jb"]})),n.d(t,"MaxPoolGrad",(function(){return Ve["Mb"]})),n.d(t,"MaxPool3D",(function(){return Ve["Kb"]})),n.d(t,"MaxPool3DGrad",(function(){return Ve["Lb"]})),n.d(t,"MaxPoolWithArgmax",(function(){return Ve["Nb"]})),n.d(t,"Mean",(function(){return Ve["Pb"]})),n.d(t,"Min",(function(){return Ve["Qb"]})),n.d(t,"Minimum",(function(){return Ve["Rb"]})),n.d(t,"MirrorPad",(function(){return Ve["Sb"]})),n.d(t,"Mod",(function(){return Ve["Tb"]})),n.d(t,"Multinomial",(function(){return Ve["Ub"]})),n.d(t,"Multiply",(function(){return Ve["Vb"]})),n.d(t,"Neg",(function(){return Ve["Wb"]})),n.d(t,"NotEqual",(function(){return Ve["ac"]})),n.d(t,"NonMaxSuppressionV3",(function(){return Ve["Xb"]})),n.d(t,"NonMaxSuppressionV4",(function(){return Ve["Yb"]})),n.d(t,"NonMaxSuppressionV5",(function(){return Ve["Zb"]})),n.d(t,"OnesLike",(function(){return Ve["cc"]})),n.d(t,"OneHot",(function(){return Ve["bc"]})),n.d(t,"Pack",(function(){return Ve["dc"]})),n.d(t,"PadV2",(function(){return Ve["ec"]})),n.d(t,"Pool",(function(){return Ve["fc"]})),n.d(t,"Pow",(function(){return Ve["gc"]})),n.d(t,"Prelu",(function(){return Ve["hc"]})),n.d(t,"Prod",(function(){return Ve["ic"]})),n.d(t,"Range",(function(){return Ve["jc"]})),n.d(t,"Real",(function(){return Ve["kc"]})),n.d(t,"Reciprocal",(function(){return Ve["mc"]})),n.d(t,"Relu",(function(){return Ve["nc"]})),n.d(t,"Reshape",(function(){return Ve["pc"]})),n.d(t,"ResizeNearestNeighbor",(function(){return Ve["sc"]})),n.d(t,"ResizeNearestNeighborGrad",(function(){return Ve["tc"]})),n.d(t,"ResizeBilinear",(function(){return Ve["qc"]})),n.d(t,"ResizeBilinearGrad",(function(){return Ve["rc"]})),n.d(t,"Relu6",(function(){return Ve["oc"]})),n.d(t,"Reverse",(function(){return Ve["uc"]})),n.d(t,"Round",(function(){return Ve["wc"]})),n.d(t,"Rsqrt",(function(){return Ve["xc"]})),n.d(t,"ScatterNd",(function(){return Ve["yc"]})),n.d(t,"Select",(function(){return Ve["zc"]})),n.d(t,"Selu",(function(){return Ve["Ac"]})),n.d(t,"Slice",(function(){return Ve["Fc"]})),n.d(t,"Sin",(function(){return Ve["Dc"]})),n.d(t,"Sinh",(function(){return Ve["Ec"]})),n.d(t,"Sign",(function(){return Ve["Cc"]})),n.d(t,"Sigmoid",(function(){return Ve["Bc"]})),n.d(t,"Softplus",(function(){return Ve["Hc"]})),n.d(t,"Sqrt",(function(){return Ve["Pc"]})),n.d(t,"Sum",(function(){return Ve["Yc"]})),n.d(t,"SpaceToBatchND",(function(){return Ve["Ic"]})),n.d(t,"SplitV",(function(){return Ve["Oc"]})),n.d(t,"Softmax",(function(){return Ve["Gc"]})),n.d(t,"SparseFillEmptyRows",(function(){return Ve["Jc"]})),n.d(t,"SparseReshape",(function(){return Ve["Kc"]})),n.d(t,"SparseSegmentMean",(function(){return Ve["Lc"]})),n.d(t,"SparseSegmentSum",(function(){return Ve["Mc"]})),n.d(t,"SparseToDense",(function(){return Ve["Nc"]})),n.d(t,"SquaredDifference",(function(){return Ve["Rc"]})),n.d(t,"Square",(function(){return Ve["Qc"]})),n.d(t,"StridedSlice",(function(){return Ve["Tc"]})),n.d(t,"StringNGrams",(function(){return Ve["Uc"]})),n.d(t,"StringSplit",(function(){return Ve["Vc"]})),n.d(t,"StringToHashBucketFast",(function(){return Ve["Wc"]})),n.d(t,"Sub",(function(){return Ve["Xc"]})),n.d(t,"Tan",(function(){return Ve["Zc"]})),n.d(t,"Tanh",(function(){return Ve["ad"]})),n.d(t,"Tile",(function(){return Ve["bd"]})),n.d(t,"TopK",(function(){return Ve["cd"]})),n.d(t,"Transform",(function(){return Ve["dd"]})),n.d(t,"Transpose",(function(){return Ve["ed"]})),n.d(t,"Unique",(function(){return Ve["fd"]})),n.d(t,"Unpack",(function(){return Ve["gd"]})),n.d(t,"UnsortedSegmentSum",(function(){return Ve["hd"]})),n.d(t,"ZerosLike",(function(){return Ve["id"]})),n.d(t,"Step",(function(){return Ve["Sc"]})),n.d(t,"FromPixels",(function(){return Ve["ib"]})),n.d(t,"RotateWithOffset",(function(){return Ve["vc"]})),n.d(t,"_FusedMatMul",(function(){return Ve["jd"]})),n.d(t,"FusedConv2D",(function(){return Ve["kb"]})),n.d(t,"FusedDepthwiseConv2D",(function(){return Ve["lb"]}));var r={};n.r(r),n.d(r,"copyModel",(function(){return J})),n.d(r,"listModels",(function(){return Q})),n.d(r,"moveModel",(function(){return ee})),n.d(r,"removeModel",(function(){return Z})),n.d(r,"browserFiles",(function(){return be})),n.d(r,"browserHTTPRequest",(function(){return Ce})),n.d(r,"concatenateArrayBuffers",(function(){return f["d"]})),n.d(r,"decodeWeights",(function(){return f["e"]})),n.d(r,"encodeWeights",(function(){return f["f"]})),n.d(r,"fromMemory",(function(){return Ae})),n.d(r,"getLoadHandlers",(function(){return x})),n.d(r,"getModelArtifactsForJSON",(function(){return f["g"]})),n.d(r,"getModelArtifactsInfoForJSON",(function(){return f["h"]})),n.d(r,"getSaveHandlers",(function(){return y})),n.d(r,"http",(function(){return Ne})),n.d(r,"isHTTPScheme",(function(){return Te})),n.d(r,"loadWeights",(function(){return ve})),n.d(r,"registerLoadRouter",(function(){return g})),n.d(r,"registerSaveRouter",(function(){return b})),n.d(r,"weightsLoaderFactory",(function(){return Oe})),n.d(r,"withSaveHandler",(function(){return Re}));var a={};n.r(a),n.d(a,"confusionMatrix",(function(){return Be}));var o={};n.r(o),n.d(o,"fromPixelsAsync",(function(){return Ye})),n.d(o,"toPixels",(function(){return Qe})),n.d(o,"fromPixels",(function(){return Ze}));var s={};n.r(s),n.d(s,"prepareAndValidate",(function(){return Je}));var i={};n.r(i),n.d(i,"assertParamsValid",(function(){return tt})),n.d(i,"maskToAxes",(function(){return nt})),n.d(i,"computeOutShape",(function(){return rt})),n.d(i,"stridesWithElidedDims",(function(){return at})),n.d(i,"getNormalizedAxes",(function(){return it})),n.d(i,"startIndicesWithElidedDims",(function(){return ut})),n.d(i,"stopIndicesWithElidedDims",(function(){return ct})),n.d(i,"stridesForAxis",(function(){return lt})),n.d(i,"startForAxis",(function(){return dt})),n.d(i,"stopForAxis",(function(){return pt})),n.d(i,"isSliceContinous",(function(){return ht})),n.d(i,"computeFlatOffset",(function(){return ft})),n.d(i,"parseSliceParams",(function(){return mt})),n.d(i,"sliceInfo",(function(){return bt}));var u={};n.r(u),n.d(u,"Serializable",(function(){return gt})),n.d(u,"SerializationMap",(function(){return yt})),n.d(u,"registerClass",(function(){return xt}));var c={};n.r(c),n.d(c,"segOpComputeOptimalWindowSize",(function(){return Wn})),n.d(c,"computeOutShape",(function(){return Un})),n.d(c,"collectGatherOpShapeInfo",(function(){return Gn}));var l={};n.r(l),n.d(l,"axesAreInnerMostDims",(function(){return Jt["b"]})),n.d(l,"combineLocations",(function(){return Jt["c"]})),n.d(l,"computeOutAndReduceShapes",(function(){return Jt["d"]})),n.d(l,"expandShapeToKeepDim",(function(){return Jt["e"]})),n.d(l,"assertAxesAreInnerMostDims",(function(){return Jt["a"]})),n.d(l,"getAxesPermutation",(function(){return Jt["f"]})),n.d(l,"getUndoAxesPermutation",(function(){return Jt["h"]})),n.d(l,"getInnerMostAxes",(function(){return Jt["g"]})),n.d(l,"getBroadcastDims",(function(){return en["b"]})),n.d(l,"getReductionAxes",(function(){return en["c"]})),n.d(l,"assertAndGetBroadcastShape",(function(){return en["a"]})),n.d(l,"assertParamsConsistent",(function(){return tn})),n.d(l,"computeOutShape",(function(){return nn})),n.d(l,"computeDilation2DInfo",(function(){return rn["d"]})),n.d(l,"computePool2DInfo",(function(){return rn["e"]})),n.d(l,"computePool3DInfo",(function(){return rn["f"]})),n.d(l,"computeConv2DInfo",(function(){return rn["a"]})),n.d(l,"computeConv3DInfo",(function(){return rn["b"]})),n.d(l,"computeDefaultPad",(function(){return rn["c"]})),n.d(l,"tupleValuesAreOne",(function(){return rn["i"]})),n.d(l,"eitherStridesOrDilationsAreOne",(function(){return rn["h"]})),n.d(l,"convertConv2DDataFormat",(function(){return rn["g"]})),n.d(l,"getFusedDyActivation",(function(){return an["c"]})),n.d(l,"getFusedBiasGradient",(function(){return an["b"]})),n.d(l,"applyActivation",(function(){return an["a"]})),n.d(l,"shouldFuse",(function(){return an["d"]})),n.d(l,"PARALLELIZE_THRESHOLD",(function(){return on})),n.d(l,"computeOptimalWindowSize",(function(){return sn})),n.d(l,"slice_util",(function(){return i})),n.d(l,"upcastType",(function(){return Ht["c"]})),n.d(l,"getImageCenter",(function(){return un})),n.d(l,"getReshaped",(function(){return cn})),n.d(l,"getPermuted",(function(){return ln})),n.d(l,"getReshapedPermuted",(function(){return dn})),n.d(l,"getSliceBeginCoords",(function(){return pn})),n.d(l,"getSliceSize",(function(){return hn})),n.d(l,"prepareAndValidate",(function(){return Je})),n.d(l,"validateUpdateShape",(function(){return et["validateUpdateShape"]})),n.d(l,"validateInput",(function(){return et["validateInput"]})),n.d(l,"calculateShapes",(function(){return et["calculateShapes"]})),n.d(l,"SELU_SCALEALPHA",(function(){return fn})),n.d(l,"SELU_SCALE",(function(){return mn})),n.d(l,"ERF_P",(function(){return bn})),n.d(l,"ERF_A1",(function(){return gn})),n.d(l,"ERF_A2",(function(){return yn})),n.d(l,"ERF_A3",(function(){return xn})),n.d(l,"ERF_A4",(function(){return vn})),n.d(l,"ERF_A5",(function(){return On})),n.d(l,"warn",(function(){return wn})),n.d(l,"log",(function(){return kn})),n.d(l,"mergeRealAndImagArrays",(function(){return jn})),n.d(l,"splitRealAndImagArrays",(function(){return Sn})),n.d(l,"complexWithEvenIndex",(function(){return Tn})),n.d(l,"complexWithOddIndex",(function(){return In})),n.d(l,"getComplexWithIndex",(function(){return Nn})),n.d(l,"assignToTypedArray",(function(){return Cn})),n.d(l,"exponents",(function(){return $n})),n.d(l,"exponent",(function(){return En})),n.d(l,"decodeEinsumEquation",(function(){return Dn})),n.d(l,"getEinsumPermutation",(function(){return Mn})),n.d(l,"checkEinsumDimSizes",(function(){return Pn})),n.d(l,"getEinsumComputePath",(function(){return Ln})),n.d(l,"isIdentityPermutation",(function(){return Bn})),n.d(l,"prepareSplitSize",(function(){return zn})),n.d(l,"segment_util",(function(){return c})),n.d(l,"fromUint8ToStringArray",(function(){return Hn})),n.d(l,"fromStringArrayToUint8",(function(){return qn}));var d={};n.r(d),n.d(d,"nonMaxSuppressionV3Impl",(function(){return Xn["a"]})),n.d(d,"nonMaxSuppressionV4Impl",(function(){return Xn["b"]})),n.d(d,"nonMaxSuppressionV5Impl",(function(){return Xn["c"]})),n.d(d,"whereImpl",(function(){return Yn["a"]}));var p=n("6ae2"),h=(n("29a8"),n("b333")),f=n("350f");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class m{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==m.instance&&(m.instance=new m),m.instance}static registerSaveRouter(e){m.getInstance().saveRouters.push(e)}static registerLoadRouter(e){m.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return m.getHandlers(e,"save")}static getLoadHandlers(e,t){return m.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[],a="load"===t?m.getInstance().loadRouters:m.getInstance().saveRouters;return a.forEach(t=>{const a=t(e,n);null!==a&&r.push(a)}),r}}const b=e=>m.registerSaveRouter(e),g=e=>m.registerLoadRouter(e),y=e=>m.getSaveHandlers(e),x=(e,t)=>m.getLoadHandlers(e,t)
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */,v="tensorflowjs",O=1,w="models_store",k="model_info_store";function j(){if(!Object(h["c"])().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"===typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function S(e){const t=e.result;t.createObjectStore(w,{keyPath:"modelPath"}),t.createObjectStore(k,{keyPath:"modelPath"})}class T{constructor(e){if(this.indexedDB=j(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((e,n)=>{const r=this.indexedDB.open(v,O);r.onupgradeneeded=()=>S(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(w,"readonly"),r=t.objectStore(w),o=r.get(this.modelPath);o.onsuccess=()=>{if(null==o.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(o.result.modelArtifacts)},o.onerror=e=>(a.close(),n(o.error)),t.oncomplete=()=>a.close()}else{const r=Object(f["h"])(t),o=a.transaction(k,"readwrite");let s=o.objectStore(k);const i=s.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;i.onsuccess=()=>{u=a.transaction(w,"readwrite");const i=u.objectStore(w),c=i.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});c.onsuccess=()=>e({modelArtifactsInfo:r}),c.onerror=e=>{s=o.objectStore(k);const t=s.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(c.error)),t.onerror=e=>(a.close(),n(c.error))}},i.onerror=e=>(a.close(),n(i.error)),o.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)})}}T.URL_SCHEME="indexeddb://";const I=e=>Object(h["c"])().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(T.URL_SCHEME)?N(e.slice(T.URL_SCHEME.length)):null;function N(e){return new T(e)}function C(e){return e.startsWith(T.URL_SCHEME)?e.slice(T.URL_SCHEME.length):e}m.registerSaveRouter(I),m.registerLoadRouter(I);class ${constructor(){this.indexedDB=j()}async listModels(){return new Promise((e,t)=>{const n=this.indexedDB.open(v,O);n.onupgradeneeded=()=>S(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(k,"readonly"),o=a.objectStore(k),s=o.getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)})}async removeModel(e){return e=C(e),new Promise((t,n)=>{const r=this.indexedDB.open(v,O);r.onupgradeneeded=()=>S(r),r.onsuccess=()=>{const a=r.result,o=a.transaction(k,"readwrite"),s=o.objectStore(k),i=s.get(e);let u;i.onsuccess=()=>{if(null==i.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=s.delete(e),o=()=>{u=a.transaction(w,"readwrite");const r=u.objectStore(w),o=r.delete(e);o.onsuccess=()=>t(i.result.modelArtifactsInfo),o.onerror=e=>n(i.error)};r.onsuccess=o,r.onerror=e=>(o(),a.close(),n(i.error))}},i.onerror=e=>(a.close(),n(i.error)),o.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)})}}var E=n("6ad5");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A="/",R="tensorflowjs_models",_="info",F="model_topology",D="weight_specs",M="weight_data",P="model_metadata";function L(e){return{info:[R,e,_].join(A),topology:[R,e,F].join(A),weightSpecs:[R,e,D].join(A),weightData:[R,e,M].join(A),modelMetadata:[R,e,P].join(A)}}function B(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function V(e){const t=e.split(A);if(t.length<3)throw new Error("Invalid key format: "+e);return t.slice(1,t.length-1).join(A)}function z(e){return e.startsWith(W.URL_SCHEME)?e.slice(W.URL_SCHEME.length):e}class W{constructor(e){if(!Object(h["c"])().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=L(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),a=Object(f["h"])(e);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,Object(f["a"])(e.weightData));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:a}}catch(t){throw B(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const o=this.LS.getItem(this.keys.weightData);if(null==o)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=Object(f["b"])(o),t}}W.URL_SCHEME="localstorage://";const U=e=>Object(h["c"])().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(W.URL_SCHEME)?G(e.slice(W.URL_SCHEME.length)):null;function G(e){return new W(e)}m.registerSaveRouter(U),m.registerLoadRouter(U);class H{constructor(){Object(E["b"])(Object(h["c"])().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),Object(E["b"])("undefined"===typeof window||"undefined"!==typeof window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=R+A,n=A+_;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);if(a.startsWith(t)&&a.endsWith(n)){const t=V(a);e[t]=JSON.parse(this.LS.getItem(a))}}return e}async removeModel(e){e=z(e);const t=L(e);if(null==this.LS.getItem(t.info))throw new Error(`Cannot find model at path '${e}'`);const n=JSON.parse(this.LS.getItem(t.info));return B(t),n}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q="://";class K{constructor(){this.managers={}}static getInstance(){return null==K.instance&&(K.instance=new K),K.instance}static registerManager(e,t){Object(E["b"])(null!=e,()=>"scheme must not be undefined or null."),e.endsWith(q)&&(e=e.slice(0,e.indexOf(q))),Object(E["b"])(e.length>0,()=>"scheme must not be an empty string.");const n=K.getInstance();Object(E["b"])(null==n.managers[e],()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function X(e){if(-1===e.indexOf(q))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+K.getSchemes().join(","));return{scheme:e.split(q)[0],path:e.split(q)[1]}}async function Y(e,t,n=!1){Object(E["b"])(e!==t,()=>`Old path and new path are the same: '${e}'`);const r=m.getLoadHandlers(e);Object(E["b"])(r.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),Object(E["b"])(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`);const a=r[0],o=m.getSaveHandlers(t);Object(E["b"])(o.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),Object(E["b"])(o.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`);const s=o[0],i=X(e).scheme,u=X(e).path,c=i===X(e).scheme,l=await a.load();n&&c&&await K.getManager(i).removeModel(u);const d=await s.save(l);return n&&!c&&await K.getManager(i).removeModel(u),d.modelArtifactsInfo}async function Q(){const e=K.getSchemes(),t={};for(const n of e){const e=await K.getManager(n).listModels();for(const r in e){const a=n+q+r;t[a]=e[r]}}return t}async function Z(e){const t=X(e),n=K.getManager(t.scheme);return n.removeModel(t.path)}async function J(e,t){const n=!1;return Y(e,t,n)}async function ee(e,t){const n=!0;return Y(e,t,n)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class te{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got "+t);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(Object(h["c"])().get("IS_BROWSER")){Object(h["c"])().setPlatform("browser",new te);try{K.registerManager(W.URL_SCHEME,new H)}catch(Zn){}try{K.registerManager(T.URL_SCHEME,new $)}catch(Zn){}}n("4b05");var ne=n("043e"),re=n("deb3"),ae=n("f0a9"),oe=n("7568"),se=n("34d7");
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(p["b"])();const ie={buffer:ne["a"],cast:re["a"],clone:ae["a"],print:oe["a"]};Object(se["e"])(ie);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const ue="model",ce=".json",le=".weights.bin";function de(e){return new Promise(e=>setTimeout(e)).then(e)}class pe{constructor(e){if(!Object(h["c"])().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(pe.URL_SCHEME)&&(e=e.slice(pe.URL_SCHEME.length)),null!=e&&0!==e.length||(e=ue),this.modelJsonFileName=e+ce,this.weightDataFileName=e+le}async save(e){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r=Object(f["i"])(e,n),a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),o=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(o.download=this.modelJsonFileName,o.href=a,await de(()=>o.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await de(()=>e.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Object(f["h"])(e)}}}}pe.URL_SCHEME="downloads://";class he{constructor(e){if(null==e||e.length<1)throw new Error("When calling browserFiles, at least 1 file is required, but received "+e);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),a=r.modelTopology;if(null==a)return void t(new Error("modelTopology field is missing from file "+this.jsonFile.name));const o=r.weightsManifest;if(null==o)return void t(new Error("weightManifest field is missing from file "+this.jsonFile.name));if(0===this.weightsFiles.length)return void e({modelTopology:a});const s=Object(f["g"])(r,e=>this.loadWeights(e));e(s)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){const t=[],n=[];for(const o of e)t.push(...o.weights),n.push(...o.paths);const r=this.checkManifestAndWeightFiles(e),a=n.map(e=>this.loadWeightsFile(e,r[e]));return Promise.all(a).then(e=>[t,Object(f["d"])(e)])}loadWeightsFile(e,t){return new Promise((n,r)=>{const a=new FileReader;a.onload=e=>{const t=e.target.result;n(t)},a.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map(e=>Object(f["c"])(e.name)),r={};for(const a of e)a.paths.forEach(e=>{const a=Object(f["c"])(e);if(-1!==t.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),-1===n.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(a)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}const fe=e=>Object(h["c"])().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(pe.URL_SCHEME)?me(e.slice(pe.URL_SCHEME.length)):null;function me(e="model"){return new pe(e)}function be(e){return new he(e)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ge(e,t,n,r){s(e),n=null==n?0:n,r=null==r?1:r,i(n,r);let a=0;const o=o=>(o.then(o=>{const s=n+ ++a/e.length*(r-n);return t(s),o}),o);function s(e){Object(E["b"])(null!=e&&Array.isArray(e)&&e.length>0,()=>"promises must be a none empty array")}function i(e,t){Object(E["b"])(e>=0&&e<=1,()=>"Progress fraction must be in range [0, 1], but got startFraction "+e),Object(E["b"])(t>=0&&t<=1,()=>"Progress fraction must be in range [0, 1], but got endFraction "+t),Object(E["b"])(t>=e,()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction `+t)}return Promise.all(e.map(o))}m.registerSaveRouter(fe);var ye=n("9847");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function xe(e,t){null==t&&(t={});const n=null==t.fetchFunc?Object(h["c"])().platform.fetch:t.fetchFunc,r=e.map(e=>n(e,t.requestInit,{isBinary:!0})),a=0,o=.5,s=null==t.onProgress?await Promise.all(r):await ge(r,t.onProgress,a,o),i=s.map(e=>e.arrayBuffer()),u=.5,c=1,l=null==t.onProgress?await Promise.all(i):await ge(i,t.onProgress,u,c);return l}async function ve(e,t="",n,r){const a=e=>xe(e,{requestInit:r}),o=Oe(a);return o(e,t,n)}function Oe(e){return async(t,n="",r)=>{const a=t.map(()=>!1),o={},s=null!=r?r.map(()=>!1):[],i=[];if(t.forEach((e,t)=>{let n=0;e.weights.forEach(e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,c=ye["a"][u]*E["O"](e.shape),l=()=>{a[t]=!0,null==o[t]&&(o[t]=[]),o[t].push({manifestEntry:e,groupOffset:n,sizeBytes:c})};null!=r?r.forEach((t,n)=>{t===e.name&&(l(),s[n]=!0)}):l(),i.push(e.name),n+=c})}),!s.every(e=>e)){const e=r.filter((e,t)=>!s[t]);throw new Error("Could not find weights in manifest with names: "+e.join(", ")+". \nManifest JSON has weights with names: "+i.join(", ")+".")}const u=a.reduce((e,t,n)=>(t&&e.push(n),e),[]),c=[];u.forEach(e=>{t[e].paths.forEach(e=>{const t=n+(n.endsWith("/")?"":"/")+e;c.push(t)})});const l=await e(c),d={};let p=0;return u.forEach(e=>{const n=t[e].paths.length;let r=0;for(let t=0;t<n;t++)r+=l[p+t].byteLength;const a=new ArrayBuffer(r),s=new Uint8Array(a);let i=0;for(let t=0;t<n;t++){const e=new Uint8Array(l[p+t]);s.set(e,i),i+=e.byteLength}const u=o[e];u.forEach(e=>{const t=a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),n=Object(f["e"])(t,[e.manifestEntry]);for(const r in n)d[r]=n[r]}),p+=n}),d}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const we="application/octet-stream",ke="application/json";class je{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(Object(E["b"])("function"===typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=Object(h["c"])().platform.fetch,Object(E["b"])(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&Object(E["b"])(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=Object(f["i"])(e,n);t.body.append("model.json",new Blob([JSON.stringify(r)],{type:ke}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:we}),"model.weights.bin");const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:Object(f["h"])(e),responses:[a]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+a.status+".")}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code `+e.status+". Please verify this URL points to the model JSON of the model to load.");let t;try{t=await e.json()}catch(a){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Object(f["g"])(t,e=>this.loadWeights(e))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=Se(t),a=this.weightPathPrefix||n,o=[];for(const c of e)o.push(...c.weights);const s=[],i=[];for(const c of e)for(const e of c.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):s.push(a+e+r);this.weightUrlConverter&&s.push(...await Promise.all(i));const u=await xe(s,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[o,Object(f["d"])(u)]}}function Se(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),a=n>t?e.substring(n):"";return[r+"/",a]}function Te(e){return null!=e.match(je.URL_SCHEME_REGEX)}je.URL_SCHEME_REGEX=/^https?:\/\//;const Ie=(e,t)=>{if("undefined"===typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every(e=>Te(e)):Te(e),n)return Ne(e,t)}return null};function Ne(e,t){return new je(e,t)}function Ce(e,t){return Ne(e,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */m.registerSaveRouter(Ie),m.registerLoadRouter(Ie);class $e{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class Ee{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}function Ae(e,t,n,r){if(1===arguments.length){const t=null!=e.modelTopology||null!=e.weightSpecs;return t?new $e(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new $e({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new $e({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})}function Re(e){return new Ee(e)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var _e=n("a3f7"),Fe=n("487b"),De=n("e22c"),Me=n("54ef"),Pe=n("c912");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Le(e,t,n){const r=Object(_e["a"])(e,"labels","confusionMatrix"),a=Object(_e["a"])(t,"predictions","confusionMatrix");E["b"](null==n||n>0&&Number.isInteger(n),()=>"If provided, numClasses must be a positive integer, but got "+n),E["b"](1===r.rank,()=>"Expected the rank of labels to be 1, but got "+r.rank),E["b"](1===a.rank,()=>"Expected the rank of predictions to be 1, but got "+a.rank),E["b"](r.shape[0]===a.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`),E["b"](n>0&&Number.isInteger(n),()=>"numClasses is required to be a positive integer, but got "+n);const o=Object(De["a"])(Object(re["a"])(r,"int32"),n),s=Object(De["a"])(Object(re["a"])(a,"int32"),n),i=Object(Pe["a"])(o),u=Object(Fe["a"])(i,s);return Object(re["a"])(u,"int32")}const Be=Object(Me["b"])({confusionMatrix_:Le});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ve=n("c05b"),ze=n("73b8"),We=n("05bb");
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let Ue;function Ge(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,o=!1,s=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!==typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement)o=!0;else if(null!=e.getContext)s=!0;else{if(!("undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was "+e.constructor.name);i=!0}if(a){const t=2;if(a&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}const u=Object(ze["c"])(Ve["ib"],p["a"].backendName);if(null!=u){const n={pixels:e},r={numChannels:t};return p["a"].runKernel(Ve["ib"],n,r)}const[c,l]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let d,h;if(s?d=e.getContext("2d").getImageData(0,0,c,l).data:r||n?d=e.data:(o||a||i)&&(null==Ue&&(Ue=document.createElement("canvas").getContext("2d")),Ue.canvas.width=c,Ue.canvas.height=l,Ue.drawImage(e,0,0,c,l),d=Ue.getImageData(0,0,c,l).data),4===t)h=new Int32Array(d);else{const e=c*l;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=d[4*n+e]}const f=[l,c,t];return Object(We["a"])(h,f,"int32")}function He(e){return null!=e&&e.data instanceof Uint8Array}function qe(){return"undefined"!==typeof window&&"undefined"!==typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")}function Ke(e){return null!=e&&0!==e.width&&0!==e.height}function Xe(e){return qe()&&!(e instanceof ImageBitmap)&&Ke(e)&&!He(e)}async function Ye(e,t=3){let n=null;if(Object(h["c"])().getBool("WRAP_TO_IMAGEBITMAP")&&Xe(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(r){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return Ge(n,t)}async function Qe(e,t){let n=Object(_e["a"])(e,"img","toPixels");if(!(e instanceof se["a"])){const e=n;n=Object(re["a"])(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,a]=n.shape.slice(0,2),o=2===n.rank?1:n.shape[2];if(o>4||2===o)throw new Error("toPixels only supports depth of size 1, 3 or 4 but got "+o);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const s=await n.data(),i="float32"===n.dtype?255:1,u=new Uint8ClampedArray(a*r*4);for(let c=0;c<r*a;++c){const e=[0,0,0,255];for(let r=0;r<o;r++){const t=s[c*o+r];if("float32"===n.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===n.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===o?(e[0]=t*i,e[1]=t*i,e[2]=t*i):e[r]=t*i}const t=4*c;u[t+0]=Math.round(e[0]),u[t+1]=Math.round(e[1]),u[t+2]=Math.round(e[2]),u[t+3]=Math.round(e[3])}if(null!=t){t.width=a,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}const Ze=Object(Me["b"])({fromPixels_:Ge});function Je(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===Object(E["O"])(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,o=a[a.length-1];let s=1;for(let d=0;d<a.length-1;++d)s*=a[d];const i=e.shape,u=a.slice();u.pop();let c=1;for(let d=o;d<n;++d)c*=i[d],u.push(i[d]);const l=[...Object(E["j"])(e.shape).map(e=>e/c),1].slice(0,o);return[u,s,c,l]}var et=n("a34f");
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tt(e,t,n){const r=e.shape.length;E["b"](r===t.length,()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`),E["b"](r===n.length,()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`);for(let a=0;a<r;++a)E["b"](t[a]+n[a]<=e.shape[a],()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`)}function nt(e){const t=[];let n=0;while(e>0)1&e&&t.push(n),e/=2,n++;return t}function rt(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function at(e,t,n,r){const a=[...e];for(let o=a.length;o<r.length;o++)a.push(1);for(let o=0;o<n;o++)0===o?a[t]=1:(a.splice(t,0,1),a.pop());return a}function ot(e,t,n){return n<=e?n:n-(t-1)}function st(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function it(e,t,n,r,a,o,s,i,u){const c=e.length;let l=new Array(c),d=new Array(c),p=new Array(c);if(t.length&&n>0){const u=t[0],c=n+1;l=ut(s,u,c,r,e),d=ct(i,u,c,a,e),p=at(o,u,c,e)}else for(let h=0;h<c;h++)l[h]=dt(s,r,o,e,h,u),d[h]=pt(i,a,o,e,h,u),p[h]=lt(o,h,u);return{begin:l,end:d,strides:p}}function ut(e,t,n,r,a){const o=[...a],s=st(n,t);for(let i=0;i<o.length;i++)if(s.indexOf(i)>-1)o[i]=0;else{const a=ot(t,n,i);let s=r[a];e&1<<a&&(s=0),o[i]=s}return o}function ct(e,t,n,r,a){const o=[...a],s=st(n,t);for(let i=0;i<o.length;i++)if(s.indexOf(i)>-1)o[i]=Number.MAX_SAFE_INTEGER;else{const a=ot(t,n,i);let s=r[a];e&1<<a&&(s=Number.MAX_SAFE_INTEGER),o[i]=s}for(let i=0;i<o.length;i++){const e=a[i];o[i]<0&&(o[i]+=e),o[i]=E["i"](0,o[i],a[i])}return o}function lt(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function dt(e,t,n,r,a,o){let s=t[a];const i=n[a]||1;(e&1<<a||o&1<<a||null==s)&&(s=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[a];return s<0&&(s+=u),s=E["i"](0,s,u-1),s}function pt(e,t,n,r,a,o){let s=t[a];const i=n[a]||1;(e&1<<a||o&1<<a||null==s)&&(s=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[a];return s<0&&(s+=u),s=i>0?E["i"](0,s,u):E["i"](-1,s,u-1),s}function ht(e,t,n){let r=n.length;for(let a=0;a<n.length;a++)if(n[a]>1){r=a;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function ft(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function mt(e,t,n){let r;const a=e.shape.length;let o;return r="number"===typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach(e=>{E["b"](-1!==e,()=>"slice() does not support negative begin indexing.")}),o=null==n?new Array(a).fill(-1):"number"===typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,o=o.map((t,n)=>t>=0?t:(E["b"](-1===t,()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`),e.shape[n]-r[n])),[r,o]}function bt(e,t,n,r,a,o,s,i,u){let c=t.slice(),l=n.slice(),d=r;null==r&&(d=new Array(c.length));const p=nt(s);if(p.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==s&&0!==i)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==s&&0!==u)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const h=e.length-c.length,f=nt(i),m=e.slice();f.forEach(e=>{c[e]=0,l[e]=1,m.splice(e,0,1)});const{begin:b,end:g,strides:y}=it(m,p,h,c,l,d,a,o,s);c=b,l=g,d=y;const x=nt(u);x.forEach(e=>{l[e]=c[e]+1,d[e]=1});const v=rt(c,l,d),O=v.filter((e,t)=>-1===x.indexOf(t)),w=d.every(e=>1===e);return{nonStrided:w,$begin:c,$end:l,$strides:d,size:v,newShape:m,outShape:O}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gt{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class yt{constructor(){this.classNameMap={}}static getMap(){return null==yt.instance&&(yt.instance=new yt),yt.instance}static register(e){yt.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function xt(e){Object(E["b"])(null!=e.className,()=>"Class being registered does not have the static className property defined."),Object(E["b"])("string"===typeof e.className,()=>"className is required to be a string, but got type "+typeof e.className),Object(E["b"])(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),yt.register(e)}var vt=n("76c2"),Ot=n("d565"),wt=n("eb7e");
/** @license See the LICENSE file. */
const kt="3.8.0";var jt=n("c04e"),St=n("9117"),Tt=n("c77c"),It=n("a5aa"),Nt=n("163a"),Ct=n("93b2"),$t=n("a09b"),Et=n("538e"),At=n("015f");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Rt extends gt{minimize(e,t=!1,n){const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map(e=>({name:e.name,tensor:a[e.name]}));this.applyGradients(e)}else this.applyGradients(a);return Object(jt["d"])(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Object(Et["f"])(e,t)}dispose(){null!=this.iterations_&&Object(jt["d"])(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Object(At["a"])(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for this optimizer class "+this.getClassName())}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Rt,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class _t extends Rt{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=p["a"].backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);t.forEach((t,n)=>{const r=p["a"].registeredVariables[t],a=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:t+"/accum_grad",variable:Object(jt["t"])(()=>Object($t["a"])(r).variable(a))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:t+"/accum_var",variable:Object(jt["t"])(()=>Object($t["a"])(r).variable(a))});const o=Array.isArray(e)?e[n].tensor:e[t];if(null==o)return;const s=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;Object(jt["t"])(()=>{const e=Object(St["a"])(Object(It["a"])(s,this.rho),Object(It["a"])(Object(Ct["a"])(o),1-this.rho)),t=Object(It["a"])(Object(Tt["a"])(Object(Nt["a"])(Object(St["a"])(i,this.epsilon)),Object(Nt["a"])(Object(St["a"])(s,this.epsilon))),o),n=Object(St["a"])(Object(It["a"])(i,this.rho),Object(It["a"])(Object(Ct["a"])(t),1-this.rho));s.assign(e),i.assign(n);const a=Object(St["a"])(Object(It["a"])(t,-this.learningRate),r);r.assign(a)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Object(jt["d"])(this.accumulatedGrads.map(e=>e.variable)),Object(jt["d"])(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t["learningRate"],t["rho"],t["epsilon"])}}_t.className="Adadelta",xt(_t);var Ft=n("46b8");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dt extends Rt{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);t.forEach((t,n)=>{const r=p["a"].registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:t+"/accumulator",variable:Object(jt["t"])(()=>Object(Ft["a"])(r.shape,this.initialAccumulatorValue).variable(e))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const o=this.accumulatedGrads[n].variable;Object(jt["t"])(()=>{const e=Object(St["a"])(o,Object(Ct["a"])(a));o.assign(e);const t=Object(St["a"])(Object(It["a"])(Object(Tt["a"])(a,Object(Nt["a"])(Object(St["a"])(e,p["a"].backend.epsilon()))),-this.learningRate),r);r.assign(t)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Object(jt["d"])(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map(e=>({originalName:e.name,variable:e.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t["learningRate"],t["initialAccumulatorValue"])}}Dt.className="Adagrad",xt(Dt);var Mt=n("c9f1"),Pt=n("a009");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Lt extends Rt{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Object(jt["t"])(()=>{this.accBeta1=Object(At["a"])(t).variable(),this.accBeta2=Object(At["a"])(n).variable()}),null==r&&(this.epsilon=p["a"].backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);Object(jt["t"])(()=>{const n=Object(Pt["a"])(1,this.accBeta1),r=Object(Pt["a"])(1,this.accBeta2);t.forEach((t,a)=>{const o=p["a"].registeredVariables[t],s=!1;null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:t+"/m",variable:Object(jt["t"])(()=>Object($t["a"])(o).variable(s))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:t+"/v",variable:Object(jt["t"])(()=>Object($t["a"])(o).variable(s))});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const u=this.accumulatedFirstMoment[a].variable,c=this.accumulatedSecondMoment[a].variable,l=Object(St["a"])(Object(It["a"])(u,this.beta1),Object(It["a"])(i,1-this.beta1)),d=Object(St["a"])(Object(It["a"])(c,this.beta2),Object(It["a"])(Object(Ct["a"])(i),1-this.beta2)),h=Object(Tt["a"])(l,n),f=Object(Tt["a"])(d,r);u.assign(l),c.assign(d);const m=Object(St["a"])(Object(It["a"])(Object(Tt["a"])(h,Object(St["a"])(Object(Nt["a"])(f),this.epsilon)),-this.learningRate),o);o.assign(m)}),this.accBeta1.assign(Object(It["a"])(this.accBeta1,this.beta1)),this.accBeta2.assign(Object(It["a"])(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Object(jt["d"])(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&Object(jt["d"])(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),Object(jt["t"])(()=>{this.accBeta1.assign(Object(Mt["a"])(this.beta1,this.iterations_+1)),this.accBeta2.assign(Object(Mt["a"])(this.beta2,this.iterations_+1))});const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t["learningRate"],t["beta1"],t["beta2"],t["epsilon"])}}Lt.className="Adam",xt(Lt);var Bt=n("8ae0"),Vt=n("09f4");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class zt extends Rt{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Object(jt["t"])(()=>{this.iteration=Object(At["a"])(0).variable(),this.accBeta1=Object(At["a"])(t).variable()}),null==r&&(this.epsilon=p["a"].backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);Object(jt["t"])(()=>{const n=Object(Pt["a"])(1,this.accBeta1),r=Object(Tt["a"])(-this.learningRate,Object(St["a"])(Object(It["a"])(this.iteration,this.decay),1));t.forEach((t,a)=>{const o=p["a"].registeredVariables[t],s=!1;null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:t+"/m",variable:Object($t["a"])(o).variable(s)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:t+"/v",variable:Object($t["a"])(o).variable(s)});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const u=this.accumulatedFirstMoment[a].variable,c=this.accumulatedWeightedInfNorm[a].variable,l=Object(St["a"])(Object(It["a"])(u,this.beta1),Object(It["a"])(i,1-this.beta1)),d=Object(It["a"])(c,this.beta2),h=Object(Bt["a"])(i),f=Object(Vt["a"])(d,h);u.assign(l),c.assign(f);const m=Object(St["a"])(Object(It["a"])(Object(Tt["a"])(r,n),Object(Tt["a"])(l,Object(St["a"])(f,this.epsilon))),o);o.assign(m)}),this.iteration.assign(Object(St["a"])(this.iteration,1)),this.accBeta1.assign(Object(It["a"])(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Object(jt["d"])(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&Object(jt["d"])(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t["learningRate"],t["beta1"],t["beta2"],t["epsilon"],t["decay"])}}zt.className="Adamax",xt(zt);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Wt extends Rt{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);t.forEach((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=p["a"].registeredVariables[t];Object(jt["t"])(()=>{const e=Object(St["a"])(Object(It["a"])(this.c,r),a);a.assign(e)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Object(jt["l"])(Object(At["a"])(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),0!==e.length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t["learningRate"])}}Wt.className="SGD",xt(Wt);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Ut extends Wt{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Object(At["a"])(this.momentum)}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);t.forEach((t,n)=>{const r=p["a"].registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:t+"/momentum",variable:Object(jt["t"])(()=>Object($t["a"])(r).variable(e))}}const a=this.accumulations[n].variable,o=Array.isArray(e)?e[n].tensor:e[t];null!=o&&Object(jt["t"])(()=>{let e;const t=Object(St["a"])(Object(It["a"])(this.m,a),o);e=this.useNesterov?Object(St["a"])(Object(It["a"])(this.c,Object(St["a"])(o,Object(It["a"])(t,this.m))),r):Object(St["a"])(Object(It["a"])(this.c,t),r),a.assign(t),r.assign(e)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Object(jt["d"])(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map(e=>({originalName:e.name,variable:e.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t["learningRate"],t["momentum"],t["useNesterov"])}}Ut.className="Momentum",xt(Ut);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Gt extends Rt{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=p["a"].backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);t.forEach((t,n)=>{const r=p["a"].registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:t+"/rms",variable:Object(jt["t"])(()=>Object($t["a"])(r).variable(a))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:t+"/momentum",variable:Object(jt["t"])(()=>Object($t["a"])(r).variable(a))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:t+"/mg",variable:Object(jt["t"])(()=>Object($t["a"])(r).variable(a))});const o=Array.isArray(e)?e[n].tensor:e[t];if(null==o)return;const s=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;Object(jt["t"])(()=>{const e=Object(St["a"])(Object(It["a"])(s,this.decay),Object(It["a"])(Object(Ct["a"])(o),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=Object(St["a"])(Object(It["a"])(t,this.decay),Object(It["a"])(o,1-this.decay)),u=Object(Tt["a"])(Object(It["a"])(o,this.learningRate),Object(Nt["a"])(Object(Pt["a"])(e,Object(St["a"])(Object(Ct["a"])(a),this.epsilon)))),c=Object(St["a"])(Object(It["a"])(i,this.momentum),u);s.assign(e),t.assign(a),i.assign(c);const l=Object(Pt["a"])(r,c);r.assign(l)}else{const e=Object(St["a"])(Object(It["a"])(s,this.decay),Object(It["a"])(Object(Ct["a"])(o),1-this.decay)),t=Object(St["a"])(Object(It["a"])(i,this.momentum),Object(Tt["a"])(Object(It["a"])(o,this.learningRate),Object(Nt["a"])(Object(St["a"])(e,this.epsilon))));s.assign(e),i.assign(t);const n=Object(Pt["a"])(r,t);r.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Object(jt["d"])(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&Object(jt["d"])(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&Object(jt["d"])(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t["learningRate"],t["decay"],t["momentum"],t["epsilon"],t["centered"])}}Gt.className="RMSProp",xt(Gt);var Ht=n("23bf"),qt=n("132b"),Kt=n("57e0");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Xt{static sgd(e){return new Wt(e)}static momentum(e,t,n=!1){return new Ut(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new Gt(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new Lt(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new _t(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new zt(e,t,n,r,a)}static adagrad(e,t=.1){return new Dt(e,t)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yt={sgd:Xt.sgd,momentum:Xt.momentum,adadelta:Xt.adadelta,adagrad:Xt.adagrad,rmsprop:Xt.rmsprop,adamax:Xt.adamax,adam:Xt.adam},Qt=(()=>"undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:e=>e())();
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zt(){return new Promise(e=>Qt(()=>e()))}var Jt=n("36e5"),en=n("526f");
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function tn(e,t){const n=e[0].length;e.forEach((e,t)=>{E["b"](e.length===n,()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`)}),E["b"](t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const r=e[0];e.forEach((e,a)=>{for(let o=0;o<n;o++)E["b"](o===t||e[o]===r[o],()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`)})}function nn(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var rn=n("b818"),an=n("4749");
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const on=30;function sn(e){return e<=on?e:Object(E["G"])(e,Math.floor(Math.sqrt(e)))}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function un(e,t,n){const r=n*("number"===typeof e?e:e[0]),a=t*("number"===typeof e?e:e[1]);return[r,a]}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cn(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function ln(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2===1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function dn(e,t,n,r=!0){const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let o=1;o<e.length;++o)o<=t.length?r?a.push(t[o-1]*e[o]):a.push(e[o]/t[o-1]):a.push(e[o]);return a}function pn(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function hn(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fn=1.7580993408473768,mn=1.0507009873554805,bn=.3275911,gn=.254829592,yn=-.284496736,xn=1.421413741,vn=-1.453152027,On=1.061405429;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wn(...e){Object(h["c"])().getBool("IS_TEST")||console.warn(...e)}function kn(...e){Object(h["c"])().getBool("IS_TEST")||console.log(...e)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jn(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Sn(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Tn(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=0;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function In(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=2;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function Nn(e,t){const n=e[2*t],r=e[2*t+1];return{real:n,imag:r}}function Cn(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function $n(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const o=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(o),r[a]=Math.sin(o)}return{real:n,imag:r}}function En(e,t,n){const r=(n?2:-2)*Math.PI*(e/t),a=Math.cos(r),o=Math.sin(r);return{real:a,imag:o}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const An="->",Rn=/->/g,_n=",",Fn="...";function Dn(e,t){e=e.replace(/\s/g,"");const n=(e.length-e.replace(Rn,"").length)/An.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${An}").`);const[r,a]=e.split(An);Object(E["b"])(-1===r.indexOf(Fn),()=>`The ellipsis notation ("${Fn}") is not supported yet.`);const o=r.split(_n),s=o.length;if(t!==s)throw new Error(`Expected ${s} input tensors, received ${t}`);if(s>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let p=0;p<a.length;++p){const e=a[p];if(!o.some(t=>-1!==t.indexOf(e)))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===i.indexOf(e)&&i.push(e)}for(let p=0;p<r.length;++p){const e=r[p];-1===i.indexOf(e)&&e!==_n&&i.push(e)}const u=new Array(o.length);for(let p=0;p<s;++p){if(new Set(o[p].split("")).size!==o[p].length)throw new Error(`Found duplicate axes in input component ${o[p]}. Support for duplicate axes in input is not implemented yet.`);u[p]=[];for(let e=0;e<o[p].length;++e)u[p].push(i.indexOf(o[p][e]))}const c=i.length,l=a.length,d=[];for(let p=l;p<c;++p)d.push(p);return{allDims:i,summedDims:d,idDims:u}}function Mn(e,t){let n=new Array(e);n.fill(-1);for(let a=0;a<t.length;++a)n[t[a]]=a;const r=[];for(let a=0;a<e;++a)-1===n[a]&&r.push(a);return n=n.filter(e=>-1!==e),{permutationIndices:n,expandDims:r}}function Pn(e,t,n){const r=new Array(e);for(let a=0;a<n.length;++a){const e=n[a].shape;for(let n=0;n<t[a].length;++n)void 0===r[t[a][n]]?r[t[a][n]]=e[n]:Object(E["b"])(r[t[a][n]]===e[n],()=>`Expected dimension ${r[t[a][n]]} at axis ${n} of input shaped ${JSON.stringify(e)}, but got dimension `+e[n])}}function Ln(e,t){const n=e,r=[];let a=0;0===e.length&&n.push(-1),a=e.length+1;for(let s=0;s<a;++s)r.push([]);const o=[];for(let s=0;s<n.length;++s){const e=n[s],a=Vn(t,e);for(const t of a)-1===o.indexOf(t)&&(r[s].push(t),o.push(t))}return{path:n,steps:r}}function Bn(e){return e.every((e,t)=>e===t)}function Vn(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function zn(e,t,n=0){let r=[];if("number"===typeof t)Object(E["b"])(e.shape[n]%t===0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(e.shape[n]/t);else{const a=t.reduce((e,t)=>(-1===t&&(e+=1),e),0);Object(E["b"])(a<=1,()=>"There should be only one negative value in split array.");const o=t.indexOf(-1);if(-1!==o){const r=t.reduce((e,t)=>t>0?e+t:e);t[o]=e.shape[n]-r}Object(E["b"])(e.shape[n]===t.reduce((e,t)=>e+t),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wn(e,t){let n,r=!1;e<=on?(n=e,r=!0):n=Object(E["G"])(e,Math.floor(Math.sqrt(e)));while(!r)n>t||n===e?r=!0:n=Object(E["G"])(e,n+1);return n}function Un(e,t,n){const r=[],a=e.length;for(let o=0;o<a;o++)o!==t?r.push(e[o]):r.push(n);return r}function Gn(e,t,n,r){const a=t.shape.length,o=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>o)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${o}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let d=0;d<r;++d)if(e.shape[d]!==t.shape[d])throw new Error(`x.shape[${d}]: ${e.shape[d]} should be equal to indices.shape[${d}]: ${t.shape[d]}.`);const s=e.shape[n],i=[];let u=1,c=1,l=1;for(let d=0;d<r;++d)i.push(e.shape[d]),u*=e.shape[d];for(let d=r;d<n;d++)i.push(e.shape[d]),c*=e.shape[d];for(let d=r;d<a;d++)i.push(t.shape[d]);for(let d=n+1;d<o;d++)i.push(e.shape[d]),l*=e.shape[d];return{batchSize:u,sliceSize:l,outerSize:c,dimSize:s,outputShape:i}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hn(e){try{return e.map(e=>Object(wt["decodeString"])(e))}catch(Zn){throw new Error("Failed to decode encoded string bytes into utf-8, error: "+Zn)}}function qn(e){return e.map(e=>Object(wt["encodeString"])(e))}var Kn=n("7ed6"),Xn=n("8389"),Yn=n("0280"),Qn=n("8b87")},ffb3:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),o=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e){const t=Object(o["a"])(e,"x","sigmoid"),n={x:t};return r["a"].runKernel(a["Bc"],n)}const u=Object(s["b"])({sigmoid_:i})}});
//# sourceMappingURL=09c74260c1ac4f19ba74.worker.js.map